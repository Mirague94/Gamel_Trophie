

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Jan 06 13:44:35 2020

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39  0000                     
    40                           ; Version 1.42
    41                           ; Generated 13/04/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4550 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	smallconst
    76  000800                     __psmallconst:
    77                           	opt stack 0
    78  000800  00                 	db	0
    79  000801                     _s_digits:
    80                           	opt stack 0
    81  000801  30                 	db	48
    82  000802  31                 	db	49
    83  000803  32                 	db	50
    84  000804  33                 	db	51
    85  000805  34                 	db	52
    86  000806  35                 	db	53
    87  000807  36                 	db	54
    88  000808  37                 	db	55
    89  000809  38                 	db	56
    90  00080A  39                 	db	57
    91  00080B  61                 	db	97
    92  00080C  62                 	db	98
    93  00080D  63                 	db	99
    94  00080E  64                 	db	100
    95  00080F  65                 	db	101
    96  000810  66                 	db	102
    97  000811  00                 	db	0
    98  000812                     __end_of_s_digits:
    99                           	opt stack 0
   100  0000                     _T3CONbits	set	4017
   101  0000                     _PIE2bits	set	4000
   102  0000                     _PIR2bits	set	4001
   103  0000                     _TMR3L	set	4018
   104  0000                     _TMR3H	set	4019
   105  0000                     _T3CON	set	4017
   106  0000                     _TMR2	set	4044
   107  0000                     _PIE1bits	set	3997
   108  0000                     _PIR1bits	set	3998
   109  0000                     _TMR1L	set	4046
   110  0000                     _TMR1H	set	4047
   111  0000                     _T1CONbits	set	4045
   112  0000                     _T1CON	set	4045
   113  0000                     _T0CONbits	set	4053
   114  0000                     _INTCONbits	set	4082
   115  0000                     _TMR0L	set	4054
   116  0000                     _TMR0H	set	4055
   117  0000                     _T0CON	set	4053
   118  0000                     _CCP2CONbits	set	4026
   119  0000                     _CCPR2L	set	4027
   120  0000                     _CCP1CONbits	set	4029
   121  0000                     _CCPR1L	set	4030
   122  0000                     _T2CONbits	set	4042
   123  0000                     _PR2	set	4043
   124  0000                     _CCP2CON	set	4026
   125  0000                     _TRISCbits	set	3988
   126  0000                     _CCP1CON	set	4029
   127  0000                     _T2CON	set	4042
   128  0000                     _PORTDbits	set	3971
   129  0000                     _PORTD	set	3971
   130  0000                     _TRISD	set	3989
   131  0000                     _ADRESL	set	4035
   132  0000                     _ADRESH	set	4036
   133  0000                     _ADCON0	set	4034
   134  0000                     _ADCON0bits	set	4034
   135  0000                     _ADCON2	set	4032
   136  0000                     _TRISE	set	3990
   137  0000                     _TRISA	set	3986
   138  0000                     _ADCON1	set	4033
   139  0000                     _PORTEbits	set	3972
   140  0000                     _TRISEbits	set	3990
   141  000812                     STR_1:
   142  000812  25                 	db	37
   143  000813  33                 	db	51	;'3'
   144  000814  64                 	db	100	;'d'
   145  000815  20                 	db	32
   146  000816  25                 	db	37
   147  000817  33                 	db	51	;'3'
   148  000818  64                 	db	100	;'d'
   149  000819  20                 	db	32
   150  00081A  25                 	db	37
   151  00081B  33                 	db	51	;'3'
   152  00081C  64                 	db	100	;'d'
   153  00081D  20                 	db	32
   154  00081E  25                 	db	37
   155  00081F  33                 	db	51	;'3'
   156  000820  64                 	db	100	;'d'
   157  000821  00                 	db	0
   158  000822                     STR_3:
   159  000822  4D                 	db	77	;'M'
   160  000823  44                 	db	68	;'D'
   161  000824  20                 	db	32
   162  000825  25                 	db	37
   163  000826  34                 	db	52	;'4'
   164  000827  64                 	db	100	;'d'
   165  000828  00                 	db	0
   166  000829                     STR_2:
   167  000829  4D                 	db	77	;'M'
   168  00082A  47                 	db	71	;'G'
   169  00082B  20                 	db	32
   170  00082C  25                 	db	37
   171  00082D  34                 	db	52	;'4'
   172  00082E  64                 	db	100	;'d'
   173  00082F  00                 	db	0
   174  000830  25                 	db	37
   175  000831  53                 	db	83	;'S'
   176  000832  00                 	db	0
   177  000833  25                 	db	37
   178  000834  64                 	db	100	;'d'
   179  000835  00                 	db	0
   180  0000                     
   181                           ; #config settings
   182  000836  00                 	db	0	; dummy byte at the end
   183  0000                     
   184                           	psect	cinit
   185  002304                     __pcinit:
   186                           	opt stack 0
   187  002304                     start_initialization:
   188                           	opt stack 0
   189  002304                     __initialization:
   190                           	opt stack 0
   191  002304                     end_of_initialization:
   192                           	opt stack 0
   193  002304                     __end_of__initialization:
   194                           	opt stack 0
   195  002304  0E00               	movlw	low (__Lmediumconst shr (0+16))
   196  002306  6EF8               	movwf	tblptru,c
   197  002308  0100               	movlb	0
   198  00230A  EFD6  F00A         	goto	_main	;jump to C main() function
   199                           tblptru	equ	0xFF8
   200                           
   201                           	psect	cstackBANK0
   202  000060                     __pcstackBANK0:
   203                           	opt stack 0
   204  000060                     lcd_printf@buf:
   205                           	opt stack 0
   206                           
   207                           ; 33 bytes @ 0x0
   208  000060                     	ds	33
   209  000081                     lcd_printf@ramstring:
   210                           	opt stack 0
   211                           
   212                           ; 2 bytes @ 0x21
   213  000081                     	ds	2
   214  000083                     lcd_printf@sign_char:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0x23
   218  000083                     	ds	1
   219  000084                     lcd_printf@romstring:
   220                           	opt stack 0
   221                           
   222                           ; 2 bytes @ 0x24
   223  000084                     	ds	2
   224  000086                     lcd_printf@q:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0x26
   228  000086                     	ds	2
   229  000088                     lcd_printf@sign:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0x28
   233  000088                     	ds	1
   234  000089                     lcd_printf@k:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x29
   238  000089                     	ds	2
   239  00008B                     lcd_printf@have_sign:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x2B
   243  00008B                     	ds	1
   244  00008C                     lcd_printf@prefix_cnt:
   245                           	opt stack 0
   246                           
   247                           ; 1 bytes @ 0x2C
   248  00008C                     	ds	1
   249  00008D                     lcd_printf@i:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x2D
   253  00008D                     	ds	1
   254  00008E                     lcd_printf@w:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x2E
   258  00008E                     	ds	1
   259  00008F                     lcd_printf@digit_cnt:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x2F
   263  00008F                     	ds	1
   264  000090                     lcd_printf@larg:
   265                           	opt stack 0
   266                           
   267                           ; 4 bytes @ 0x30
   268  000090                     	ds	4
   269  000094                     lcd_printf@size:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0x34
   273  000094                     	ds	1
   274  000095                     lcd_printf@have_precision:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x35
   278  000095                     	ds	1
   279  000096                     lcd_printf@x:
   280                           	opt stack 0
   281                           
   282                           ; 3 bytes @ 0x36
   283  000096                     	ds	3
   284  000099                     lcd_printf@space_cnt:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0x39
   288  000099                     	ds	1
   289  00009A                     lcd_printf@cval:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0x3A
   293  00009A                     	ds	1
   294  00009B                     lcd_printf@n:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x3B
   298  00009B                     	ds	2
   299  00009D                     lcd_printf@ap:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x3D
   303  00009D                     	ds	2
   304  00009F                     lcd_printf@flags:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x3F
   308  00009F                     	ds	1
   309  0000A0                     lcd_printf@precision:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x40
   313  0000A0                     	ds	1
   314  0000A1                     lcd_printf@width:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x41
   318  0000A1                     	ds	1
   319  0000A2                     lcd_printf@c:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x42
   323  0000A2                     	ds	1
   324  0000A3                     main@n1:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x43
   328  0000A3                     	ds	2
   329  0000A5                     main@n4:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x45
   333  0000A5                     	ds	2
   334  0000A7                     main@debutDeCourse:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x47
   338  0000A7                     	ds	2
   339  0000A9                     main@finDeCourse:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x49
   343  0000A9                     	ds	2
   344  0000AB                     main@n2:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x4B
   348  0000AB                     	ds	2
   349  0000AD                     main@n3:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x4D
   353  0000AD                     	ds	2
   354  0000AF                     main@vitesseMax:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x4F
   358  0000AF                     	ds	2
   359  0000B1                     main@moteurG:
   360                           	opt stack 0
   361                           
   362                           ; 3 bytes @ 0x51
   363  0000B1                     	ds	3
   364  0000B4                     main@moteurD:
   365                           	opt stack 0
   366                           
   367                           ; 3 bytes @ 0x54
   368  0000B4                     	ds	3
   369  0000B7                     _main$1635:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x57
   373  0000B7                     	ds	2
   374                           tblptru	equ	0xFF8
   375                           
   376                           	psect	cstackCOMRAM
   377  000001                     __pcstackCOMRAM:
   378                           	opt stack 0
   379  000001                     ?_adc_read:
   380                           	opt stack 0
   381  000001                     ?___ftpack:
   382                           	opt stack 0
   383  000001                     ?___fttol:
   384                           	opt stack 0
   385  000001                     ?___lldiv:
   386                           	opt stack 0
   387  000001                     ?___llmod:
   388                           	opt stack 0
   389  000001                     adc_init@numero_dernier_canal:
   390                           	opt stack 0
   391  000001                     lcd_write_cmd_data@c:
   392                           	opt stack 0
   393  000001                     pwm_init@nb_canaux:
   394                           	opt stack 0
   395  000001                     ___ftpack@arg:
   396                           	opt stack 0
   397  000001                     ___ftge@ff1:
   398                           	opt stack 0
   399  000001                     ___fttol@f1:
   400                           	opt stack 0
   401  000001                     ___lldiv@dividend:
   402                           	opt stack 0
   403  000001                     ___llmod@dividend:
   404                           	opt stack 0
   405                           
   406                           ; 4 bytes @ 0x0
   407  000001                     	ds	1
   408  000002                     lcd_write_data_busy@c:
   409                           	opt stack 0
   410  000002                     lcd_write_cmd_busy@c:
   411                           	opt stack 0
   412  000002                     pwm_init@period:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x1
   416  000002                     	ds	1
   417  000003                     ??_lcd_init:
   418  000003                     ??_adc_read:
   419  000003                     lcd_position@colonne:
   420                           	opt stack 0
   421  000003                     lcd_repete_n@c:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x2
   425  000003                     	ds	1
   426  000004                     lcd_position@ligne:
   427                           	opt stack 0
   428  000004                     lcd_repete_n@n:
   429                           	opt stack 0
   430  000004                     ___ftpack@exp:
   431                           	opt stack 0
   432  000004                     ___ftge@ff2:
   433                           	opt stack 0
   434                           
   435                           ; 3 bytes @ 0x3
   436  000004                     	ds	1
   437  000005                     ??___fttol:
   438  000005                     adc_read@numero_canal:
   439                           	opt stack 0
   440  000005                     lcd_position@address:
   441                           	opt stack 0
   442  000005                     ___ftpack@sign:
   443                           	opt stack 0
   444  000005                     ___lldiv@divisor:
   445                           	opt stack 0
   446  000005                     ___llmod@divisor:
   447                           	opt stack 0
   448                           
   449                           ; 4 bytes @ 0x4
   450  000005                     	ds	1
   451  000006                     ??___ftpack:
   452  000006                     lcd_putc@lettre:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x5
   456  000006                     	ds	1
   457  000007                     ??___ftge:
   458                           
   459                           ; 1 bytes @ 0x6
   460  000007                     	ds	2
   461  000009                     ?___awtoft:
   462                           	opt stack 0
   463  000009                     ?___lwtoft:
   464                           	opt stack 0
   465  000009                     ___llmod@counter:
   466                           	opt stack 0
   467  000009                     ___awtoft@c:
   468                           	opt stack 0
   469  000009                     ___lwtoft@c:
   470                           	opt stack 0
   471  000009                     ___lldiv@quotient:
   472                           	opt stack 0
   473                           
   474                           ; 4 bytes @ 0x8
   475  000009                     	ds	1
   476  00000A                     ___fttol@sign1:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x9
   480  00000A                     	ds	1
   481  00000B                     ___fttol@lval:
   482                           	opt stack 0
   483                           
   484                           ; 4 bytes @ 0xA
   485  00000B                     	ds	1
   486  00000C                     ___awtoft@sign:
   487                           	opt stack 0
   488                           
   489                           ; 1 bytes @ 0xB
   490  00000C                     	ds	1
   491  00000D                     ?___ftneg:
   492                           	opt stack 0
   493  00000D                     ___lldiv@counter:
   494                           	opt stack 0
   495  00000D                     ___ftneg@f1:
   496                           	opt stack 0
   497                           
   498                           ; 3 bytes @ 0xC
   499  00000D                     	ds	2
   500  00000F                     ___fttol@exp1:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0xE
   504  00000F                     	ds	1
   505  000010                     ?___ftadd:
   506                           	opt stack 0
   507  000010                     pwm_setdc1@cycles_etat_haut:
   508                           	opt stack 0
   509  000010                     pwm_setdc2@cycles_etat_haut:
   510                           	opt stack 0
   511  000010                     ___ftadd@f1:
   512                           	opt stack 0
   513                           
   514                           ; 3 bytes @ 0xF
   515  000010                     	ds	2
   516  000012                     ??_pwm_setdc1:
   517  000012                     ??_pwm_setdc2:
   518                           
   519                           ; 1 bytes @ 0x11
   520  000012                     	ds	1
   521  000013                     ___ftadd@f2:
   522                           	opt stack 0
   523                           
   524                           ; 3 bytes @ 0x12
   525  000013                     	ds	3
   526  000016                     ??___ftadd:
   527                           
   528                           ; 1 bytes @ 0x15
   529  000016                     	ds	3
   530  000019                     ___ftadd@sign:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x18
   534  000019                     	ds	1
   535  00001A                     ___ftadd@exp2:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x19
   539  00001A                     	ds	1
   540  00001B                     ___ftadd@exp1:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x1A
   544  00001B                     	ds	1
   545  00001C                     ?___ftmul:
   546                           	opt stack 0
   547  00001C                     ___ftmul@f1:
   548                           	opt stack 0
   549                           
   550                           ; 3 bytes @ 0x1B
   551  00001C                     	ds	3
   552  00001F                     ___ftmul@f2:
   553                           	opt stack 0
   554                           
   555                           ; 3 bytes @ 0x1E
   556  00001F                     	ds	3
   557  000022                     ??___ftmul:
   558                           
   559                           ; 1 bytes @ 0x21
   560  000022                     	ds	3
   561  000025                     ___ftmul@exp:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x24
   565  000025                     	ds	1
   566  000026                     ___ftmul@f3_as_product:
   567                           	opt stack 0
   568                           
   569                           ; 3 bytes @ 0x25
   570  000026                     	ds	3
   571  000029                     ___ftmul@cntr:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x28
   575  000029                     	ds	1
   576  00002A                     ___ftmul@sign:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x29
   580  00002A                     	ds	1
   581  00002B                     ?___ftdiv:
   582                           	opt stack 0
   583  00002B                     ___ftdiv@f1:
   584                           	opt stack 0
   585                           
   586                           ; 3 bytes @ 0x2A
   587  00002B                     	ds	3
   588  00002E                     ___ftdiv@f2:
   589                           	opt stack 0
   590                           
   591                           ; 3 bytes @ 0x2D
   592  00002E                     	ds	3
   593  000031                     ??___ftdiv:
   594                           
   595                           ; 1 bytes @ 0x30
   596  000031                     	ds	3
   597  000034                     ___ftdiv@cntr:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x33
   601  000034                     	ds	1
   602  000035                     ___ftdiv@f3:
   603                           	opt stack 0
   604                           
   605                           ; 3 bytes @ 0x34
   606  000035                     	ds	3
   607  000038                     ___ftdiv@exp:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x37
   611  000038                     	ds	1
   612  000039                     ___ftdiv@sign:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x38
   616  000039                     	ds	1
   617  00003A                     ?_lcd_printf:
   618                           	opt stack 0
   619  00003A                     lcd_printf@f:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x39
   623  00003A                     	ds	10
   624  000044                     ??_lcd_printf:
   625                           
   626                           ; 1 bytes @ 0x43
   627  000044                     	ds	7
   628  00004B                     ??_main:
   629                           
   630                           ; 1 bytes @ 0x4A
   631  00004B                     	ds	1
   632                           tblptru	equ	0xFF8
   633                           
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   636 ;;
   637 ;; *************** function _main *****************
   638 ;; Defined at:
   639 ;;		line 13 in file "main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  moteurD         3   84[BANK0 ] PTR void [1]
   644 ;;  moteurG         3   81[BANK0 ] PTR void [1]
   645 ;;  vitesseMax      2   79[BANK0 ] int 
   646 ;;  n3              2   77[BANK0 ] int 
   647 ;;  n2              2   75[BANK0 ] int 
   648 ;;  finDeCourse     2   73[BANK0 ] int 
   649 ;;  debutDeCours    2   71[BANK0 ] int 
   650 ;;  n4              2   69[BANK0 ] int 
   651 ;;  n1              2   67[BANK0 ] int 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   661 ;;      Params:         0       0       0       0       0       0       0       0       0
   662 ;;      Locals:         0      22       0       0       0       0       0       0       0
   663 ;;      Temps:          1       0       0       0       0       0       0       0       0
   664 ;;      Totals:         1      22       0       0       0       0       0       0       0
   665 ;;Total ram usage:       23 bytes
   666 ;; Hardware stack levels required when called:    6
   667 ;; This function calls:
   668 ;;		___awtoft
   669 ;;		___ftadd
   670 ;;		___ftdiv
   671 ;;		___ftmul
   672 ;;		___ftneg
   673 ;;		___fttol
   674 ;;		_adc_init
   675 ;;		_adc_read
   676 ;;		_lcd_init
   677 ;;		_lcd_position
   678 ;;		_lcd_printf
   679 ;;		_pwm_init
   680 ;;		_pwm_setdc1
   681 ;;		_pwm_setdc2
   682 ;; This function is called by:
   683 ;;		Startup code after reset
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text0
   688  0015AC                     __ptext0:
   689                           	opt stack 0
   690  0015AC                     _main:
   691                           	opt stack 25
   692                           
   693                           ;main.c: 15: int n1,n2,n3,n4;
   694                           ;main.c: 16: adc_init(5);
   695                           
   696                           ;incstack = 0
   697  0015AC  0E05               	movlw	5
   698  0015AE  ECFB  F00E         	call	_adc_init
   699                           
   700                           ;main.c: 17: lcd_init();
   701  0015B2  EC4E  F00F         	call	_lcd_init	;wreg free
   702                           
   703                           ;main.c: 18: int finDeCourse=1, debutDeCourse;
   704  0015B6  0E00               	movlw	0
   705  0015B8  0100               	movlb	0	; () banked
   706  0015BA  6FAA               	movwf	(main@finDeCourse+1)& (0+255),b
   707  0015BC  0E01               	movlw	1
   708  0015BE  6FA9               	movwf	main@finDeCourse& (0+255),b
   709                           
   710                           ; BSR set to: 0
   711                           ;main.c: 19: double moteurG, moteurD;
   712                           ;main.c: 20: int vitesseMax = 200;
   713  0015C0  0E00               	movlw	0
   714  0015C2  0100               	movlb	0	; () banked
   715  0015C4  6FB0               	movwf	(main@vitesseMax+1)& (0+255),b
   716  0015C6  0EC8               	movlw	200
   717  0015C8  6FAF               	movwf	main@vitesseMax& (0+255),b
   718                           
   719                           ; BSR set to: 0
   720                           ;main.c: 22: TRISEbits.TRISE1 = 1;
   721  0015CA  8296               	bsf	3990,1,c	;volatile
   722                           
   723                           ; BSR set to: 0
   724                           ;main.c: 23: TRISEbits.TRISE2 = 1;
   725  0015CC  8496               	bsf	3990,2,c	;volatile
   726  0015CE                     l25:
   727                           
   728                           ;main.c: 27: {
   729                           ;main.c: 28: n1=adc_read(1);
   730  0015CE  0E01               	movlw	1
   731  0015D0  EC11  F011         	call	_adc_read
   732  0015D4  C001  F0A3         	movff	?_adc_read,main@n1
   733  0015D8  C002  F0A4         	movff	?_adc_read+1,main@n1+1
   734                           
   735                           ;main.c: 29: n2=adc_read(3);
   736  0015DC  0E03               	movlw	3
   737  0015DE  EC11  F011         	call	_adc_read
   738  0015E2  C001  F0AB         	movff	?_adc_read,main@n2
   739  0015E6  C002  F0AC         	movff	?_adc_read+1,main@n2+1
   740                           
   741                           ;main.c: 30: n3=adc_read(4);
   742  0015EA  0E04               	movlw	4
   743  0015EC  EC11  F011         	call	_adc_read
   744  0015F0  C001  F0AD         	movff	?_adc_read,main@n3
   745  0015F4  C002  F0AE         	movff	?_adc_read+1,main@n3+1
   746                           
   747                           ;main.c: 31: n4=adc_read(5);
   748  0015F8  0E05               	movlw	5
   749  0015FA  EC11  F011         	call	_adc_read
   750  0015FE  C001  F0A5         	movff	?_adc_read,main@n4
   751  001602  C002  F0A6         	movff	?_adc_read+1,main@n4+1
   752                           
   753                           ;main.c: 33: debutDeCourse = PORTEbits.RE1;
   754  001606  A284               	btfss	3972,1,c	;volatile
   755  001608  D003               	goto	u3740
   756  00160A  6A4B               	clrf	??_main& (0+255),c
   757  00160C  2A4B               	incf	??_main& (0+255),f,c
   758  00160E  D001               	goto	u3748
   759  001610                     u3740:
   760  001610  6A4B               	clrf	??_main& (0+255),c
   761  001612                     u3748:
   762  001612  504B               	movf	??_main,w,c
   763  001614  0100               	movlb	0	; () banked
   764  001616  6FA7               	movwf	main@debutDeCourse& (0+255),b
   765  001618  6BA8               	clrf	(main@debutDeCourse+1)& (0+255),b
   766                           
   767                           ; BSR set to: 0
   768                           ;main.c: 34: finDeCourse = PORTEbits.RE2;
   769  00161A  A484               	btfss	3972,2,c	;volatile
   770  00161C  D003               	goto	u3750
   771  00161E  6A4B               	clrf	??_main& (0+255),c
   772  001620  2A4B               	incf	??_main& (0+255),f,c
   773  001622  D001               	goto	u3758
   774  001624                     u3750:
   775  001624  6A4B               	clrf	??_main& (0+255),c
   776  001626                     u3758:
   777  001626  504B               	movf	??_main,w,c
   778  001628  0100               	movlb	0	; () banked
   779  00162A  6FA9               	movwf	main@finDeCourse& (0+255),b
   780  00162C  6BAA               	clrf	(main@finDeCourse+1)& (0+255),b
   781                           
   782                           ; BSR set to: 0
   783                           ;main.c: 36: if (debutDeCourse == 1)
   784  00162E  0100               	movlb	0	; () banked
   785  001630  05A7               	decf	main@debutDeCourse& (0+255),w,b
   786  001632  0100               	movlb	0	; () banked
   787  001634  11A8               	iorwf	(main@debutDeCourse+1)& (0+255),w,b
   788  001636  A4D8               	btfss	status,2,c
   789  001638  D005               	goto	l26
   790                           
   791                           ; BSR set to: 0
   792                           ;main.c: 37: {
   793                           ;main.c: 38: pwm_init (150,2);
   794  00163A  0E02               	movlw	2
   795  00163C  6E01               	movwf	pwm_init@nb_canaux,c
   796  00163E  0E96               	movlw	150
   797  001640  EC99  F010         	call	_pwm_init
   798  001644                     l26:
   799                           
   800                           ;main.c: 39: }
   801                           ;main.c: 41: moteurG = vitesseMax * (1023-(double)n3)/1024;
   802  001644  C0AF  F009         	movff	main@vitesseMax,___awtoft@c
   803  001648  C0B0  F00A         	movff	main@vitesseMax+1,___awtoft@c+1
   804  00164C  ECB5  F010         	call	___awtoft	;wreg free
   805  001650  C009  F01F         	movff	?___awtoft,___ftmul@f2
   806  001654  C00A  F020         	movff	?___awtoft+1,___ftmul@f2+1
   807  001658  C00B  F021         	movff	?___awtoft+2,___ftmul@f2+2
   808  00165C  0EC0               	movlw	192
   809  00165E  6E13               	movwf	___ftadd@f2,c
   810  001660  0E7F               	movlw	127
   811  001662  6E14               	movwf	___ftadd@f2+1,c
   812  001664  0E44               	movlw	68
   813  001666  6E15               	movwf	___ftadd@f2+2,c
   814  001668  C0AD  F009         	movff	main@n3,___awtoft@c
   815  00166C  C0AE  F00A         	movff	main@n3+1,___awtoft@c+1
   816  001670  ECB5  F010         	call	___awtoft	;wreg free
   817  001674  C009  F00D         	movff	?___awtoft,___ftneg@f1
   818  001678  C00A  F00E         	movff	?___awtoft+1,___ftneg@f1+1
   819  00167C  C00B  F00F         	movff	?___awtoft+2,___ftneg@f1+2
   820  001680  EC38  F011         	call	___ftneg	;wreg free
   821  001684  C00D  F010         	movff	?___ftneg,___ftadd@f1
   822  001688  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
   823  00168C  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
   824  001690  EC67  F00C         	call	___ftadd	;wreg free
   825  001694  C010  F01C         	movff	?___ftadd,___ftmul@f1
   826  001698  C011  F01D         	movff	?___ftadd+1,___ftmul@f1+1
   827  00169C  C012  F01E         	movff	?___ftadd+2,___ftmul@f1+2
   828  0016A0  ECB7  F00D         	call	___ftmul	;wreg free
   829  0016A4  C01C  F02B         	movff	?___ftmul,___ftdiv@f1
   830  0016A8  C01D  F02C         	movff	?___ftmul+1,___ftdiv@f1+1
   831  0016AC  C01E  F02D         	movff	?___ftmul+2,___ftdiv@f1+2
   832  0016B0  0E00               	movlw	0
   833  0016B2  6E2E               	movwf	___ftdiv@f2,c
   834  0016B4  0E80               	movlw	128
   835  0016B6  6E2F               	movwf	___ftdiv@f2+1,c
   836  0016B8  0E44               	movlw	68
   837  0016BA  6E30               	movwf	___ftdiv@f2+2,c
   838  0016BC  EC31  F00E         	call	___ftdiv	;wreg free
   839  0016C0  C02B  F0B1         	movff	?___ftdiv,main@moteurG
   840  0016C4  C02C  F0B2         	movff	?___ftdiv+1,main@moteurG+1
   841  0016C8  C02D  F0B3         	movff	?___ftdiv+2,main@moteurG+2
   842                           
   843                           ;main.c: 42: moteurD = vitesseMax * (1023-(double)n2)/1024;
   844  0016CC  C0AF  F009         	movff	main@vitesseMax,___awtoft@c
   845  0016D0  C0B0  F00A         	movff	main@vitesseMax+1,___awtoft@c+1
   846  0016D4  ECB5  F010         	call	___awtoft	;wreg free
   847  0016D8  C009  F01F         	movff	?___awtoft,___ftmul@f2
   848  0016DC  C00A  F020         	movff	?___awtoft+1,___ftmul@f2+1
   849  0016E0  C00B  F021         	movff	?___awtoft+2,___ftmul@f2+2
   850  0016E4  0EC0               	movlw	192
   851  0016E6  6E13               	movwf	___ftadd@f2,c
   852  0016E8  0E7F               	movlw	127
   853  0016EA  6E14               	movwf	___ftadd@f2+1,c
   854  0016EC  0E44               	movlw	68
   855  0016EE  6E15               	movwf	___ftadd@f2+2,c
   856  0016F0  C0AB  F009         	movff	main@n2,___awtoft@c
   857  0016F4  C0AC  F00A         	movff	main@n2+1,___awtoft@c+1
   858  0016F8  ECB5  F010         	call	___awtoft	;wreg free
   859  0016FC  C009  F00D         	movff	?___awtoft,___ftneg@f1
   860  001700  C00A  F00E         	movff	?___awtoft+1,___ftneg@f1+1
   861  001704  C00B  F00F         	movff	?___awtoft+2,___ftneg@f1+2
   862  001708  EC38  F011         	call	___ftneg	;wreg free
   863  00170C  C00D  F010         	movff	?___ftneg,___ftadd@f1
   864  001710  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
   865  001714  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
   866  001718  EC67  F00C         	call	___ftadd	;wreg free
   867  00171C  C010  F01C         	movff	?___ftadd,___ftmul@f1
   868  001720  C011  F01D         	movff	?___ftadd+1,___ftmul@f1+1
   869  001724  C012  F01E         	movff	?___ftadd+2,___ftmul@f1+2
   870  001728  ECB7  F00D         	call	___ftmul	;wreg free
   871  00172C  C01C  F02B         	movff	?___ftmul,___ftdiv@f1
   872  001730  C01D  F02C         	movff	?___ftmul+1,___ftdiv@f1+1
   873  001734  C01E  F02D         	movff	?___ftmul+2,___ftdiv@f1+2
   874  001738  0E00               	movlw	0
   875  00173A  6E2E               	movwf	___ftdiv@f2,c
   876  00173C  0E80               	movlw	128
   877  00173E  6E2F               	movwf	___ftdiv@f2+1,c
   878  001740  0E44               	movlw	68
   879  001742  6E30               	movwf	___ftdiv@f2+2,c
   880  001744  EC31  F00E         	call	___ftdiv	;wreg free
   881  001748  C02B  F0B4         	movff	?___ftdiv,main@moteurD
   882  00174C  C02C  F0B5         	movff	?___ftdiv+1,main@moteurD+1
   883  001750  C02D  F0B6         	movff	?___ftdiv+2,main@moteurD+2
   884                           
   885                           ;main.c: 44: pwm_setdc1(moteurG);
   886  001754  C0B1  F001         	movff	main@moteurG,___fttol@f1
   887  001758  C0B2  F002         	movff	main@moteurG+1,___fttol@f1+1
   888  00175C  C0B3  F003         	movff	main@moteurG+2,___fttol@f1+2
   889  001760  EC3D  F00D         	call	___fttol	;wreg free
   890  001764  C001  F010         	movff	?___fttol,pwm_setdc1@cycles_etat_haut
   891  001768  C002  F011         	movff	?___fttol+1,pwm_setdc1@cycles_etat_haut+1
   892  00176C  ECFC  F010         	call	_pwm_setdc1	;wreg free
   893                           
   894                           ;main.c: 45: pwm_setdc2(moteurD);
   895  001770  C0B4  F001         	movff	main@moteurD,___fttol@f1
   896  001774  C0B5  F002         	movff	main@moteurD+1,___fttol@f1+1
   897  001778  C0B6  F003         	movff	main@moteurD+2,___fttol@f1+2
   898  00177C  EC3D  F00D         	call	___fttol	;wreg free
   899  001780  C001  F010         	movff	?___fttol,pwm_setdc2@cycles_etat_haut
   900  001784  C002  F011         	movff	?___fttol+1,pwm_setdc2@cycles_etat_haut+1
   901  001788  ECE7  F010         	call	_pwm_setdc2	;wreg free
   902                           
   903                           ;main.c: 48: lcd_position(0,0);
   904  00178C  0E00               	movlw	0
   905  00178E  6E03               	movwf	lcd_position@colonne,c
   906  001790  0E00               	movlw	0
   907  001792  EC4A  F011         	call	_lcd_position
   908                           
   909                           ;main.c: 49: lcd_printf("%3d %3d %3d %3d",n1,n2,n3,n4);
   910  001796  0E12               	movlw	low STR_1
   911  001798  6E3A               	movwf	lcd_printf@f,c
   912  00179A  0E08               	movlw	high STR_1
   913  00179C  6E3B               	movwf	lcd_printf@f+1,c
   914  00179E  C0A3  F03C         	movff	main@n1,?_lcd_printf+2
   915  0017A2  C0A4  F03D         	movff	main@n1+1,?_lcd_printf+3
   916  0017A6  C0AB  F03E         	movff	main@n2,?_lcd_printf+4
   917  0017AA  C0AC  F03F         	movff	main@n2+1,?_lcd_printf+5
   918  0017AE  C0AD  F040         	movff	main@n3,?_lcd_printf+6
   919  0017B2  C0AE  F041         	movff	main@n3+1,?_lcd_printf+7
   920  0017B6  C0A5  F042         	movff	main@n4,?_lcd_printf+8
   921  0017BA  C0A6  F043         	movff	main@n4+1,?_lcd_printf+9
   922  0017BE  EC1C  F004         	call	_lcd_printf	;wreg free
   923                           
   924                           ;main.c: 50: lcd_position(1,0);
   925  0017C2  0E00               	movlw	0
   926  0017C4  6E03               	movwf	lcd_position@colonne,c
   927  0017C6  0E01               	movlw	1
   928  0017C8  EC4A  F011         	call	_lcd_position
   929                           
   930                           ;main.c: 51: lcd_printf("MG %4d",(int) moteurG);
   931  0017CC  C0B1  F001         	movff	main@moteurG,___fttol@f1
   932  0017D0  C0B2  F002         	movff	main@moteurG+1,___fttol@f1+1
   933  0017D4  C0B3  F003         	movff	main@moteurG+2,___fttol@f1+2
   934  0017D8  EC3D  F00D         	call	___fttol	;wreg free
   935  0017DC  C001  F0B7         	movff	?___fttol,_main$1635
   936  0017E0  C002  F0B8         	movff	?___fttol+1,_main$1635+1
   937                           
   938                           ;main.c: 51: lcd_printf("MG %4d",(int) moteurG);
   939  0017E4  0E29               	movlw	low STR_2
   940  0017E6  6E3A               	movwf	lcd_printf@f,c
   941  0017E8  0E08               	movlw	high STR_2
   942  0017EA  6E3B               	movwf	lcd_printf@f+1,c
   943  0017EC  C0B7  F03C         	movff	_main$1635,?_lcd_printf+2
   944  0017F0  C0B8  F03D         	movff	_main$1635+1,?_lcd_printf+3
   945  0017F4  EC1C  F004         	call	_lcd_printf	;wreg free
   946                           
   947                           ;main.c: 52: lcd_position(1,8);
   948  0017F8  0E08               	movlw	8
   949  0017FA  6E03               	movwf	lcd_position@colonne,c
   950  0017FC  0E01               	movlw	1
   951  0017FE  EC4A  F011         	call	_lcd_position
   952                           
   953                           ;main.c: 53: lcd_printf("MD %4d",(int) moteurD);
   954  001802  C0B4  F001         	movff	main@moteurD,___fttol@f1
   955  001806  C0B5  F002         	movff	main@moteurD+1,___fttol@f1+1
   956  00180A  C0B6  F003         	movff	main@moteurD+2,___fttol@f1+2
   957  00180E  EC3D  F00D         	call	___fttol	;wreg free
   958  001812  C001  F0B7         	movff	?___fttol,_main$1635
   959  001816  C002  F0B8         	movff	?___fttol+1,_main$1635+1
   960                           
   961                           ;main.c: 53: lcd_printf("MD %4d",(int) moteurD);
   962  00181A  0E22               	movlw	low STR_3
   963  00181C  6E3A               	movwf	lcd_printf@f,c
   964  00181E  0E08               	movlw	high STR_3
   965  001820  6E3B               	movwf	lcd_printf@f+1,c
   966  001822  C0B7  F03C         	movff	_main$1635,?_lcd_printf+2
   967  001826  C0B8  F03D         	movff	_main$1635+1,?_lcd_printf+3
   968  00182A  EC1C  F004         	call	_lcd_printf	;wreg free
   969                           
   970                           ;main.c: 55: if (finDeCourse == 0)
   971  00182E  0100               	movlb	0	; () banked
   972  001830  51A9               	movf	main@finDeCourse& (0+255),w,b
   973  001832  0100               	movlb	0	; () banked
   974  001834  11AA               	iorwf	(main@finDeCourse+1)& (0+255),w,b
   975  001836  A4D8               	btfss	status,2,c
   976  001838  D6CA               	goto	l25
   977                           
   978                           ; BSR set to: 0
   979                           ;main.c: 56: {
   980                           ;main.c: 57: moteurG = 0;
   981  00183A  0E00               	movlw	0
   982  00183C  0100               	movlb	0	; () banked
   983  00183E  6FB1               	movwf	main@moteurG& (0+255),b
   984  001840  0E00               	movlw	0
   985  001842  0100               	movlb	0	; () banked
   986  001844  6FB2               	movwf	(main@moteurG+1)& (0+255),b
   987  001846  0E00               	movlw	0
   988  001848  0100               	movlb	0	; () banked
   989  00184A  6FB3               	movwf	(main@moteurG+2)& (0+255),b
   990                           
   991                           ;main.c: 58: moteurD = 0;
   992  00184C  0E00               	movlw	0
   993  00184E  0100               	movlb	0	; () banked
   994  001850  6FB4               	movwf	main@moteurD& (0+255),b
   995  001852  0E00               	movlw	0
   996  001854  0100               	movlb	0	; () banked
   997  001856  6FB5               	movwf	(main@moteurD+1)& (0+255),b
   998  001858  0E00               	movlw	0
   999  00185A  0100               	movlb	0	; () banked
  1000  00185C  6FB6               	movwf	(main@moteurD+2)& (0+255),b
  1001                           
  1002                           ; BSR set to: 0
  1003                           ;main.c: 59: lcd_position(1,0);
  1004  00185E  0E00               	movlw	0
  1005  001860  6E03               	movwf	lcd_position@colonne,c
  1006  001862  0E01               	movlw	1
  1007  001864  EC4A  F011         	call	_lcd_position
  1008                           
  1009                           ;main.c: 60: lcd_printf("MG %4d",(int) moteurG);
  1010  001868  C0B1  F001         	movff	main@moteurG,___fttol@f1
  1011  00186C  C0B2  F002         	movff	main@moteurG+1,___fttol@f1+1
  1012  001870  C0B3  F003         	movff	main@moteurG+2,___fttol@f1+2
  1013  001874  EC3D  F00D         	call	___fttol	;wreg free
  1014  001878  C001  F0B7         	movff	?___fttol,_main$1635
  1015  00187C  C002  F0B8         	movff	?___fttol+1,_main$1635+1
  1016                           
  1017                           ;main.c: 60: lcd_printf("MG %4d",(int) moteurG);
  1018  001880  0E29               	movlw	low STR_2
  1019  001882  6E3A               	movwf	lcd_printf@f,c
  1020  001884  0E08               	movlw	high STR_2
  1021  001886  6E3B               	movwf	lcd_printf@f+1,c
  1022  001888  C0B7  F03C         	movff	_main$1635,?_lcd_printf+2
  1023  00188C  C0B8  F03D         	movff	_main$1635+1,?_lcd_printf+3
  1024  001890  EC1C  F004         	call	_lcd_printf	;wreg free
  1025                           
  1026                           ;main.c: 61: lcd_position(1,8);
  1027  001894  0E08               	movlw	8
  1028  001896  6E03               	movwf	lcd_position@colonne,c
  1029  001898  0E01               	movlw	1
  1030  00189A  EC4A  F011         	call	_lcd_position
  1031                           
  1032                           ;main.c: 62: lcd_printf("MD %4d",(int) moteurD);
  1033  00189E  C0B4  F001         	movff	main@moteurD,___fttol@f1
  1034  0018A2  C0B5  F002         	movff	main@moteurD+1,___fttol@f1+1
  1035  0018A6  C0B6  F003         	movff	main@moteurD+2,___fttol@f1+2
  1036  0018AA  EC3D  F00D         	call	___fttol	;wreg free
  1037  0018AE  C001  F0B7         	movff	?___fttol,_main$1635
  1038  0018B2  C002  F0B8         	movff	?___fttol+1,_main$1635+1
  1039                           
  1040                           ;main.c: 62: lcd_printf("MD %4d",(int) moteurD);
  1041  0018B6  0E22               	movlw	low STR_3
  1042  0018B8  6E3A               	movwf	lcd_printf@f,c
  1043  0018BA  0E08               	movlw	high STR_3
  1044  0018BC  6E3B               	movwf	lcd_printf@f+1,c
  1045  0018BE  C0B7  F03C         	movff	_main$1635,?_lcd_printf+2
  1046  0018C2  C0B8  F03D         	movff	_main$1635+1,?_lcd_printf+3
  1047  0018C6  EC1C  F004         	call	_lcd_printf	;wreg free
  1048                           
  1049                           ;main.c: 63: break;
  1050  0018CA  EF00  F000         	goto	start
  1051  0018CE                     __end_of_main:
  1052                           	opt stack 0
  1053                           tblptru	equ	0xFF8
  1054                           status	equ	0xFD8
  1055                           
  1056 ;; *************** function _pwm_setdc2 *****************
  1057 ;; Defined at:
  1058 ;;		line 102 in file "iut_pwm.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  cycles_etat_    2   15[COMRAM] unsigned int 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1072 ;;      Params:         2       0       0       0       0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1074 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1075 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1076 ;;Total ram usage:        4 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text1
  1086  0021CE                     __ptext1:
  1087                           	opt stack 0
  1088  0021CE                     _pwm_setdc2:
  1089                           	opt stack 30
  1090                           
  1091                           ;iut_pwm.c: 103: CCPR2L = cycles_etat_haut >> 2;
  1092                           
  1093                           ;incstack = 0
  1094  0021CE  C010  F012         	movff	pwm_setdc2@cycles_etat_haut,??_pwm_setdc2
  1095  0021D2  C011  F013         	movff	pwm_setdc2@cycles_etat_haut+1,??_pwm_setdc2+1
  1096  0021D6  90D8               	bcf	status,0,c
  1097  0021D8  3213               	rrcf	??_pwm_setdc2+1,f,c
  1098  0021DA  3212               	rrcf	??_pwm_setdc2,f,c
  1099  0021DC  90D8               	bcf	status,0,c
  1100  0021DE  3213               	rrcf	??_pwm_setdc2+1,f,c
  1101  0021E0  3212               	rrcf	??_pwm_setdc2,f,c
  1102  0021E2  5012               	movf	??_pwm_setdc2,w,c
  1103  0021E4  6EBB               	movwf	4027,c	;volatile
  1104                           
  1105                           ;iut_pwm.c: 104: CCP2CONbits.DC2B = cycles_etat_haut;
  1106  0021E6  C010  F012         	movff	pwm_setdc2@cycles_etat_haut,??_pwm_setdc2
  1107  0021EA  3A12               	swapf	??_pwm_setdc2,f,c
  1108  0021EC  50BA               	movf	4026,w,c	;volatile
  1109  0021EE  1812               	xorwf	??_pwm_setdc2,w,c
  1110  0021F0  0BCF               	andlw	-49
  1111  0021F2  1812               	xorwf	??_pwm_setdc2,w,c
  1112  0021F4  6EBA               	movwf	4026,c	;volatile
  1113  0021F6  0012               	return		;funcret
  1114  0021F8                     __end_of_pwm_setdc2:
  1115                           	opt stack 0
  1116                           tblptru	equ	0xFF8
  1117                           status	equ	0xFD8
  1118                           
  1119 ;; *************** function _pwm_setdc1 *****************
  1120 ;; Defined at:
  1121 ;;		line 87 in file "iut_pwm.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  cycles_etat_    2   15[COMRAM] unsigned int 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1135 ;;      Params:         2       0       0       0       0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1137 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1138 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1139 ;;Total ram usage:        4 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text2
  1149  0021F8                     __ptext2:
  1150                           	opt stack 0
  1151  0021F8                     _pwm_setdc1:
  1152                           	opt stack 30
  1153                           
  1154                           ;iut_pwm.c: 88: CCPR1L = cycles_etat_haut >> 2;
  1155                           
  1156                           ;incstack = 0
  1157  0021F8  C010  F012         	movff	pwm_setdc1@cycles_etat_haut,??_pwm_setdc1
  1158  0021FC  C011  F013         	movff	pwm_setdc1@cycles_etat_haut+1,??_pwm_setdc1+1
  1159  002200  90D8               	bcf	status,0,c
  1160  002202  3213               	rrcf	??_pwm_setdc1+1,f,c
  1161  002204  3212               	rrcf	??_pwm_setdc1,f,c
  1162  002206  90D8               	bcf	status,0,c
  1163  002208  3213               	rrcf	??_pwm_setdc1+1,f,c
  1164  00220A  3212               	rrcf	??_pwm_setdc1,f,c
  1165  00220C  5012               	movf	??_pwm_setdc1,w,c
  1166  00220E  6EBE               	movwf	4030,c	;volatile
  1167                           
  1168                           ;iut_pwm.c: 89: CCP1CONbits.DC1B = cycles_etat_haut;
  1169  002210  C010  F012         	movff	pwm_setdc1@cycles_etat_haut,??_pwm_setdc1
  1170  002214  3A12               	swapf	??_pwm_setdc1,f,c
  1171  002216  50BD               	movf	4029,w,c	;volatile
  1172  002218  1812               	xorwf	??_pwm_setdc1,w,c
  1173  00221A  0BCF               	andlw	-49
  1174  00221C  1812               	xorwf	??_pwm_setdc1,w,c
  1175  00221E  6EBD               	movwf	4029,c	;volatile
  1176  002220  0012               	return		;funcret
  1177  002222                     __end_of_pwm_setdc1:
  1178                           	opt stack 0
  1179                           tblptru	equ	0xFF8
  1180                           status	equ	0xFD8
  1181                           
  1182 ;; *************** function _pwm_init *****************
  1183 ;; Defined at:
  1184 ;;		line 51 in file "iut_pwm.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  period          1    wreg     unsigned char 
  1187 ;;  nb_canaux       1    0[COMRAM] unsigned char 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  period          1    1[COMRAM] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2, status,0
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1199 ;;      Params:         1       0       0       0       0       0       0       0       0
  1200 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1202 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1203 ;;Total ram usage:        2 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text3
  1213  002132                     __ptext3:
  1214                           	opt stack 0
  1215  002132                     _pwm_init:
  1216                           	opt stack 30
  1217                           
  1218                           ;incstack = 0
  1219                           ;pwm_init@period stored from wreg
  1220  002132  6E02               	movwf	pwm_init@period,c
  1221                           
  1222                           ;iut_pwm.c: 52: T2CON = 1;
  1223  002134  0E01               	movlw	1
  1224  002136  6ECA               	movwf	4042,c	;volatile
  1225                           
  1226                           ;iut_pwm.c: 53: if (nb_canaux >= 1) {
  1227  002138  5001               	movf	pwm_init@nb_canaux,w,c
  1228  00213A  B4D8               	btfsc	status,2,c
  1229  00213C  D004               	goto	l2845
  1230                           
  1231                           ;iut_pwm.c: 54: CCP1CON = 0b00001100;
  1232  00213E  0E0C               	movlw	12
  1233  002140  6EBD               	movwf	4029,c	;volatile
  1234                           
  1235                           ;iut_pwm.c: 55: TRISCbits.TRISC2 = 0;
  1236  002142  9494               	bcf	3988,2,c	;volatile
  1237                           
  1238                           ;iut_pwm.c: 56: } else {
  1239  002144  D002               	goto	l2847
  1240  002146                     l2845:
  1241                           
  1242                           ;iut_pwm.c: 57: CCP1CON = 0;
  1243  002146  0E00               	movlw	0
  1244  002148  6EBD               	movwf	4029,c	;volatile
  1245  00214A                     l2847:
  1246                           
  1247                           ;iut_pwm.c: 58: }
  1248                           ;iut_pwm.c: 59: if (nb_canaux >= 2) {
  1249  00214A  0E01               	movlw	1
  1250  00214C  6401               	cpfsgt	pwm_init@nb_canaux,c
  1251  00214E  D004               	goto	l2853
  1252                           
  1253                           ;iut_pwm.c: 60: CCP2CON = 0b00001100;
  1254  002150  0E0C               	movlw	12
  1255  002152  6EBA               	movwf	4026,c	;volatile
  1256                           
  1257                           ;iut_pwm.c: 61: TRISCbits.TRISC1 = 0;
  1258  002154  9294               	bcf	3988,1,c	;volatile
  1259                           
  1260                           ;iut_pwm.c: 62: } else {
  1261  002156  D002               	goto	l2855
  1262  002158                     l2853:
  1263                           
  1264                           ;iut_pwm.c: 63: CCP2CON = 0;
  1265  002158  0E00               	movlw	0
  1266  00215A  6EBA               	movwf	4026,c	;volatile
  1267  00215C                     l2855:
  1268                           
  1269                           ;iut_pwm.c: 64: }
  1270                           ;iut_pwm.c: 65: PR2 = period;
  1271  00215C  C002  FFCB         	movff	pwm_init@period,4043	;volatile
  1272                           
  1273                           ;iut_pwm.c: 66: if (nb_canaux > 0) {
  1274  002160  5001               	movf	pwm_init@nb_canaux,w,c
  1275  002162  B4D8               	btfsc	status,2,c
  1276  002164  0012               	return	
  1277                           
  1278                           ;iut_pwm.c: 67: T2CONbits.TMR2ON = 1;
  1279  002166  84CA               	bsf	4042,2,c	;volatile
  1280  002168  0012               	return	
  1281  00216A                     __end_of_pwm_init:
  1282                           	opt stack 0
  1283                           tblptru	equ	0xFF8
  1284                           status	equ	0xFD8
  1285                           
  1286 ;; *************** function _lcd_printf *****************
  1287 ;; Defined at:
  1288 ;;		line 220 in file "iut_lcd.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  f               2   57[COMRAM] PTR const unsigned char 
  1291 ;;		 -> STR_7(3), STR_6(3), STR_5(7), STR_4(7), 
  1292 ;;		 -> STR_3(7), STR_2(7), STR_1(16), 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  x               3   54[BANK0 ] float 
  1295 ;;  k               2   41[BANK0 ] unsigned int 
  1296 ;;  w               1   46[BANK0 ] unsigned char 
  1297 ;;  i               1   45[BANK0 ] unsigned char 
  1298 ;;  have_sign       1   43[BANK0 ] unsigned char 
  1299 ;;  sign            1   40[BANK0 ] unsigned char 
  1300 ;;  buf            33    0[BANK0 ] unsigned char [33]
  1301 ;;  q               2   38[BANK0 ] PTR unsigned char 
  1302 ;;		 -> lcd_printf@buf(33), 
  1303 ;;  digit_cnt       1   47[BANK0 ] unsigned char 
  1304 ;;  prefix_cnt      1   44[BANK0 ] unsigned char 
  1305 ;;  sign_char       1   35[BANK0 ] unsigned char 
  1306 ;;  larg            4   48[BANK0 ] unsigned long 
  1307 ;;  n               2   59[BANK0 ] int 
  1308 ;;  romstring       2   36[BANK0 ] PTR far unsigned char 
  1309 ;;  ramstring       2   33[BANK0 ] PTR unsigned char 
  1310 ;;  width           1   65[BANK0 ] unsigned char 
  1311 ;;  precision       1   64[BANK0 ] unsigned char 
  1312 ;;  flags           1   63[BANK0 ] unsigned char 
  1313 ;;  cval            1   58[BANK0 ] unsigned char 
  1314 ;;  space_cnt       1   57[BANK0 ] unsigned char 
  1315 ;;  have_precisi    1   53[BANK0 ] unsigned char 
  1316 ;;  size            1   52[BANK0 ] unsigned char 
  1317 ;;  ap              2   61[BANK0 ] PTR void [1]
  1318 ;;		 -> ?_lcd_printf(1), 
  1319 ;;  c               1   66[BANK0 ] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1329 ;;      Params:        10       0       0       0       0       0       0       0       0
  1330 ;;      Locals:         0      67       0       0       0       0       0       0       0
  1331 ;;      Temps:          7       0       0       0       0       0       0       0       0
  1332 ;;      Totals:        17      67       0       0       0       0       0       0       0
  1333 ;;Total ram usage:       84 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    5
  1336 ;; This function calls:
  1337 ;;		___ftadd
  1338 ;;		___ftdiv
  1339 ;;		___ftge
  1340 ;;		___ftmul
  1341 ;;		___ftneg
  1342 ;;		___fttol
  1343 ;;		___lldiv
  1344 ;;		___llmod
  1345 ;;		___lwtoft
  1346 ;;		_lcd_putc
  1347 ;;		_lcd_repete_n
  1348 ;;		_lcd_write_data_busy
  1349 ;; This function is called by:
  1350 ;;		_main
  1351 ;;		_lcd_puti
  1352 ;;		_lcd_putrs
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text4
  1357  000838                     __ptext4:
  1358                           	opt stack 0
  1359  000838                     _lcd_printf:
  1360                           	opt stack 25
  1361                           
  1362                           ;iut_lcd.c: 221: va_list ap;
  1363                           ;iut_lcd.c: 222: unsigned char c;
  1364                           ;iut_lcd.c: 225: *ap = __va_start();
  1365                           
  1366                           ;incstack = 0
  1367  000838  0E3C               	movlw	low (?_lcd_printf+2)
  1368  00083A  0100               	movlb	0	; () banked
  1369  00083C  6F9D               	movwf	lcd_printf@ap& (0+255),b
  1370  00083E  0E00               	movlw	high (?_lcd_printf+2)
  1371  000840  0100               	movlb	0	; () banked
  1372  000842  6F9E               	movwf	(lcd_printf@ap+1)& (0+255),b
  1373  000844  EFC8  F00A         	goto	L1
  1374  000848                     l2867:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;iut_lcd.c: 227: if (c == '%') {
  1378  000848  0E25               	movlw	37
  1379  00084A  0100               	movlb	0	; () banked
  1380  00084C  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1381  00084E  A4D8               	btfss	status,2,c
  1382  000850  EFC2  F00A         	goto	l3413
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;iut_lcd.c: 228: unsigned char flags = 0;
  1386  000854  0E00               	movlw	0
  1387  000856  0100               	movlb	0	; () banked
  1388  000858  6F9F               	movwf	lcd_printf@flags& (0+255),b
  1389                           
  1390                           ;iut_lcd.c: 229: unsigned char width = 0;
  1391  00085A  0E00               	movlw	0
  1392  00085C  0100               	movlb	0	; () banked
  1393  00085E  6FA1               	movwf	lcd_printf@width& (0+255),b
  1394                           
  1395                           ;iut_lcd.c: 230: unsigned char precision = 0;
  1396  000860  0E00               	movlw	0
  1397  000862  0100               	movlb	0	; () banked
  1398  000864  6FA0               	movwf	lcd_printf@precision& (0+255),b
  1399                           
  1400                           ;iut_lcd.c: 231: unsigned char have_precision = 0;
  1401  000866  0E00               	movlw	0
  1402  000868  0100               	movlb	0	; () banked
  1403  00086A  6F95               	movwf	lcd_printf@have_precision& (0+255),b
  1404                           
  1405                           ;iut_lcd.c: 232: unsigned char size = 0;
  1406  00086C  0E00               	movlw	0
  1407  00086E  0100               	movlb	0	; () banked
  1408  000870  6F94               	movwf	lcd_printf@size& (0+255),b
  1409  000872  D020               	goto	l2887
  1410  000874                     l2873:
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;iut_lcd.c: 278: flags |= 0x1;
  1414  000874  0100               	movlb	0	; () banked
  1415  000876  819F               	bsf	lcd_printf@flags& (0+255),0,b
  1416                           
  1417                           ;iut_lcd.c: 279: break;
  1418  000878  D01D               	goto	l2887
  1419  00087A                     l2875:
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;iut_lcd.c: 281: flags |= 0x2;
  1423  00087A  0100               	movlb	0	; () banked
  1424  00087C  839F               	bsf	lcd_printf@flags& (0+255),1,b
  1425                           
  1426                           ;iut_lcd.c: 282: break;
  1427  00087E  D01A               	goto	l2887
  1428  000880                     l2877:
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;iut_lcd.c: 284: flags |= 0x4;
  1432  000880  0100               	movlb	0	; () banked
  1433  000882  859F               	bsf	lcd_printf@flags& (0+255),2,b
  1434                           
  1435                           ;iut_lcd.c: 285: break;
  1436  000884  D017               	goto	l2887
  1437  000886                     l2879:
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;iut_lcd.c: 287: flags |= 0x8;
  1441  000886  0100               	movlb	0	; () banked
  1442  000888  879F               	bsf	lcd_printf@flags& (0+255),3,b
  1443                           
  1444                           ;iut_lcd.c: 288: break;
  1445  00088A  D014               	goto	l2887
  1446  00088C                     l2881:
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;iut_lcd.c: 290: flags |= 0x10;
  1450  00088C  0100               	movlb	0	; () banked
  1451  00088E  899F               	bsf	lcd_printf@flags& (0+255),4,b
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;iut_lcd.c: 292: }
  1455                           
  1456                           ;iut_lcd.c: 291: break;
  1457  000890  D011               	goto	l2887
  1458  000892                     l2885:
  1459                           
  1460                           ; BSR set to: 0
  1461  000892  0100               	movlb	0	; () banked
  1462  000894  51A2               	movf	lcd_printf@c& (0+255),w,b
  1463                           
  1464                           ; Switch size 1, requested type "space"
  1465                           ; Number of cases is 5, Range of values is 32 to 48
  1466                           ; switch strategies available:
  1467                           ; Name         Instructions Cycles
  1468                           ; simple_byte           16     9 (average)
  1469                           ;	Chosen strategy is simple_byte
  1470  000896  0A20               	xorlw	32	; case 32
  1471  000898  B4D8               	btfsc	status,2,c
  1472  00089A  D7F2               	goto	l2877
  1473  00089C  0A03               	xorlw	3	; case 35
  1474  00089E  B4D8               	btfsc	status,2,c
  1475  0008A0  D7F2               	goto	l2879
  1476  0008A2  0A08               	xorlw	8	; case 43
  1477  0008A4  B4D8               	btfsc	status,2,c
  1478  0008A6  D7E9               	goto	l2875
  1479  0008A8  0A06               	xorlw	6	; case 45
  1480  0008AA  B4D8               	btfsc	status,2,c
  1481  0008AC  D7E3               	goto	l2873
  1482  0008AE  0A1D               	xorlw	29	; case 48
  1483  0008B0  B4D8               	btfsc	status,2,c
  1484  0008B2  D7EC               	goto	l2881
  1485  0008B4                     l2887:
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;iut_lcd.c: 293: c = *++f;
  1489  0008B4  4A3A               	infsnz	lcd_printf@f,f,c
  1490  0008B6  2A3B               	incf	lcd_printf@f+1,f,c
  1491  0008B8  C03A  FFF6         	movff	lcd_printf@f,tblptrl
  1492  0008BC  C03B  FFF7         	movff	lcd_printf@f+1,tblptrh
  1493  0008C0                     	if	0	;tblptru may be non-zero
  1494  0008C0                     	endif
  1495  0008C0                     	if	0	;tblptru may be non-zero
  1496  0008C0                     	endif
  1497  0008C0  0008               	tblrd		*
  1498  0008C2  CFF5 F0A2          	movff	tablat,lcd_printf@c
  1499                           
  1500                           ; BSR set to: 0
  1501                           
  1502                           ; BSR set to: 0
  1503  0008C6  0E2D               	movlw	45
  1504  0008C8  0100               	movlb	0	; () banked
  1505  0008CA  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1506  0008CC  B4D8               	btfsc	status,2,c
  1507  0008CE  D7E1               	goto	l2885
  1508                           
  1509                           ; BSR set to: 0
  1510  0008D0  0E2B               	movlw	43
  1511  0008D2  0100               	movlb	0	; () banked
  1512  0008D4  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1513  0008D6  B4D8               	btfsc	status,2,c
  1514  0008D8  D7DC               	goto	l2885
  1515                           
  1516                           ; BSR set to: 0
  1517  0008DA  0E20               	movlw	32
  1518  0008DC  0100               	movlb	0	; () banked
  1519  0008DE  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1520  0008E0  B4D8               	btfsc	status,2,c
  1521  0008E2  D7D7               	goto	l2885
  1522                           
  1523                           ; BSR set to: 0
  1524  0008E4  0E23               	movlw	35
  1525  0008E6  0100               	movlb	0	; () banked
  1526  0008E8  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1527  0008EA  B4D8               	btfsc	status,2,c
  1528  0008EC  D7D2               	goto	l2885
  1529                           
  1530                           ; BSR set to: 0
  1531  0008EE  0E30               	movlw	48
  1532  0008F0  0100               	movlb	0	; () banked
  1533  0008F2  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1534  0008F4  B4D8               	btfsc	status,2,c
  1535  0008F6  D7CD               	goto	l2885
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;iut_lcd.c: 294: }
  1539                           ;iut_lcd.c: 296: if (c == '*') {
  1540                           
  1541                           ; BSR set to: 0
  1542  0008F8  0E2A               	movlw	42
  1543  0008FA  0100               	movlb	0	; () banked
  1544  0008FC  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1545  0008FE  A4D8               	btfss	status,2,c
  1546  000900  D024               	goto	l2913
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;iut_lcd.c: 297: n = (*(int *)__va_arg((*(int **)ap), (int)0));
  1550  000902  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  1551  000906  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  1552  00090A  CFDE F09B          	movff	postinc2,lcd_printf@n
  1553  00090E  CFDD F09C          	movff	postdec2,lcd_printf@n+1
  1554                           
  1555                           ; BSR set to: 0
  1556  000912  0E02               	movlw	2
  1557  000914  0100               	movlb	0	; () banked
  1558  000916  279D               	addwf	lcd_printf@ap& (0+255),f,b
  1559  000918  0E00               	movlw	0
  1560  00091A  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;iut_lcd.c: 298: if (n < 0) {
  1564  00091C  0100               	movlb	0	; () banked
  1565  00091E  AF9C               	btfss	(lcd_printf@n+1)& (0+255),7,b
  1566  000920  D008               	goto	l133
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;iut_lcd.c: 299: flags |= 0x1;
  1570  000922  0100               	movlb	0	; () banked
  1571  000924  819F               	bsf	lcd_printf@flags& (0+255),0,b
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;iut_lcd.c: 300: width = -n;
  1575  000926  0100               	movlb	0	; () banked
  1576  000928  519B               	movf	lcd_printf@n& (0+255),w,b
  1577  00092A  0800               	sublw	0
  1578  00092C  0100               	movlb	0	; () banked
  1579  00092E  6FA1               	movwf	lcd_printf@width& (0+255),b
  1580                           
  1581                           ;iut_lcd.c: 301: } else
  1582  000930  D002               	goto	l2911
  1583  000932                     l133:
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;iut_lcd.c: 302: width = n;
  1587  000932  C09B  F0A1         	movff	lcd_printf@n,lcd_printf@width
  1588  000936                     l2911:
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;iut_lcd.c: 303: c = *++f;
  1592  000936  4A3A               	infsnz	lcd_printf@f,f,c
  1593  000938  2A3B               	incf	lcd_printf@f+1,f,c
  1594  00093A  C03A  FFF6         	movff	lcd_printf@f,tblptrl
  1595  00093E  C03B  FFF7         	movff	lcd_printf@f+1,tblptrh
  1596  000942                     	if	0	;tblptru may be non-zero
  1597  000942                     	endif
  1598  000942                     	if	0	;tblptru may be non-zero
  1599  000942                     	endif
  1600  000942  0008               	tblrd		*
  1601  000944  CFF5 F0A2          	movff	tablat,lcd_printf@c
  1602                           
  1603                           ;iut_lcd.c: 304: } else {
  1604  000948  D020               	goto	l135
  1605  00094A                     l2913:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;iut_lcd.c: 305: cval = 0;
  1609  00094A  0E00               	movlw	0
  1610  00094C  0100               	movlb	0	; () banked
  1611  00094E  6F9A               	movwf	lcd_printf@cval& (0+255),b
  1612                           
  1613                           ;iut_lcd.c: 306: while ((c >= '0') && (c <= '9')) {
  1614  000950  D012               	goto	l2919
  1615  000952                     l2915:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;iut_lcd.c: 307: cval = cval * 10 + c - '0';
  1619  000952  0100               	movlb	0	; () banked
  1620  000954  519A               	movf	lcd_printf@cval& (0+255),w,b
  1621  000956  0D0A               	mullw	10
  1622  000958  50F3               	movf	prodl,w,c
  1623  00095A  0100               	movlb	0	; () banked
  1624  00095C  25A2               	addwf	lcd_printf@c& (0+255),w,b
  1625  00095E  0FD0               	addlw	208
  1626  000960  0100               	movlb	0	; () banked
  1627  000962  6F9A               	movwf	lcd_printf@cval& (0+255),b
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;iut_lcd.c: 308: c = *++f;
  1631  000964  4A3A               	infsnz	lcd_printf@f,f,c
  1632  000966  2A3B               	incf	lcd_printf@f+1,f,c
  1633  000968  C03A  FFF6         	movff	lcd_printf@f,tblptrl
  1634  00096C  C03B  FFF7         	movff	lcd_printf@f+1,tblptrh
  1635  000970                     	if	0	;tblptru may be non-zero
  1636  000970                     	endif
  1637  000970                     	if	0	;tblptru may be non-zero
  1638  000970                     	endif
  1639  000970  0008               	tblrd		*
  1640  000972  CFF5 F0A2          	movff	tablat,lcd_printf@c
  1641  000976                     l2919:
  1642                           
  1643                           ; BSR set to: 0
  1644  000976  0E2F               	movlw	47
  1645  000978  0100               	movlb	0	; () banked
  1646  00097A  65A2               	cpfsgt	lcd_printf@c& (0+255),b
  1647  00097C  D004               	goto	l140
  1648                           
  1649                           ; BSR set to: 0
  1650  00097E  0E39               	movlw	57
  1651  000980  0100               	movlb	0	; () banked
  1652  000982  65A2               	cpfsgt	lcd_printf@c& (0+255),b
  1653  000984  D7E6               	goto	l2915
  1654  000986                     l140:
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;iut_lcd.c: 309: }
  1658                           ;iut_lcd.c: 310: width = cval;
  1659  000986  C09A  F0A1         	movff	lcd_printf@cval,lcd_printf@width
  1660  00098A                     l135:
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;iut_lcd.c: 311: }
  1664                           ;iut_lcd.c: 314: if (flags & 0x1)
  1665  00098A  0100               	movlb	0	; () banked
  1666  00098C  A19F               	btfss	lcd_printf@flags& (0+255),0,b
  1667  00098E  D002               	goto	l2925
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;iut_lcd.c: 315: flags &= ~0x10;
  1671  000990  0100               	movlb	0	; () banked
  1672  000992  999F               	bcf	lcd_printf@flags& (0+255),4,b
  1673  000994                     l2925:
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;iut_lcd.c: 318: if (c == '.') {
  1677  000994  0E2E               	movlw	46
  1678  000996  0100               	movlb	0	; () banked
  1679  000998  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1680  00099A  A4D8               	btfss	status,2,c
  1681  00099C  D050               	goto	l2955
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;iut_lcd.c: 319: c = *++f;
  1685  00099E  4A3A               	infsnz	lcd_printf@f,f,c
  1686  0009A0  2A3B               	incf	lcd_printf@f+1,f,c
  1687  0009A2  C03A  FFF6         	movff	lcd_printf@f,tblptrl
  1688  0009A6  C03B  FFF7         	movff	lcd_printf@f+1,tblptrh
  1689  0009AA                     	if	0	;tblptru may be non-zero
  1690  0009AA                     	endif
  1691  0009AA                     	if	0	;tblptru may be non-zero
  1692  0009AA                     	endif
  1693  0009AA  0008               	tblrd		*
  1694  0009AC  CFF5 F0A2          	movff	tablat,lcd_printf@c
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;iut_lcd.c: 320: if (c == '*') {
  1698  0009B0  0E2A               	movlw	42
  1699  0009B2  0100               	movlb	0	; () banked
  1700  0009B4  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1701  0009B6  A4D8               	btfss	status,2,c
  1702  0009B8  D01F               	goto	l2943
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;iut_lcd.c: 321: n = (*(int *)__va_arg((*(int **)ap), (int)0));
  1706  0009BA  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  1707  0009BE  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  1708  0009C2  CFDE F09B          	movff	postinc2,lcd_printf@n
  1709  0009C6  CFDD F09C          	movff	postdec2,lcd_printf@n+1
  1710                           
  1711                           ; BSR set to: 0
  1712  0009CA  0E02               	movlw	2
  1713  0009CC  0100               	movlb	0	; () banked
  1714  0009CE  279D               	addwf	lcd_printf@ap& (0+255),f,b
  1715  0009D0  0E00               	movlw	0
  1716  0009D2  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;iut_lcd.c: 322: if (n >= 0) {
  1720  0009D4  0100               	movlb	0	; () banked
  1721  0009D6  BF9C               	btfsc	(lcd_printf@n+1)& (0+255),7,b
  1722  0009D8  D005               	goto	l2941
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;iut_lcd.c: 323: precision = n;
  1726  0009DA  C09B  F0A0         	movff	lcd_printf@n,lcd_printf@precision
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;iut_lcd.c: 324: have_precision = 1;
  1730  0009DE  0E01               	movlw	1
  1731  0009E0  0100               	movlb	0	; () banked
  1732  0009E2  6F95               	movwf	lcd_printf@have_precision& (0+255),b
  1733  0009E4                     l2941:
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;iut_lcd.c: 325: }
  1737                           ;iut_lcd.c: 326: c = *++f;
  1738  0009E4  4A3A               	infsnz	lcd_printf@f,f,c
  1739  0009E6  2A3B               	incf	lcd_printf@f+1,f,c
  1740  0009E8  C03A  FFF6         	movff	lcd_printf@f,tblptrl
  1741  0009EC  C03B  FFF7         	movff	lcd_printf@f+1,tblptrh
  1742  0009F0                     	if	0	;tblptru may be non-zero
  1743  0009F0                     	endif
  1744  0009F0                     	if	0	;tblptru may be non-zero
  1745  0009F0                     	endif
  1746  0009F0  0008               	tblrd		*
  1747  0009F2  CFF5 F0A2          	movff	tablat,lcd_printf@c
  1748                           
  1749                           ;iut_lcd.c: 327: } else {
  1750  0009F6  D023               	goto	l2955
  1751  0009F8                     l2943:
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;iut_lcd.c: 328: cval = 0;
  1755  0009F8  0E00               	movlw	0
  1756  0009FA  0100               	movlb	0	; () banked
  1757  0009FC  6F9A               	movwf	lcd_printf@cval& (0+255),b
  1758                           
  1759                           ;iut_lcd.c: 329: while ((c >= '0') && (c <= '9')) {
  1760  0009FE  D012               	goto	l2949
  1761  000A00                     l2945:
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;iut_lcd.c: 330: cval = cval * 10 + c - '0';
  1765  000A00  0100               	movlb	0	; () banked
  1766  000A02  519A               	movf	lcd_printf@cval& (0+255),w,b
  1767  000A04  0D0A               	mullw	10
  1768  000A06  50F3               	movf	prodl,w,c
  1769  000A08  0100               	movlb	0	; () banked
  1770  000A0A  25A2               	addwf	lcd_printf@c& (0+255),w,b
  1771  000A0C  0FD0               	addlw	208
  1772  000A0E  0100               	movlb	0	; () banked
  1773  000A10  6F9A               	movwf	lcd_printf@cval& (0+255),b
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;iut_lcd.c: 331: c = *++f;
  1777  000A12  4A3A               	infsnz	lcd_printf@f,f,c
  1778  000A14  2A3B               	incf	lcd_printf@f+1,f,c
  1779  000A16  C03A  FFF6         	movff	lcd_printf@f,tblptrl
  1780  000A1A  C03B  FFF7         	movff	lcd_printf@f+1,tblptrh
  1781  000A1E                     	if	0	;tblptru may be non-zero
  1782  000A1E                     	endif
  1783  000A1E                     	if	0	;tblptru may be non-zero
  1784  000A1E                     	endif
  1785  000A1E  0008               	tblrd		*
  1786  000A20  CFF5 F0A2          	movff	tablat,lcd_printf@c
  1787  000A24                     l2949:
  1788                           
  1789                           ; BSR set to: 0
  1790  000A24  0E2F               	movlw	47
  1791  000A26  0100               	movlb	0	; () banked
  1792  000A28  65A2               	cpfsgt	lcd_printf@c& (0+255),b
  1793  000A2A  D004               	goto	l150
  1794                           
  1795                           ; BSR set to: 0
  1796  000A2C  0E39               	movlw	57
  1797  000A2E  0100               	movlb	0	; () banked
  1798  000A30  65A2               	cpfsgt	lcd_printf@c& (0+255),b
  1799  000A32  D7E6               	goto	l2945
  1800  000A34                     l150:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;iut_lcd.c: 332: }
  1804                           ;iut_lcd.c: 333: precision = cval;
  1805  000A34  C09A  F0A0         	movff	lcd_printf@cval,lcd_printf@precision
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;iut_lcd.c: 334: have_precision = 1;
  1809  000A38  0E01               	movlw	1
  1810  000A3A  0100               	movlb	0	; () banked
  1811  000A3C  6F95               	movwf	lcd_printf@have_precision& (0+255),b
  1812  000A3E                     l2955:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;iut_lcd.c: 335: }
  1816                           ;iut_lcd.c: 336: }
  1817                           ;iut_lcd.c: 340: if (c == 'h') {
  1818  000A3E  0E68               	movlw	104
  1819  000A40  0100               	movlb	0	; () banked
  1820  000A42  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1821  000A44  A4D8               	btfss	status,2,c
  1822  000A46  D011               	goto	l2965
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;iut_lcd.c: 341: c = *++f;
  1826  000A48  4A3A               	infsnz	lcd_printf@f,f,c
  1827  000A4A  2A3B               	incf	lcd_printf@f+1,f,c
  1828  000A4C  C03A  FFF6         	movff	lcd_printf@f,tblptrl
  1829  000A50  C03B  FFF7         	movff	lcd_printf@f+1,tblptrh
  1830  000A54                     	if	0	;tblptru may be non-zero
  1831  000A54                     	endif
  1832  000A54                     	if	0	;tblptru may be non-zero
  1833  000A54                     	endif
  1834  000A54  0008               	tblrd		*
  1835  000A56  CFF5 F0A2          	movff	tablat,lcd_printf@c
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;iut_lcd.c: 344: if (c == 'h') {
  1839  000A5A  0E68               	movlw	104
  1840  000A5C  0100               	movlb	0	; () banked
  1841  000A5E  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1842  000A60  A4D8               	btfss	status,2,c
  1843  000A62  EF86  F00A         	goto	l3411
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;iut_lcd.c: 345: size = 3;
  1847  000A66  0E03               	movlw	3
  1848  000A68  D032               	goto	L2
  1849  000A6A                     l2965:
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;iut_lcd.c: 350: else if (c == 't' || c == 'z')
  1853  000A6A  0E74               	movlw	116
  1854  000A6C  0100               	movlb	0	; () banked
  1855  000A6E  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1856  000A70  B4D8               	btfsc	status,2,c
  1857  000A72  D016               	goto	l2979
  1858                           
  1859                           ; BSR set to: 0
  1860  000A74  0E7A               	movlw	122
  1861  000A76  0100               	movlb	0	; () banked
  1862  000A78  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1863  000A7A  B4D8               	btfsc	status,2,c
  1864  000A7C  D011               	goto	l2979
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;iut_lcd.c: 354: else if (c == 'H' || c == 'T' || c == 'Z') {
  1868                           
  1869                           ; BSR set to: 0
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;iut_lcd.c: 351: c = *++f;
  1873                           
  1874                           ; BSR set to: 0
  1875  000A7E  0E48               	movlw	72
  1876  000A80  0100               	movlb	0	; () banked
  1877  000A82  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1878  000A84  B4D8               	btfsc	status,2,c
  1879  000A86  D00A               	goto	l2977
  1880                           
  1881                           ; BSR set to: 0
  1882  000A88  0E54               	movlw	84
  1883  000A8A  0100               	movlb	0	; () banked
  1884  000A8C  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1885  000A8E  B4D8               	btfsc	status,2,c
  1886  000A90  D005               	goto	l2977
  1887                           
  1888                           ; BSR set to: 0
  1889  000A92  0E5A               	movlw	90
  1890  000A94  0100               	movlb	0	; () banked
  1891  000A96  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1892  000A98  A4D8               	btfss	status,2,c
  1893  000A9A  D00D               	goto	l2981
  1894  000A9C                     l2977:
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;iut_lcd.c: 355: size = 2;
  1898  000A9C  0E02               	movlw	2
  1899  000A9E  D017               	goto	L2
  1900  000AA0                     l2979:
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;iut_lcd.c: 356: c = *++f;
  1904  000AA0  4A3A               	infsnz	lcd_printf@f,f,c
  1905  000AA2  2A3B               	incf	lcd_printf@f+1,f,c
  1906  000AA4  C03A  FFF6         	movff	lcd_printf@f,tblptrl
  1907  000AA8  C03B  FFF7         	movff	lcd_printf@f+1,tblptrh
  1908  000AAC                     	if	0	;tblptru may be non-zero
  1909  000AAC                     	endif
  1910  000AAC                     	if	0	;tblptru may be non-zero
  1911  000AAC                     	endif
  1912  000AAC  0008               	tblrd		*
  1913  000AAE  CFF5 F0A2          	movff	tablat,lcd_printf@c
  1914                           
  1915                           ;iut_lcd.c: 357: }
  1916  000AB2  EF86  F00A         	goto	l3411
  1917  000AB6                     l2981:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;iut_lcd.c: 360: else if (c == 'l' || c == 'j') {
  1921  000AB6  0E6C               	movlw	108
  1922  000AB8  0100               	movlb	0	; () banked
  1923  000ABA  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1924  000ABC  B4D8               	btfsc	status,2,c
  1925  000ABE  D006               	goto	l2985
  1926                           
  1927                           ; BSR set to: 0
  1928  000AC0  0E6A               	movlw	106
  1929  000AC2  0100               	movlb	0	; () banked
  1930  000AC4  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1931  000AC6  A4D8               	btfss	status,2,c
  1932  000AC8  EF86  F00A         	goto	l3411
  1933  000ACC                     l2985:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;iut_lcd.c: 361: size = 1;
  1937  000ACC  0E01               	movlw	1
  1938  000ACE                     L2:
  1939  000ACE  0100               	movlb	0	; () banked
  1940  000AD0  6F94               	movwf	lcd_printf@size& (0+255),b
  1941  000AD2  D7E6               	goto	l2979
  1942  000AD4                     l2989:
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;iut_lcd.c: 373: --f;
  1946  000AD4  063A               	decf	lcd_printf@f,f,c
  1947  000AD6  A0D8               	btfss	status,0,c
  1948  000AD8  063B               	decf	lcd_printf@f+1,f,c
  1949  000ADA                     l2991:
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;iut_lcd.c: 376: lcd_write_data_busy('%');
  1953  000ADA  0E25               	movlw	37
  1954  000ADC  EC59  F011         	call	_lcd_write_data_busy
  1955                           
  1956                           ;iut_lcd.c: 378: break;
  1957  000AE0  EFC6  F00A         	goto	l3415
  1958  000AE4                     l2993:
  1959                           
  1960                           ;iut_lcd.c: 380: space_cnt = 0;
  1961  000AE4  0E00               	movlw	0
  1962  000AE6  0100               	movlb	0	; () banked
  1963  000AE8  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;iut_lcd.c: 381: if (width > 1) {
  1967  000AEA  0E01               	movlw	1
  1968  000AEC  0100               	movlb	0	; () banked
  1969  000AEE  65A1               	cpfsgt	lcd_printf@width& (0+255),b
  1970  000AF0  D004               	goto	l2999
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;iut_lcd.c: 382: space_cnt = width - 1;
  1974  000AF2  0100               	movlb	0	; () banked
  1975  000AF4  05A1               	decf	lcd_printf@width& (0+255),w,b
  1976  000AF6  0100               	movlb	0	; () banked
  1977  000AF8  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  1978  000AFA                     l2999:
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;iut_lcd.c: 384: }
  1982                           ;iut_lcd.c: 385: if (space_cnt && !(flags & 0x1)) {
  1983  000AFA  0100               	movlb	0	; () banked
  1984  000AFC  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  1985  000AFE  0100               	movlb	0	; () banked
  1986  000B00  B4D8               	btfsc	status,2,c
  1987  000B02  D00C               	goto	l3007
  1988                           
  1989                           ; BSR set to: 0
  1990  000B04  0100               	movlb	0	; () banked
  1991  000B06  B19F               	btfsc	lcd_printf@flags& (0+255),0,b
  1992  000B08  D009               	goto	l3007
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;iut_lcd.c: 386: lcd_repete_n(space_cnt, ' ');
  1996  000B0A  0E20               	movlw	32
  1997  000B0C  6E03               	movwf	lcd_repete_n@c,c
  1998  000B0E  0100               	movlb	0	; () banked
  1999  000B10  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  2000  000B12  EC6F  F011         	call	_lcd_repete_n
  2001                           
  2002                           ;iut_lcd.c: 387: space_cnt = 0;
  2003  000B16  0E00               	movlw	0
  2004  000B18  0100               	movlb	0	; () banked
  2005  000B1A  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  2006  000B1C                     l3007:
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;iut_lcd.c: 388: }
  2010                           ;iut_lcd.c: 389: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  2011  000B1C  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2012  000B20  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2013  000B24  50DF               	movf	indf2,w,c
  2014  000B26  0100               	movlb	0	; () banked
  2015  000B28  6FA2               	movwf	lcd_printf@c& (0+255),b
  2016                           
  2017                           ; BSR set to: 0
  2018  000B2A  0E02               	movlw	2
  2019  000B2C  0100               	movlb	0	; () banked
  2020  000B2E  279D               	addwf	lcd_printf@ap& (0+255),f,b
  2021  000B30  0E00               	movlw	0
  2022  000B32  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;iut_lcd.c: 390: lcd_putc(c);
  2026  000B34  0100               	movlb	0	; () banked
  2027  000B36  51A2               	movf	lcd_printf@c& (0+255),w,b
  2028  000B38  EC56  F010         	call	_lcd_putc
  2029                           
  2030                           ;iut_lcd.c: 392: lcd_repete_n(space_cnt, ' ');
  2031  000B3C  0E20               	movlw	32
  2032  000B3E  6E03               	movwf	lcd_repete_n@c,c
  2033  000B40  0100               	movlb	0	; () banked
  2034  000B42  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  2035  000B44  EC6F  F011         	call	_lcd_repete_n
  2036                           
  2037                           ;iut_lcd.c: 393: break;
  2038  000B48  EFC6  F00A         	goto	l3415
  2039  000B4C                     l3015:
  2040                           
  2041                           ;iut_lcd.c: 395: if (size == 2)
  2042  000B4C  0E02               	movlw	2
  2043  000B4E  0100               	movlb	0	; () banked
  2044  000B50  1994               	xorwf	lcd_printf@size& (0+255),w,b
  2045  000B52  A4D8               	btfss	status,2,c
  2046  000B54  D007               	goto	l3021
  2047  000B56  D006               	goto	l3021
  2048  000B58                     l3019:
  2049                           
  2050                           ; BSR set to: 0
  2051  000B58  0E02               	movlw	2
  2052  000B5A  0100               	movlb	0	; () banked
  2053  000B5C  279D               	addwf	lcd_printf@ap& (0+255),f,b
  2054  000B5E  0E00               	movlw	0
  2055  000B60  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  2056  000B62  D009               	goto	l3025
  2057  000B64                     l3021:
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;iut_lcd.c: 397: else
  2061                           ;iut_lcd.c: 398: romstring = (far char*) (*(near char * *)__va_arg((*(near char * **)ap)
      +                          , (near char *)0));
  2062  000B64  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2063  000B68  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2064  000B6C  CFDE F084          	movff	postinc2,lcd_printf@romstring
  2065  000B70  CFDD F085          	movff	postdec2,lcd_printf@romstring+1
  2066  000B74  D7F1               	goto	l3019
  2067  000B76                     l3025:
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;iut_lcd.c: 399: for (n = 0; romstring[n] != 0; n++);
  2071  000B76  0E00               	movlw	0
  2072  000B78  0100               	movlb	0	; () banked
  2073  000B7A  6F9C               	movwf	(lcd_printf@n+1)& (0+255),b
  2074  000B7C  0E00               	movlw	0
  2075  000B7E  6F9B               	movwf	lcd_printf@n& (0+255),b
  2076  000B80  D003               	goto	l3029
  2077  000B82                     l3027:
  2078                           
  2079                           ; BSR set to: 0
  2080  000B82  0100               	movlb	0	; () banked
  2081  000B84  4B9B               	infsnz	lcd_printf@n& (0+255),f,b
  2082  000B86  2B9C               	incf	(lcd_printf@n+1)& (0+255),f,b
  2083  000B88                     l3029:
  2084                           
  2085                           ; BSR set to: 0
  2086  000B88  0100               	movlb	0	; () banked
  2087  000B8A  519B               	movf	lcd_printf@n& (0+255),w,b
  2088  000B8C  0100               	movlb	0	; () banked
  2089  000B8E  2584               	addwf	lcd_printf@romstring& (0+255),w,b
  2090  000B90  6ED9               	movwf	fsr2l,c
  2091  000B92  0100               	movlb	0	; () banked
  2092  000B94  519C               	movf	(lcd_printf@n+1)& (0+255),w,b
  2093  000B96  0100               	movlb	0	; () banked
  2094  000B98  2185               	addwfc	(lcd_printf@romstring+1)& (0+255),w,b
  2095  000B9A  6EDA               	movwf	fsr2h,c
  2096  000B9C  50DF               	movf	indf2,w,c
  2097  000B9E  A4D8               	btfss	status,2,c
  2098  000BA0  D7F0               	goto	l3027
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;iut_lcd.c: 402: if (have_precision && precision < (unsigned char) n)
  2102                           
  2103                           ; BSR set to: 0
  2104  000BA2  0100               	movlb	0	; () banked
  2105  000BA4  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  2106  000BA6  0100               	movlb	0	; () banked
  2107  000BA8  B4D8               	btfsc	status,2,c
  2108  000BAA  D00A               	goto	l3037
  2109                           
  2110                           ; BSR set to: 0
  2111  000BAC  0100               	movlb	0	; () banked
  2112  000BAE  519B               	movf	lcd_printf@n& (0+255),w,b
  2113  000BB0  0100               	movlb	0	; () banked
  2114  000BB2  5DA0               	subwf	lcd_printf@precision& (0+255),w,b
  2115  000BB4  B0D8               	btfsc	status,0,c
  2116  000BB6  D004               	goto	l3037
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;iut_lcd.c: 403: n = precision;
  2120  000BB8  C0A0  F09B         	movff	lcd_printf@precision,lcd_printf@n
  2121  000BBC  0100               	movlb	0	; () banked
  2122  000BBE  6B9C               	clrf	(lcd_printf@n+1)& (0+255),b
  2123  000BC0                     l3037:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;iut_lcd.c: 404: if (width < (unsigned char) n)
  2127  000BC0  0100               	movlb	0	; () banked
  2128  000BC2  519B               	movf	lcd_printf@n& (0+255),w,b
  2129  000BC4  0100               	movlb	0	; () banked
  2130  000BC6  5DA1               	subwf	lcd_printf@width& (0+255),w,b
  2131  000BC8  A0D8               	btfss	status,0,c
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;iut_lcd.c: 405: width = n;
  2135  000BCA  C09B  F0A1         	movff	lcd_printf@n,lcd_printf@width
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;iut_lcd.c: 406: space_cnt = width - (unsigned char) n;
  2139                           
  2140                           ; BSR set to: 0
  2141  000BCE  0100               	movlb	0	; () banked
  2142  000BD0  519B               	movf	lcd_printf@n& (0+255),w,b
  2143  000BD2  0800               	sublw	0
  2144  000BD4  0100               	movlb	0	; () banked
  2145  000BD6  25A1               	addwf	lcd_printf@width& (0+255),w,b
  2146  000BD8  0100               	movlb	0	; () banked
  2147  000BDA  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;iut_lcd.c: 413: if (have_precision && precision < width)
  2151  000BDC  0100               	movlb	0	; () banked
  2152  000BDE  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  2153  000BE0  0100               	movlb	0	; () banked
  2154  000BE2  B4D8               	btfsc	status,2,c
  2155  000BE4  D007               	goto	l180
  2156                           
  2157                           ; BSR set to: 0
  2158  000BE6  0100               	movlb	0	; () banked
  2159  000BE8  51A1               	movf	lcd_printf@width& (0+255),w,b
  2160  000BEA  0100               	movlb	0	; () banked
  2161  000BEC  5DA0               	subwf	lcd_printf@precision& (0+255),w,b
  2162  000BEE  A0D8               	btfss	status,0,c
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;iut_lcd.c: 414: width = precision;
  2166  000BF0  C0A0  F0A1         	movff	lcd_printf@precision,lcd_printf@width
  2167  000BF4                     l180:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;iut_lcd.c: 417: if (!(flags & 0x1)) {
  2171  000BF4  0100               	movlb	0	; () banked
  2172  000BF6  B19F               	btfsc	lcd_printf@flags& (0+255),0,b
  2173  000BF8  D009               	goto	l3053
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;iut_lcd.c: 418: lcd_repete_n(space_cnt, ' ');
  2177  000BFA  0E20               	movlw	32
  2178  000BFC  6E03               	movwf	lcd_repete_n@c,c
  2179  000BFE  0100               	movlb	0	; () banked
  2180  000C00  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  2181  000C02  EC6F  F011         	call	_lcd_repete_n
  2182                           
  2183                           ;iut_lcd.c: 419: space_cnt = 0;
  2184  000C06  0E00               	movlw	0
  2185  000C08  0100               	movlb	0	; () banked
  2186  000C0A  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  2187  000C0C                     l3053:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;iut_lcd.c: 420: }
  2191                           ;iut_lcd.c: 421: cval = 0;
  2192  000C0C  0E00               	movlw	0
  2193  000C0E  0100               	movlb	0	; () banked
  2194  000C10  6F9A               	movwf	lcd_printf@cval& (0+255),b
  2195  000C12  D009               	goto	L3
  2196  000C14                     l3057:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;iut_lcd.c: 423: lcd_putc(c);
  2200  000C14  0100               	movlb	0	; () banked
  2201  000C16  51A2               	movf	lcd_printf@c& (0+255),w,b
  2202  000C18  EC56  F010         	call	_lcd_putc
  2203                           
  2204                           ;iut_lcd.c: 425: ++cval;
  2205  000C1C  0100               	movlb	0	; () banked
  2206  000C1E  2B9A               	incf	lcd_printf@cval& (0+255),f,b
  2207                           
  2208                           ; BSR set to: 0
  2209  000C20  0100               	movlb	0	; () banked
  2210  000C22  4B84               	infsnz	lcd_printf@romstring& (0+255),f,b
  2211  000C24  2B85               	incf	(lcd_printf@romstring+1)& (0+255),f,b
  2212  000C26                     L3:
  2213  000C26  C084  FFD9         	movff	lcd_printf@romstring,fsr2l
  2214  000C2A  C085  FFDA         	movff	lcd_printf@romstring+1,fsr2h
  2215  000C2E  50DF               	movf	indf2,w,c
  2216  000C30  0100               	movlb	0	; () banked
  2217  000C32  6FA2               	movwf	lcd_printf@c& (0+255),b
  2218                           
  2219                           ; BSR set to: 0
  2220                           
  2221                           ; BSR set to: 0
  2222  000C34  0100               	movlb	0	; () banked
  2223  000C36  51A2               	movf	lcd_printf@c& (0+255),w,b
  2224  000C38  0100               	movlb	0	; () banked
  2225  000C3A  B4D8               	btfsc	status,2,c
  2226  000C3C  D006               	goto	l3067
  2227                           
  2228                           ; BSR set to: 0
  2229  000C3E  0100               	movlb	0	; () banked
  2230  000C40  51A1               	movf	lcd_printf@width& (0+255),w,b
  2231  000C42  0100               	movlb	0	; () banked
  2232  000C44  5D9A               	subwf	lcd_printf@cval& (0+255),w,b
  2233  000C46  A0D8               	btfss	status,0,c
  2234  000C48  D7E5               	goto	l3057
  2235  000C4A                     l3067:
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;iut_lcd.c: 426: }
  2239                           ;iut_lcd.c: 430: lcd_repete_n(space_cnt, ' ');
  2240  000C4A  0E20               	movlw	32
  2241  000C4C  6E03               	movwf	lcd_repete_n@c,c
  2242  000C4E  0100               	movlb	0	; () banked
  2243  000C50  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  2244  000C52  EC6F  F011         	call	_lcd_repete_n
  2245                           
  2246                           ;iut_lcd.c: 431: break;
  2247  000C56  EFC6  F00A         	goto	l3415
  2248  000C5A                     l3069:
  2249                           
  2250                           ;iut_lcd.c: 433: ramstring = (*(char * *)__va_arg((*(char * **)ap), (char *)0));
  2251  000C5A  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2252  000C5E  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2253  000C62  CFDE F081          	movff	postinc2,lcd_printf@ramstring
  2254  000C66  CFDD F082          	movff	postdec2,lcd_printf@ramstring+1
  2255  000C6A  0E02               	movlw	2
  2256  000C6C  0100               	movlb	0	; () banked
  2257  000C6E  279D               	addwf	lcd_printf@ap& (0+255),f,b
  2258  000C70  0E00               	movlw	0
  2259  000C72  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;iut_lcd.c: 434: for (n = 0; ramstring[n] != 0; n++);
  2263  000C74  0E00               	movlw	0
  2264  000C76  0100               	movlb	0	; () banked
  2265  000C78  6F9C               	movwf	(lcd_printf@n+1)& (0+255),b
  2266  000C7A  0E00               	movlw	0
  2267  000C7C  6F9B               	movwf	lcd_printf@n& (0+255),b
  2268  000C7E  D003               	goto	l3077
  2269  000C80                     l3075:
  2270                           
  2271                           ; BSR set to: 0
  2272  000C80  0100               	movlb	0	; () banked
  2273  000C82  4B9B               	infsnz	lcd_printf@n& (0+255),f,b
  2274  000C84  2B9C               	incf	(lcd_printf@n+1)& (0+255),f,b
  2275  000C86                     l3077:
  2276                           
  2277                           ; BSR set to: 0
  2278  000C86  0100               	movlb	0	; () banked
  2279  000C88  519B               	movf	lcd_printf@n& (0+255),w,b
  2280  000C8A  0100               	movlb	0	; () banked
  2281  000C8C  2581               	addwf	lcd_printf@ramstring& (0+255),w,b
  2282  000C8E  6ED9               	movwf	fsr2l,c
  2283  000C90  0100               	movlb	0	; () banked
  2284  000C92  519C               	movf	(lcd_printf@n+1)& (0+255),w,b
  2285  000C94  0100               	movlb	0	; () banked
  2286  000C96  2182               	addwfc	(lcd_printf@ramstring+1)& (0+255),w,b
  2287  000C98  6EDA               	movwf	fsr2h,c
  2288  000C9A  50DF               	movf	indf2,w,c
  2289  000C9C  A4D8               	btfss	status,2,c
  2290  000C9E  D7F0               	goto	l3075
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;iut_lcd.c: 437: if (have_precision && precision < (unsigned char) n)
  2294                           
  2295                           ; BSR set to: 0
  2296  000CA0  0100               	movlb	0	; () banked
  2297  000CA2  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  2298  000CA4  0100               	movlb	0	; () banked
  2299  000CA6  B4D8               	btfsc	status,2,c
  2300  000CA8  D00A               	goto	l3085
  2301                           
  2302                           ; BSR set to: 0
  2303  000CAA  0100               	movlb	0	; () banked
  2304  000CAC  519B               	movf	lcd_printf@n& (0+255),w,b
  2305  000CAE  0100               	movlb	0	; () banked
  2306  000CB0  5DA0               	subwf	lcd_printf@precision& (0+255),w,b
  2307  000CB2  B0D8               	btfsc	status,0,c
  2308  000CB4  D004               	goto	l3085
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;iut_lcd.c: 438: n = precision;
  2312  000CB6  C0A0  F09B         	movff	lcd_printf@precision,lcd_printf@n
  2313  000CBA  0100               	movlb	0	; () banked
  2314  000CBC  6B9C               	clrf	(lcd_printf@n+1)& (0+255),b
  2315  000CBE                     l3085:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;iut_lcd.c: 439: if (width < (unsigned char) n)
  2319  000CBE  0100               	movlb	0	; () banked
  2320  000CC0  519B               	movf	lcd_printf@n& (0+255),w,b
  2321  000CC2  0100               	movlb	0	; () banked
  2322  000CC4  5DA1               	subwf	lcd_printf@width& (0+255),w,b
  2323  000CC6  A0D8               	btfss	status,0,c
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;iut_lcd.c: 440: width = n;
  2327  000CC8  C09B  F0A1         	movff	lcd_printf@n,lcd_printf@width
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;iut_lcd.c: 441: space_cnt = width - (unsigned char) n;
  2331                           
  2332                           ; BSR set to: 0
  2333  000CCC  0100               	movlb	0	; () banked
  2334  000CCE  519B               	movf	lcd_printf@n& (0+255),w,b
  2335  000CD0  0800               	sublw	0
  2336  000CD2  0100               	movlb	0	; () banked
  2337  000CD4  25A1               	addwf	lcd_printf@width& (0+255),w,b
  2338  000CD6  0100               	movlb	0	; () banked
  2339  000CD8  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;iut_lcd.c: 448: if (have_precision && precision < width)
  2343  000CDA  0100               	movlb	0	; () banked
  2344  000CDC  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  2345  000CDE  0100               	movlb	0	; () banked
  2346  000CE0  B4D8               	btfsc	status,2,c
  2347  000CE2  D007               	goto	l193
  2348                           
  2349                           ; BSR set to: 0
  2350  000CE4  0100               	movlb	0	; () banked
  2351  000CE6  51A1               	movf	lcd_printf@width& (0+255),w,b
  2352  000CE8  0100               	movlb	0	; () banked
  2353  000CEA  5DA0               	subwf	lcd_printf@precision& (0+255),w,b
  2354  000CEC  A0D8               	btfss	status,0,c
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;iut_lcd.c: 449: width = precision;
  2358  000CEE  C0A0  F0A1         	movff	lcd_printf@precision,lcd_printf@width
  2359  000CF2                     l193:
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;iut_lcd.c: 452: if (!(flags & 0x1)) {
  2363  000CF2  0100               	movlb	0	; () banked
  2364  000CF4  B19F               	btfsc	lcd_printf@flags& (0+255),0,b
  2365  000CF6  D009               	goto	l3101
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;iut_lcd.c: 453: lcd_repete_n(space_cnt, ' ');
  2369  000CF8  0E20               	movlw	32
  2370  000CFA  6E03               	movwf	lcd_repete_n@c,c
  2371  000CFC  0100               	movlb	0	; () banked
  2372  000CFE  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  2373  000D00  EC6F  F011         	call	_lcd_repete_n
  2374                           
  2375                           ;iut_lcd.c: 454: space_cnt = 0;
  2376  000D04  0E00               	movlw	0
  2377  000D06  0100               	movlb	0	; () banked
  2378  000D08  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  2379  000D0A                     l3101:
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;iut_lcd.c: 455: }
  2383                           ;iut_lcd.c: 456: cval = 0;
  2384  000D0A  0E00               	movlw	0
  2385  000D0C  0100               	movlb	0	; () banked
  2386  000D0E  6F9A               	movwf	lcd_printf@cval& (0+255),b
  2387  000D10  D009               	goto	L4
  2388  000D12                     l3105:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;iut_lcd.c: 458: lcd_putc(c);
  2392  000D12  0100               	movlb	0	; () banked
  2393  000D14  51A2               	movf	lcd_printf@c& (0+255),w,b
  2394  000D16  EC56  F010         	call	_lcd_putc
  2395                           
  2396                           ;iut_lcd.c: 460: ++cval;
  2397  000D1A  0100               	movlb	0	; () banked
  2398  000D1C  2B9A               	incf	lcd_printf@cval& (0+255),f,b
  2399                           
  2400                           ; BSR set to: 0
  2401  000D1E  0100               	movlb	0	; () banked
  2402  000D20  4B81               	infsnz	lcd_printf@ramstring& (0+255),f,b
  2403  000D22  2B82               	incf	(lcd_printf@ramstring+1)& (0+255),f,b
  2404  000D24                     L4:
  2405  000D24  C081  FFD9         	movff	lcd_printf@ramstring,fsr2l
  2406  000D28  C082  FFDA         	movff	lcd_printf@ramstring+1,fsr2h
  2407  000D2C  50DF               	movf	indf2,w,c
  2408  000D2E  0100               	movlb	0	; () banked
  2409  000D30  6FA2               	movwf	lcd_printf@c& (0+255),b
  2410                           
  2411                           ; BSR set to: 0
  2412                           
  2413                           ; BSR set to: 0
  2414  000D32  0100               	movlb	0	; () banked
  2415  000D34  51A2               	movf	lcd_printf@c& (0+255),w,b
  2416  000D36  0100               	movlb	0	; () banked
  2417  000D38  B4D8               	btfsc	status,2,c
  2418  000D3A  D006               	goto	l3115
  2419                           
  2420                           ; BSR set to: 0
  2421  000D3C  0100               	movlb	0	; () banked
  2422  000D3E  51A1               	movf	lcd_printf@width& (0+255),w,b
  2423  000D40  0100               	movlb	0	; () banked
  2424  000D42  5D9A               	subwf	lcd_printf@cval& (0+255),w,b
  2425  000D44  A0D8               	btfss	status,0,c
  2426  000D46  D7E5               	goto	l3105
  2427  000D48                     l3115:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;iut_lcd.c: 461: }
  2431                           ;iut_lcd.c: 465: lcd_repete_n(space_cnt, ' ');
  2432  000D48  0E20               	movlw	32
  2433  000D4A  6E03               	movwf	lcd_repete_n@c,c
  2434  000D4C  0100               	movlb	0	; () banked
  2435  000D4E  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  2436  000D50  EC6F  F011         	call	_lcd_repete_n
  2437                           
  2438                           ;iut_lcd.c: 466: break;
  2439  000D54  EFC6  F00A         	goto	l3415
  2440  000D58                     l3117:
  2441                           
  2442                           ;iut_lcd.c: 468: case 'i':
  2443                           ;iut_lcd.c: 469: flags |= 0x80;
  2444  000D58  0100               	movlb	0	; () banked
  2445  000D5A  8F9F               	bsf	lcd_printf@flags& (0+255),7,b
  2446  000D5C                     l3119:
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;iut_lcd.c: 472: case 'u':
  2450                           ;iut_lcd.c: 473: case 'x':
  2451                           ;iut_lcd.c: 474: case 'X':
  2452                           ;iut_lcd.c: 475: case 'b':
  2453                           ;iut_lcd.c: 476: case 'B':
  2454                           ;iut_lcd.c: 483: if (size == 1) {
  2455  000D5C  0100               	movlb	0	; () banked
  2456  000D5E  0594               	decf	lcd_printf@size& (0+255),w,b
  2457  000D60  A4D8               	btfss	status,2,c
  2458  000D62  D00E               	goto	l3127
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;iut_lcd.c: 484: larg = (*(long int *)__va_arg((*(long int **)ap), (long int)0));
  2462  000D64  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2463  000D68  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2464  000D6C  CFDE F090          	movff	postinc2,lcd_printf@larg
  2465  000D70  CFDE F091          	movff	postinc2,lcd_printf@larg+1
  2466  000D74  CFDE F092          	movff	postinc2,lcd_printf@larg+2
  2467  000D78  CFDE F093          	movff	postinc2,lcd_printf@larg+3
  2468                           
  2469                           ; BSR set to: 0
  2470  000D7C  0E04               	movlw	4
  2471  000D7E  D016               	goto	L5
  2472  000D80                     l3127:
  2473                           
  2474                           ; BSR set to: 0
  2475  000D80  0E03               	movlw	3
  2476  000D82  0100               	movlb	0	; () banked
  2477  000D84  1994               	xorwf	lcd_printf@size& (0+255),w,b
  2478  000D86  A4D8               	btfss	status,2,c
  2479  000D88  D021               	goto	l3139
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;iut_lcd.c: 487: if (flags & 0x80)
  2483  000D8A  0100               	movlb	0	; () banked
  2484  000D8C  AF9F               	btfss	lcd_printf@flags& (0+255),7,b
  2485  000D8E  D013               	goto	l3135
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;iut_lcd.c: 488: larg = (signed char) (*(int *)__va_arg((*(int **)ap), (int)0));
  2489  000D90  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2490  000D94  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2491  000D98  50DF               	movf	indf2,w,c
  2492  000D9A  0100               	movlb	0	; () banked
  2493  000D9C  6F90               	movwf	lcd_printf@larg& (0+255),b
  2494  000D9E  0E00               	movlw	0
  2495  000DA0  BF90               	btfsc	lcd_printf@larg& (0+255),7,b
  2496  000DA2  0EFF               	movlw	-1
  2497  000DA4  6F91               	movwf	(lcd_printf@larg+1)& (0+255),b
  2498  000DA6  6F92               	movwf	(lcd_printf@larg+2)& (0+255),b
  2499  000DA8  6F93               	movwf	(lcd_printf@larg+3)& (0+255),b
  2500  000DAA  D06A               	goto	l3157
  2501  000DAC                     L5:
  2502  000DAC  0100               	movlb	0	; () banked
  2503  000DAE  279D               	addwf	lcd_printf@ap& (0+255),f,b
  2504  000DB0  0E00               	movlw	0
  2505  000DB2  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  2506  000DB4  D067               	goto	l3159
  2507  000DB6                     l3135:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;iut_lcd.c: 489: else
  2511                           ;iut_lcd.c: 490: larg = (unsigned char) (*(unsigned int *)__va_arg((*(unsigned int **)ap
      +                          ), (unsigned int)0));
  2512  000DB6  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2513  000DBA  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2514  000DBE  50DF               	movf	indf2,w,c
  2515  000DC0  6E44               	movwf	??_lcd_printf& (0+255),c
  2516  000DC2  5044               	movf	??_lcd_printf,w,c
  2517  000DC4  0100               	movlb	0	; () banked
  2518  000DC6  6F90               	movwf	lcd_printf@larg& (0+255),b
  2519  000DC8  6B91               	clrf	(lcd_printf@larg+1)& (0+255),b
  2520  000DCA  D058               	goto	L22
  2521  000DCC                     l3139:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;iut_lcd.c: 495: case 'P':
  2525                           ;iut_lcd.c: 496: if (size == 2) {
  2526  000DCC  0E02               	movlw	2
  2527  000DCE  0100               	movlb	0	; () banked
  2528  000DD0  1994               	xorwf	lcd_printf@size& (0+255),w,b
  2529  000DD2  A4D8               	btfss	status,2,c
  2530  000DD4  D036               	goto	l216
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;iut_lcd.c: 497: if (flags & 0x80)
  2534  000DD6  0100               	movlb	0	; () banked
  2535  000DD8  AF9F               	btfss	lcd_printf@flags& (0+255),7,b
  2536  000DDA  D01C               	goto	l3147
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;iut_lcd.c: 498: larg = (*(short long int *)__va_arg((*(short long int **)ap), (short lo
      +                          ng int)0));
  2540  000DDC  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2541  000DE0  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2542  000DE4  CFDE F044          	movff	postinc2,??_lcd_printf
  2543  000DE8  CFDE F045          	movff	postinc2,??_lcd_printf+1
  2544  000DEC  CFDE F046          	movff	postinc2,??_lcd_printf+2
  2545  000DF0  C044  F047         	movff	??_lcd_printf,??_lcd_printf+3
  2546  000DF4  C045  F048         	movff	??_lcd_printf+1,??_lcd_printf+4
  2547  000DF8  C046  F049         	movff	??_lcd_printf+2,??_lcd_printf+5
  2548  000DFC  6A4A               	clrf	(??_lcd_printf+6)& (0+255),c
  2549  000DFE  BE49               	btfsc	(??_lcd_printf+5)& (0+255),7,c
  2550  000E00  684A               	setf	(??_lcd_printf+6)& (0+255),c
  2551  000E02  C047  F090         	movff	??_lcd_printf+3,lcd_printf@larg
  2552  000E06  C048  F091         	movff	??_lcd_printf+4,lcd_printf@larg+1
  2553  000E0A  C049  F092         	movff	??_lcd_printf+5,lcd_printf@larg+2
  2554  000E0E  C04A  F093         	movff	??_lcd_printf+6,lcd_printf@larg+3
  2555  000E12  D015               	goto	l3149
  2556  000E14                     l3147:
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;iut_lcd.c: 499: else
  2560                           ;iut_lcd.c: 500: larg = (*(unsigned short long int *)__va_arg((*(unsigned short long int
      +                           **)ap), (unsigned short long int)0));
  2561  000E14  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2562  000E18  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2563  000E1C  CFDE F044          	movff	postinc2,??_lcd_printf
  2564  000E20  CFDE F045          	movff	postinc2,??_lcd_printf+1
  2565  000E24  CFDE F046          	movff	postinc2,??_lcd_printf+2
  2566  000E28  5044               	movf	??_lcd_printf,w,c
  2567  000E2A  0100               	movlb	0	; () banked
  2568  000E2C  6F90               	movwf	lcd_printf@larg& (0+255),b
  2569  000E2E  5045               	movf	??_lcd_printf+1,w,c
  2570  000E30  0100               	movlb	0	; () banked
  2571  000E32  6F91               	movwf	(lcd_printf@larg+1)& (0+255),b
  2572  000E34  5046               	movf	??_lcd_printf+2,w,c
  2573  000E36  0100               	movlb	0	; () banked
  2574  000E38  6F92               	movwf	(lcd_printf@larg+2)& (0+255),b
  2575  000E3A  0100               	movlb	0	; () banked
  2576  000E3C  6B93               	clrf	(lcd_printf@larg+3)& (0+255),b
  2577  000E3E                     l3149:
  2578                           
  2579                           ; BSR set to: 0
  2580  000E3E  0E03               	movlw	3
  2581  000E40  D7B5               	goto	L5
  2582  000E42                     l216:
  2583                           
  2584                           ; BSR set to: 0
  2585  000E42  0100               	movlb	0	; () banked
  2586  000E44  AF9F               	btfss	lcd_printf@flags& (0+255),7,b
  2587  000E46  D00D               	goto	l3155
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;iut_lcd.c: 502: larg = (*(int *)__va_arg((*(int **)ap), (int)0));
  2591  000E48  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2592  000E4C  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2593  000E50  CFDE F090          	movff	postinc2,lcd_printf@larg
  2594  000E54  CFDD F091          	movff	postdec2,lcd_printf@larg+1
  2595  000E58  0100               	movlb	0	; () banked
  2596  000E5A  0E00               	movlw	0
  2597  000E5C  BF91               	btfsc	(lcd_printf@larg+1)& (0+255),7,b
  2598  000E5E  0EFF               	movlw	-1
  2599  000E60  D7A2               	goto	L13
  2600  000E62                     l3155:
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;iut_lcd.c: 503: else
  2604                           ;iut_lcd.c: 504: larg = (*(unsigned int *)__va_arg((*(unsigned int **)ap), (unsigned int
      +                          )0));
  2605  000E62  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2606  000E66  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2607  000E6A  CFDE F044          	movff	postinc2,??_lcd_printf
  2608  000E6E  CFDD F045          	movff	postdec2,??_lcd_printf+1
  2609  000E72  C044  F090         	movff	??_lcd_printf,lcd_printf@larg
  2610  000E76  C045  F091         	movff	??_lcd_printf+1,lcd_printf@larg+1
  2611  000E7A  0100               	movlb	0	; () banked
  2612  000E7C                     L22:
  2613  000E7C  6B92               	clrf	(lcd_printf@larg+2)& (0+255),b
  2614  000E7E  6B93               	clrf	(lcd_printf@larg+3)& (0+255),b
  2615  000E80                     l3157:
  2616                           
  2617                           ; BSR set to: 0
  2618  000E80  0E02               	movlw	2
  2619  000E82  D794               	goto	L5
  2620  000E84                     l3159:
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;iut_lcd.c: 507: if (!have_precision)
  2624  000E84  0100               	movlb	0	; () banked
  2625  000E86  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  2626  000E88  0100               	movlb	0	; () banked
  2627  000E8A  A4D8               	btfss	status,2,c
  2628  000E8C  D003               	goto	l222
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;iut_lcd.c: 508: precision = 1;
  2632  000E8E  0E01               	movlw	1
  2633  000E90  0100               	movlb	0	; () banked
  2634  000E92  6FA0               	movwf	lcd_printf@precision& (0+255),b
  2635  000E94                     l222:
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;iut_lcd.c: 510: {
  2639                           ;iut_lcd.c: 511: unsigned char digit_cnt = 0;
  2640  000E94  0E00               	movlw	0
  2641  000E96  0100               	movlb	0	; () banked
  2642  000E98  6F8F               	movwf	lcd_printf@digit_cnt& (0+255),b
  2643                           
  2644                           ;iut_lcd.c: 512: unsigned char prefix_cnt = 0;
  2645  000E9A  0E00               	movlw	0
  2646  000E9C  0100               	movlb	0	; () banked
  2647  000E9E  6F8C               	movwf	lcd_printf@prefix_cnt& (0+255),b
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;iut_lcd.c: 513: unsigned char sign_char;
  2651                           ;iut_lcd.c: 516: char buf[33];
  2652                           ;iut_lcd.c: 518: char *q = &buf[31];
  2653  000EA0  0E7F               	movlw	low (lcd_printf@buf+31)
  2654  000EA2  0100               	movlb	0	; () banked
  2655  000EA4  6F86               	movwf	lcd_printf@q& (0+255),b
  2656  000EA6  0E00               	movlw	high (lcd_printf@buf+31)
  2657  000EA8  0100               	movlb	0	; () banked
  2658  000EAA  6F87               	movwf	(lcd_printf@q+1)& (0+255),b
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;iut_lcd.c: 520: buf[32] = '\0';
  2662  000EAC  0E00               	movlw	0
  2663  000EAE  0100               	movlb	0	; () banked
  2664  000EB0  6F80               	movwf	(lcd_printf@buf+32)& (0+255),b
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;iut_lcd.c: 522: space_cnt = 0;
  2668  000EB2  0E00               	movlw	0
  2669  000EB4  0100               	movlb	0	; () banked
  2670  000EB6  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;iut_lcd.c: 523: size = 10;
  2674  000EB8  0E0A               	movlw	10
  2675  000EBA  0100               	movlb	0	; () banked
  2676  000EBC  6F94               	movwf	lcd_printf@size& (0+255),b
  2677                           
  2678                           ;iut_lcd.c: 525: switch (c) {
  2679  000EBE  D00B               	goto	l3181
  2680  000EC0                     l3171:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;iut_lcd.c: 527: case 'B':
  2684                           ;iut_lcd.c: 528: size = 2;
  2685  000EC0  0E02               	movlw	2
  2686  000EC2  D006               	goto	L7
  2687  000EC4                     l3173:
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;iut_lcd.c: 531: size = 8;
  2691  000EC4  0E08               	movlw	8
  2692  000EC6  D004               	goto	L7
  2693  000EC8                     l3175:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;iut_lcd.c: 534: case 'P':
  2697                           ;iut_lcd.c: 537: c += 'x' - 'p';
  2698  000EC8  0E08               	movlw	8
  2699  000ECA  0100               	movlb	0	; () banked
  2700  000ECC  27A2               	addwf	lcd_printf@c& (0+255),f,b
  2701  000ECE                     l3177:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;iut_lcd.c: 540: case 'X':
  2705                           ;iut_lcd.c: 541: size = 16;
  2706  000ECE  0E10               	movlw	16
  2707  000ED0                     L7:
  2708  000ED0  0100               	movlb	0	; () banked
  2709  000ED2  6F94               	movwf	lcd_printf@size& (0+255),b
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;iut_lcd.c: 543: }
  2713                           
  2714                           ;iut_lcd.c: 542: break;
  2715  000ED4  D017               	goto	l226
  2716  000ED6                     l3181:
  2717                           
  2718                           ; BSR set to: 0
  2719  000ED6  0100               	movlb	0	; () banked
  2720  000ED8  51A2               	movf	lcd_printf@c& (0+255),w,b
  2721                           
  2722                           ; Switch size 1, requested type "space"
  2723                           ; Number of cases is 7, Range of values is 66 to 120
  2724                           ; switch strategies available:
  2725                           ; Name         Instructions Cycles
  2726                           ; simple_byte           22    12 (average)
  2727                           ;	Chosen strategy is simple_byte
  2728  000EDA  0A42               	xorlw	66	; case 66
  2729  000EDC  B4D8               	btfsc	status,2,c
  2730  000EDE  D7F0               	goto	l3171
  2731  000EE0  0A12               	xorlw	18	; case 80
  2732  000EE2  B4D8               	btfsc	status,2,c
  2733  000EE4  D7F1               	goto	l3175
  2734  000EE6  0A08               	xorlw	8	; case 88
  2735  000EE8  B4D8               	btfsc	status,2,c
  2736  000EEA  D7F1               	goto	l3177
  2737  000EEC  0A3A               	xorlw	58	; case 98
  2738  000EEE  B4D8               	btfsc	status,2,c
  2739  000EF0  D7E7               	goto	l3171
  2740  000EF2  0A0D               	xorlw	13	; case 111
  2741  000EF4  B4D8               	btfsc	status,2,c
  2742  000EF6  D7E6               	goto	l3173
  2743  000EF8  0A1F               	xorlw	31	; case 112
  2744  000EFA  B4D8               	btfsc	status,2,c
  2745  000EFC  D7E5               	goto	l3175
  2746  000EFE  0A08               	xorlw	8	; case 120
  2747  000F00  B4D8               	btfsc	status,2,c
  2748  000F02  D7E5               	goto	l3177
  2749  000F04                     l226:
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;iut_lcd.c: 547: if (!(flags & 0x80))
  2753  000F04  0100               	movlb	0	; () banked
  2754  000F06  BF9F               	btfsc	lcd_printf@flags& (0+255),7,b
  2755  000F08  D003               	goto	l3185
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;iut_lcd.c: 548: flags &= ~(0x2 | 0x4);
  2759  000F0A  0EF9               	movlw	249
  2760  000F0C  0100               	movlb	0	; () banked
  2761  000F0E  179F               	andwf	lcd_printf@flags& (0+255),f,b
  2762  000F10                     l3185:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;iut_lcd.c: 558: if (flags & 0x80 && ((long) larg < 0)) {
  2766  000F10  0100               	movlb	0	; () banked
  2767  000F12  AF9F               	btfss	lcd_printf@flags& (0+255),7,b
  2768  000F14  D011               	goto	l233
  2769                           
  2770                           ; BSR set to: 0
  2771  000F16  0100               	movlb	0	; () banked
  2772  000F18  AF93               	btfss	(lcd_printf@larg+3)& (0+255),7,b
  2773  000F1A  D00E               	goto	l233
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;iut_lcd.c: 559: larg = -(long) larg;
  2777  000F1C  0100               	movlb	0	; () banked
  2778  000F1E  1F93               	comf	(lcd_printf@larg+3)& (0+255),f,b
  2779  000F20  1F92               	comf	(lcd_printf@larg+2)& (0+255),f,b
  2780  000F22  1F91               	comf	(lcd_printf@larg+1)& (0+255),f,b
  2781  000F24  6D90               	negf	lcd_printf@larg& (0+255),b
  2782  000F26  0E00               	movlw	0
  2783  000F28  2391               	addwfc	(lcd_printf@larg+1)& (0+255),f,b
  2784  000F2A  2392               	addwfc	(lcd_printf@larg+2)& (0+255),f,b
  2785  000F2C  2393               	addwfc	(lcd_printf@larg+3)& (0+255),f,b
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;iut_lcd.c: 560: sign_char = '-';
  2789  000F2E  0E2D               	movlw	45
  2790  000F30  D00C               	goto	L12
  2791  000F32                     l3193:
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;iut_lcd.c: 561: ++digit_cnt;
  2795  000F32  0100               	movlb	0	; () banked
  2796  000F34  2B8F               	incf	lcd_printf@digit_cnt& (0+255),f,b
  2797                           
  2798                           ;iut_lcd.c: 562: } else if (flags & 0x2) {
  2799  000F36  D00F               	goto	l234
  2800  000F38                     l233:
  2801                           
  2802                           ; BSR set to: 0
  2803  000F38  0100               	movlb	0	; () banked
  2804  000F3A  A39F               	btfss	lcd_printf@flags& (0+255),1,b
  2805  000F3C  D002               	goto	l235
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;iut_lcd.c: 563: sign_char = '+';
  2809  000F3E  0E2B               	movlw	43
  2810  000F40  D004               	goto	L12
  2811  000F42                     l235:
  2812                           
  2813                           ; BSR set to: 0
  2814  000F42  0100               	movlb	0	; () banked
  2815  000F44  A59F               	btfss	lcd_printf@flags& (0+255),2,b
  2816  000F46  D004               	goto	l3203
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;iut_lcd.c: 566: sign_char = ' ';
  2820  000F48  0E20               	movlw	32
  2821  000F4A                     L12:
  2822  000F4A  0100               	movlb	0	; () banked
  2823  000F4C  6F83               	movwf	lcd_printf@sign_char& (0+255),b
  2824  000F4E  D7F1               	goto	l3193
  2825  000F50                     l3203:
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;iut_lcd.c: 569: sign_char = '\0';
  2829  000F50  0E00               	movlw	0
  2830  000F52  0100               	movlb	0	; () banked
  2831  000F54  6F83               	movwf	lcd_printf@sign_char& (0+255),b
  2832  000F56                     l234:
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;iut_lcd.c: 573: if (precision || larg) {
  2836  000F56  0100               	movlb	0	; () banked
  2837  000F58  51A0               	movf	lcd_printf@precision& (0+255),w,b
  2838  000F5A  0100               	movlb	0	; () banked
  2839  000F5C  A4D8               	btfss	status,2,c
  2840  000F5E  D00A               	goto	l3207
  2841                           
  2842                           ; BSR set to: 0
  2843  000F60  0100               	movlb	0	; () banked
  2844  000F62  5190               	movf	lcd_printf@larg& (0+255),w,b
  2845  000F64  0100               	movlb	0	; () banked
  2846  000F66  1191               	iorwf	(lcd_printf@larg+1)& (0+255),w,b
  2847  000F68  0100               	movlb	0	; () banked
  2848  000F6A  1192               	iorwf	(lcd_printf@larg+2)& (0+255),w,b
  2849  000F6C  0100               	movlb	0	; () banked
  2850  000F6E  1193               	iorwf	(lcd_printf@larg+3)& (0+255),w,b
  2851  000F70  B4D8               	btfsc	status,2,c
  2852  000F72  D07E               	goto	l3241
  2853  000F74                     l3207:
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;iut_lcd.c: 575: cval = s_digits[larg % size];
  2857  000F74  C090  F001         	movff	lcd_printf@larg,___llmod@dividend
  2858  000F78  C091  F002         	movff	lcd_printf@larg+1,___llmod@dividend+1
  2859  000F7C  C092  F003         	movff	lcd_printf@larg+2,___llmod@dividend+2
  2860  000F80  C093  F004         	movff	lcd_printf@larg+3,___llmod@dividend+3
  2861  000F84  0100               	movlb	0	; () banked
  2862  000F86  5194               	movf	lcd_printf@size& (0+255),w,b
  2863  000F88  6E05               	movwf	___llmod@divisor,c
  2864  000F8A  6A06               	clrf	___llmod@divisor+1,c
  2865  000F8C  6A07               	clrf	___llmod@divisor+2,c
  2866  000F8E  6A08               	clrf	___llmod@divisor+3,c
  2867  000F90  EC23  F010         	call	___llmod	;wreg free
  2868  000F94  0E01               	movlw	low _s_digits
  2869  000F96  2401               	addwf	?___llmod,w,c
  2870  000F98  6EF6               	movwf	tblptrl,c
  2871  000F9A  0E08               	movlw	high _s_digits
  2872  000F9C  2002               	addwfc	?___llmod+1,w,c
  2873  000F9E  6EF7               	movwf	tblptrh,c
  2874  000FA0                     	if	0	;There are less than 3 active tblptr bytes
  2875  000FA0                     	endif
  2876  000FA0  0008               	tblrd		*
  2877  000FA2  CFF5 F09A          	movff	tablat,lcd_printf@cval
  2878                           
  2879                           ;iut_lcd.c: 576: if (c == 'X' && cval >= 'a')
  2880  000FA6  0E58               	movlw	88
  2881  000FA8  0100               	movlb	0	; () banked
  2882  000FAA  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2883  000FAC  A4D8               	btfss	status,2,c
  2884  000FAE  D007               	goto	l3215
  2885                           
  2886                           ; BSR set to: 0
  2887  000FB0  0E60               	movlw	96
  2888  000FB2  0100               	movlb	0	; () banked
  2889  000FB4  659A               	cpfsgt	lcd_printf@cval& (0+255),b
  2890  000FB6  D003               	goto	l3215
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;iut_lcd.c: 577: cval -= 'a' - 'A';
  2894  000FB8  0E20               	movlw	32
  2895  000FBA  0100               	movlb	0	; () banked
  2896  000FBC  5F9A               	subwf	lcd_printf@cval& (0+255),f,b
  2897  000FBE                     l3215:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;iut_lcd.c: 578: larg /= size;
  2901  000FBE  C090  F001         	movff	lcd_printf@larg,___lldiv@dividend
  2902  000FC2  C091  F002         	movff	lcd_printf@larg+1,___lldiv@dividend+1
  2903  000FC6  C092  F003         	movff	lcd_printf@larg+2,___lldiv@dividend+2
  2904  000FCA  C093  F004         	movff	lcd_printf@larg+3,___lldiv@dividend+3
  2905  000FCE  0100               	movlb	0	; () banked
  2906  000FD0  5194               	movf	lcd_printf@size& (0+255),w,b
  2907  000FD2  6E05               	movwf	___lldiv@divisor,c
  2908  000FD4  6A06               	clrf	___lldiv@divisor+1,c
  2909  000FD6  6A07               	clrf	___lldiv@divisor+2,c
  2910  000FD8  6A08               	clrf	___lldiv@divisor+3,c
  2911  000FDA  ECE2  F00F         	call	___lldiv	;wreg free
  2912  000FDE  C001  F090         	movff	?___lldiv,lcd_printf@larg
  2913  000FE2  C002  F091         	movff	?___lldiv+1,lcd_printf@larg+1
  2914  000FE6  C003  F092         	movff	?___lldiv+2,lcd_printf@larg+2
  2915  000FEA  C004  F093         	movff	?___lldiv+3,lcd_printf@larg+3
  2916                           
  2917                           ;iut_lcd.c: 579: *q-- = cval;
  2918  000FEE  C086  FFD9         	movff	lcd_printf@q,fsr2l
  2919  000FF2  C087  FFDA         	movff	lcd_printf@q+1,fsr2h
  2920  000FF6  C09A  FFDF         	movff	lcd_printf@cval,indf2
  2921  000FFA  0100               	movlb	0	; () banked
  2922  000FFC  0786               	decf	lcd_printf@q& (0+255),f,b
  2923  000FFE  A0D8               	btfss	status,0,c
  2924  001000  0787               	decf	(lcd_printf@q+1)& (0+255),f,b
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;iut_lcd.c: 580: ++digit_cnt;
  2928  001002  0100               	movlb	0	; () banked
  2929  001004  2B8F               	incf	lcd_printf@digit_cnt& (0+255),f,b
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;iut_lcd.c: 581: } while (larg);
  2933  001006  0100               	movlb	0	; () banked
  2934  001008  5190               	movf	lcd_printf@larg& (0+255),w,b
  2935  00100A  0100               	movlb	0	; () banked
  2936  00100C  1191               	iorwf	(lcd_printf@larg+1)& (0+255),w,b
  2937  00100E  0100               	movlb	0	; () banked
  2938  001010  1192               	iorwf	(lcd_printf@larg+2)& (0+255),w,b
  2939  001012  0100               	movlb	0	; () banked
  2940  001014  1193               	iorwf	(lcd_printf@larg+3)& (0+255),w,b
  2941  001016  A4D8               	btfss	status,2,c
  2942  001018  D7AD               	goto	l3207
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;iut_lcd.c: 585: if (flags & 0x8) {
  2946  00101A  0100               	movlb	0	; () banked
  2947  00101C  A79F               	btfss	lcd_printf@flags& (0+255),3,b
  2948  00101E  D02B               	goto	l3243
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;iut_lcd.c: 586: if (c == 'o') {
  2952  001020  0E6F               	movlw	111
  2953  001022  0100               	movlb	0	; () banked
  2954  001024  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2955  001026  A4D8               	btfss	status,2,c
  2956  001028  D00B               	goto	l3231
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;iut_lcd.c: 590: if (precision <= digit_cnt)
  2960  00102A  0100               	movlb	0	; () banked
  2961  00102C  51A0               	movf	lcd_printf@precision& (0+255),w,b
  2962  00102E  0100               	movlb	0	; () banked
  2963  001030  5D8F               	subwf	lcd_printf@digit_cnt& (0+255),w,b
  2964  001032  A0D8               	btfss	status,0,c
  2965  001034  D020               	goto	l3243
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;iut_lcd.c: 591: precision = digit_cnt + 1;
  2969  001036  0100               	movlb	0	; () banked
  2970  001038  298F               	incf	lcd_printf@digit_cnt& (0+255),w,b
  2971  00103A  0100               	movlb	0	; () banked
  2972  00103C  6FA0               	movwf	lcd_printf@precision& (0+255),b
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;iut_lcd.c: 592: } else if (c == 'x'
  2976  00103E  D01B               	goto	l3243
  2977  001040                     l3231:
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;iut_lcd.c: 593: || c == 'X' || c == 'b' || c == 'B')
  2981  001040  0E78               	movlw	120
  2982  001042  0100               	movlb	0	; () banked
  2983  001044  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2984  001046  B4D8               	btfsc	status,2,c
  2985  001048  D00F               	goto	l3239
  2986                           
  2987                           ; BSR set to: 0
  2988  00104A  0E58               	movlw	88
  2989  00104C  0100               	movlb	0	; () banked
  2990  00104E  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2991  001050  B4D8               	btfsc	status,2,c
  2992  001052  D00A               	goto	l3239
  2993                           
  2994                           ; BSR set to: 0
  2995  001054  0E62               	movlw	98
  2996  001056  0100               	movlb	0	; () banked
  2997  001058  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2998  00105A  B4D8               	btfsc	status,2,c
  2999  00105C  D005               	goto	l3239
  3000                           
  3001                           ; BSR set to: 0
  3002  00105E  0E42               	movlw	66
  3003  001060  0100               	movlb	0	; () banked
  3004  001062  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  3005  001064  A4D8               	btfss	status,2,c
  3006  001066  D007               	goto	l3243
  3007  001068                     l3239:
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;iut_lcd.c: 594: prefix_cnt = 2;
  3011  001068  0E02               	movlw	2
  3012  00106A  0100               	movlb	0	; () banked
  3013  00106C  6F8C               	movwf	lcd_printf@prefix_cnt& (0+255),b
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;iut_lcd.c: 595: }
  3017                           ;iut_lcd.c: 596: } else
  3018                           
  3019                           ; BSR set to: 0
  3020                           
  3021                           ; BSR set to: 0
  3022  00106E  D003               	goto	l3243
  3023  001070                     l3241:
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;iut_lcd.c: 597: digit_cnt = 0;
  3027  001070  0E00               	movlw	0
  3028  001072  0100               	movlb	0	; () banked
  3029  001074  6F8F               	movwf	lcd_printf@digit_cnt& (0+255),b
  3030  001076                     l3243:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;iut_lcd.c: 608: if ((flags & 0x10) && (width > precision)
  3034                           ;iut_lcd.c: 609: && !have_precision)
  3035  001076  0100               	movlb	0	; () banked
  3036  001078  A99F               	btfss	lcd_printf@flags& (0+255),4,b
  3037  00107A  D00C               	goto	l3251
  3038                           
  3039                           ; BSR set to: 0
  3040  00107C  0100               	movlb	0	; () banked
  3041  00107E  51A1               	movf	lcd_printf@width& (0+255),w,b
  3042  001080  0100               	movlb	0	; () banked
  3043  001082  5DA0               	subwf	lcd_printf@precision& (0+255),w,b
  3044  001084  B0D8               	btfsc	status,0,c
  3045  001086  D006               	goto	l3251
  3046                           
  3047                           ; BSR set to: 0
  3048  001088  0100               	movlb	0	; () banked
  3049  00108A  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  3050  00108C  0100               	movlb	0	; () banked
  3051  00108E  B4D8               	btfsc	status,2,c
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;iut_lcd.c: 610: precision = width;
  3055  001090  C0A1  F0A0         	movff	lcd_printf@width,lcd_printf@precision
  3056  001094                     l3251:
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;iut_lcd.c: 613: if (precision > digit_cnt)
  3060  001094  0100               	movlb	0	; () banked
  3061  001096  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3062  001098  0100               	movlb	0	; () banked
  3063  00109A  5D8F               	subwf	lcd_printf@digit_cnt& (0+255),w,b
  3064  00109C  B0D8               	btfsc	status,0,c
  3065  00109E  D005               	goto	l3255
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;iut_lcd.c: 614: precision -= digit_cnt;
  3069  0010A0  0100               	movlb	0	; () banked
  3070  0010A2  518F               	movf	lcd_printf@digit_cnt& (0+255),w,b
  3071  0010A4  0100               	movlb	0	; () banked
  3072  0010A6  5FA0               	subwf	lcd_printf@precision& (0+255),f,b
  3073  0010A8  D003               	goto	l3257
  3074  0010AA                     l3255:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;iut_lcd.c: 615: else
  3078                           ;iut_lcd.c: 616: precision = 0;
  3079  0010AA  0E00               	movlw	0
  3080  0010AC  0100               	movlb	0	; () banked
  3081  0010AE  6FA0               	movwf	lcd_printf@precision& (0+255),b
  3082  0010B0                     l3257:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;iut_lcd.c: 622: if (width > precision + digit_cnt + prefix_cnt)
  3086  0010B0  0100               	movlb	0	; () banked
  3087  0010B2  51A1               	movf	lcd_printf@width& (0+255),w,b
  3088  0010B4  6E44               	movwf	??_lcd_printf& (0+255),c
  3089  0010B6  6A45               	clrf	(??_lcd_printf+1)& (0+255),c
  3090  0010B8  0100               	movlb	0	; () banked
  3091  0010BA  518F               	movf	lcd_printf@digit_cnt& (0+255),w,b
  3092  0010BC  C0A0  F046         	movff	lcd_printf@precision,??_lcd_printf+2
  3093  0010C0  6A47               	clrf	(??_lcd_printf+3)& (0+255),c
  3094  0010C2  2646               	addwf	??_lcd_printf+2,f,c
  3095  0010C4  0E00               	movlw	0
  3096  0010C6  2247               	addwfc	??_lcd_printf+3,f,c
  3097  0010C8  0100               	movlb	0	; () banked
  3098  0010CA  518C               	movf	lcd_printf@prefix_cnt& (0+255),w,b
  3099  0010CC  2646               	addwf	??_lcd_printf+2,f,c
  3100  0010CE  0E00               	movlw	0
  3101  0010D0  2247               	addwfc	??_lcd_printf+3,f,c
  3102  0010D2  5044               	movf	??_lcd_printf,w,c
  3103  0010D4  5C46               	subwf	??_lcd_printf+2,w,c
  3104  0010D6  5047               	movf	??_lcd_printf+3,w,c
  3105  0010D8  0A80               	xorlw	128
  3106  0010DA  6E48               	movwf	(??_lcd_printf+4)& (0+255),c
  3107  0010DC  5045               	movf	??_lcd_printf+1,w,c
  3108  0010DE  0A80               	xorlw	128
  3109  0010E0  5848               	subwfb	(??_lcd_printf+4)& (0+255),w,c
  3110  0010E2  B0D8               	btfsc	status,0,c
  3111  0010E4  D00B               	goto	l3261
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;iut_lcd.c: 623: space_cnt =
  3115                           ;iut_lcd.c: 624: width - precision - digit_cnt - prefix_cnt;
  3116  0010E6  0100               	movlb	0	; () banked
  3117  0010E8  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3118  0010EA  0100               	movlb	0	; () banked
  3119  0010EC  258F               	addwf	lcd_printf@digit_cnt& (0+255),w,b
  3120  0010EE  0100               	movlb	0	; () banked
  3121  0010F0  258C               	addwf	lcd_printf@prefix_cnt& (0+255),w,b
  3122  0010F2  0800               	sublw	0
  3123  0010F4  0100               	movlb	0	; () banked
  3124  0010F6  25A1               	addwf	lcd_printf@width& (0+255),w,b
  3125  0010F8  0100               	movlb	0	; () banked
  3126  0010FA  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  3127  0010FC                     l3261:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;iut_lcd.c: 629: if (!(flags & 0x1) && space_cnt) {
  3131  0010FC  0100               	movlb	0	; () banked
  3132  0010FE  B19F               	btfsc	lcd_printf@flags& (0+255),0,b
  3133  001100  D00E               	goto	l3269
  3134                           
  3135                           ; BSR set to: 0
  3136  001102  0100               	movlb	0	; () banked
  3137  001104  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  3138  001106  0100               	movlb	0	; () banked
  3139  001108  B4D8               	btfsc	status,2,c
  3140  00110A  D009               	goto	l3269
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;iut_lcd.c: 630: lcd_repete_n(space_cnt, ' ');
  3144  00110C  0E20               	movlw	32
  3145  00110E  6E03               	movwf	lcd_repete_n@c,c
  3146  001110  0100               	movlb	0	; () banked
  3147  001112  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  3148  001114  EC6F  F011         	call	_lcd_repete_n
  3149                           
  3150                           ;iut_lcd.c: 632: space_cnt = 0;
  3151  001118  0E00               	movlw	0
  3152  00111A  0100               	movlb	0	; () banked
  3153  00111C  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  3154  00111E                     l3269:
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;iut_lcd.c: 633: }
  3158                           ;iut_lcd.c: 636: if (sign_char) {
  3159  00111E  0100               	movlb	0	; () banked
  3160  001120  5183               	movf	lcd_printf@sign_char& (0+255),w,b
  3161  001122  0100               	movlb	0	; () banked
  3162  001124  B4D8               	btfsc	status,2,c
  3163  001126  D004               	goto	l3273
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;iut_lcd.c: 637: lcd_write_data_busy(sign_char);
  3167  001128  0100               	movlb	0	; () banked
  3168  00112A  5183               	movf	lcd_printf@sign_char& (0+255),w,b
  3169  00112C  EC59  F011         	call	_lcd_write_data_busy
  3170  001130                     l3273:
  3171                           
  3172                           ;iut_lcd.c: 638: }
  3173                           ;iut_lcd.c: 640: if (prefix_cnt) {
  3174  001130  0100               	movlb	0	; () banked
  3175  001132  518C               	movf	lcd_printf@prefix_cnt& (0+255),w,b
  3176  001134  0100               	movlb	0	; () banked
  3177  001136  B4D8               	btfsc	status,2,c
  3178  001138  D007               	goto	l3277
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;iut_lcd.c: 641: lcd_write_data_busy('0');
  3182  00113A  0E30               	movlw	48
  3183  00113C  EC59  F011         	call	_lcd_write_data_busy
  3184                           
  3185                           ;iut_lcd.c: 642: lcd_write_data_busy(c);
  3186  001140  0100               	movlb	0	; () banked
  3187  001142  51A2               	movf	lcd_printf@c& (0+255),w,b
  3188  001144  EC59  F011         	call	_lcd_write_data_busy
  3189  001148                     l3277:
  3190                           
  3191                           ;iut_lcd.c: 643: }
  3192                           ;iut_lcd.c: 647: if (precision > prefix_cnt)
  3193  001148  0100               	movlb	0	; () banked
  3194  00114A  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3195  00114C  0100               	movlb	0	; () banked
  3196  00114E  5D8C               	subwf	lcd_printf@prefix_cnt& (0+255),w,b
  3197  001150  B0D8               	btfsc	status,0,c
  3198  001152  D004               	goto	l3281
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;iut_lcd.c: 648: precision -= prefix_cnt;
  3202  001154  0100               	movlb	0	; () banked
  3203  001156  518C               	movf	lcd_printf@prefix_cnt& (0+255),w,b
  3204  001158  0100               	movlb	0	; () banked
  3205  00115A  5FA0               	subwf	lcd_printf@precision& (0+255),f,b
  3206  00115C                     l3281:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;iut_lcd.c: 649: lcd_repete_n(precision, '0');
  3210  00115C  0E30               	movlw	48
  3211  00115E  6E03               	movwf	lcd_repete_n@c,c
  3212  001160  0100               	movlb	0	; () banked
  3213  001162  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3214  001164  EC6F  F011         	call	_lcd_repete_n
  3215  001168  D004               	goto	l3287
  3216  00116A                     l3285:
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;iut_lcd.c: 652: lcd_write_data_busy(cval);
  3220  00116A  0100               	movlb	0	; () banked
  3221  00116C  519A               	movf	lcd_printf@cval& (0+255),w,b
  3222  00116E  EC59  F011         	call	_lcd_write_data_busy
  3223  001172                     l3287:
  3224  001172  0100               	movlb	0	; () banked
  3225  001174  4B86               	infsnz	lcd_printf@q& (0+255),f,b
  3226  001176  2B87               	incf	(lcd_printf@q+1)& (0+255),f,b
  3227  001178  C086  FFD9         	movff	lcd_printf@q,fsr2l
  3228  00117C  C087  FFDA         	movff	lcd_printf@q+1,fsr2h
  3229  001180  50DF               	movf	indf2,w,c
  3230  001182  0100               	movlb	0	; () banked
  3231  001184  6F9A               	movwf	lcd_printf@cval& (0+255),b
  3232                           
  3233                           ; BSR set to: 0
  3234                           
  3235                           ; BSR set to: 0
  3236  001186  0100               	movlb	0	; () banked
  3237  001188  519A               	movf	lcd_printf@cval& (0+255),w,b
  3238  00118A  0100               	movlb	0	; () banked
  3239  00118C  A4D8               	btfss	status,2,c
  3240  00118E  D7ED               	goto	l3285
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;iut_lcd.c: 653: }
  3244                           ;iut_lcd.c: 656: lcd_repete_n(space_cnt, ' ');
  3245                           
  3246                           ; BSR set to: 0
  3247  001190  0E20               	movlw	32
  3248  001192  6E03               	movwf	lcd_repete_n@c,c
  3249  001194  0100               	movlb	0	; () banked
  3250  001196  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  3251  001198  EC6F  F011         	call	_lcd_repete_n
  3252                           
  3253                           ;iut_lcd.c: 659: }
  3254                           ;iut_lcd.c: 660: break;
  3255  00119C  D1F7               	goto	l3415
  3256  00119E                     l3293:
  3257                           
  3258                           ;iut_lcd.c: 662: {
  3259                           ;iut_lcd.c: 663: float x;
  3260                           ;iut_lcd.c: 664: unsigned char i, w;
  3261                           ;iut_lcd.c: 665: unsigned int k;
  3262                           ;iut_lcd.c: 666: unsigned char sign, have_sign = 0;
  3263  00119E  0E00               	movlw	0
  3264  0011A0  0100               	movlb	0	; () banked
  3265  0011A2  6F8B               	movwf	lcd_printf@have_sign& (0+255),b
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;iut_lcd.c: 667: x = (*(float *)__va_arg((*(float **)ap), (float)0));
  3269  0011A4  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  3270  0011A8  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  3271  0011AC  CFDE F096          	movff	postinc2,lcd_printf@x
  3272  0011B0  CFDE F097          	movff	postinc2,lcd_printf@x+1
  3273  0011B4  CFDD F098          	movff	postdec2,lcd_printf@x+2
  3274                           
  3275                           ; BSR set to: 0
  3276  0011B8  0E03               	movlw	3
  3277  0011BA  0100               	movlb	0	; () banked
  3278  0011BC  279D               	addwf	lcd_printf@ap& (0+255),f,b
  3279  0011BE  0E00               	movlw	0
  3280  0011C0  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;iut_lcd.c: 668: if (x < 0.0) {
  3284  0011C2  0100               	movlb	0	; () banked
  3285  0011C4  AF98               	btfss	(lcd_printf@x+2)& (0+255),7,b
  3286  0011C6  D012               	goto	l265
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;iut_lcd.c: 669: sign = '-';
  3290  0011C8  0E2D               	movlw	45
  3291  0011CA  0100               	movlb	0	; () banked
  3292  0011CC  6F88               	movwf	lcd_printf@sign& (0+255),b
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;iut_lcd.c: 670: x = -x;
  3296  0011CE  C096  F00D         	movff	lcd_printf@x,___ftneg@f1
  3297  0011D2  C097  F00E         	movff	lcd_printf@x+1,___ftneg@f1+1
  3298  0011D6  C098  F00F         	movff	lcd_printf@x+2,___ftneg@f1+2
  3299  0011DA  EC38  F011         	call	___ftneg	;wreg free
  3300  0011DE  C00D  F096         	movff	?___ftneg,lcd_printf@x
  3301  0011E2  C00E  F097         	movff	?___ftneg+1,lcd_printf@x+1
  3302  0011E6  C00F  F098         	movff	?___ftneg+2,lcd_printf@x+2
  3303  0011EA  D005               	goto	L9
  3304  0011EC                     l265:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;iut_lcd.c: 673: if (flags & 0x2) {
  3308  0011EC  0100               	movlb	0	; () banked
  3309  0011EE  A39F               	btfss	lcd_printf@flags& (0+255),1,b
  3310  0011F0  D006               	goto	l267
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;iut_lcd.c: 674: sign = '+';
  3314  0011F2  0E2B               	movlw	43
  3315  0011F4  D008               	goto	L10
  3316  0011F6                     L9:
  3317                           
  3318                           ;iut_lcd.c: 675: have_sign = 1;
  3319  0011F6  0E01               	movlw	1
  3320  0011F8  0100               	movlb	0	; () banked
  3321  0011FA  6F8B               	movwf	lcd_printf@have_sign& (0+255),b
  3322                           
  3323                           ;iut_lcd.c: 676: } else if (flags & 0x4) {
  3324  0011FC  D007               	goto	l266
  3325  0011FE                     l267:
  3326                           
  3327                           ; BSR set to: 0
  3328  0011FE  0100               	movlb	0	; () banked
  3329  001200  A59F               	btfss	lcd_printf@flags& (0+255),2,b
  3330  001202  D004               	goto	l266
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;iut_lcd.c: 677: sign = ' ';
  3334  001204  0E20               	movlw	32
  3335  001206                     L10:
  3336  001206  0100               	movlb	0	; () banked
  3337  001208  6F88               	movwf	lcd_printf@sign& (0+255),b
  3338  00120A  D7F5               	goto	L9
  3339  00120C                     l266:
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;iut_lcd.c: 679: }
  3343                           ;iut_lcd.c: 680: }
  3344                           ;iut_lcd.c: 681: for (i = 0; x >= 1; i++) x /= 10;
  3345  00120C  0E00               	movlw	0
  3346  00120E  0100               	movlb	0	; () banked
  3347  001210  6F8D               	movwf	lcd_printf@i& (0+255),b
  3348                           
  3349                           ; BSR set to: 0
  3350  001212  C096  F001         	movff	lcd_printf@x,___ftge@ff1
  3351  001216  C097  F002         	movff	lcd_printf@x+1,___ftge@ff1+1
  3352  00121A  C098  F003         	movff	lcd_printf@x+2,___ftge@ff1+2
  3353  00121E  0E00               	movlw	0
  3354  001220  6E04               	movwf	___ftge@ff2,c
  3355  001222  0E80               	movlw	128
  3356  001224  6E05               	movwf	___ftge@ff2+1,c
  3357  001226  0E3F               	movlw	63
  3358  001228  6E06               	movwf	___ftge@ff2+2,c
  3359  00122A  EC9A  F00F         	call	___ftge	;wreg free
  3360  00122E  A0D8               	btfss	status,0,c
  3361  001230  D025               	goto	l3321
  3362  001232  C096  F02B         	movff	lcd_printf@x,___ftdiv@f1
  3363  001236  C097  F02C         	movff	lcd_printf@x+1,___ftdiv@f1+1
  3364  00123A  C098  F02D         	movff	lcd_printf@x+2,___ftdiv@f1+2
  3365  00123E  0E00               	movlw	0
  3366  001240  6E2E               	movwf	___ftdiv@f2,c
  3367  001242  0E20               	movlw	32
  3368  001244  6E2F               	movwf	___ftdiv@f2+1,c
  3369  001246  0E41               	movlw	65
  3370  001248  6E30               	movwf	___ftdiv@f2+2,c
  3371  00124A  EC31  F00E         	call	___ftdiv	;wreg free
  3372  00124E  C02B  F096         	movff	?___ftdiv,lcd_printf@x
  3373  001252  C02C  F097         	movff	?___ftdiv+1,lcd_printf@x+1
  3374  001256  C02D  F098         	movff	?___ftdiv+2,lcd_printf@x+2
  3375  00125A  0100               	movlb	0	; () banked
  3376  00125C  2B8D               	incf	lcd_printf@i& (0+255),f,b
  3377                           
  3378                           ; BSR set to: 0
  3379  00125E  C096  F001         	movff	lcd_printf@x,___ftge@ff1
  3380  001262  C097  F002         	movff	lcd_printf@x+1,___ftge@ff1+1
  3381  001266  C098  F003         	movff	lcd_printf@x+2,___ftge@ff1+2
  3382  00126A  0E00               	movlw	0
  3383  00126C  6E04               	movwf	___ftge@ff2,c
  3384  00126E  0E80               	movlw	128
  3385  001270  6E05               	movwf	___ftge@ff2+1,c
  3386  001272  0E3F               	movlw	63
  3387  001274  6E06               	movwf	___ftge@ff2+2,c
  3388  001276  EC9A  F00F         	call	___ftge	;wreg free
  3389  00127A  D7D9               	goto	L11
  3390  00127C                     l3321:
  3391                           
  3392                           ;iut_lcd.c: 682: if ((!have_precision) && (width == 0)) {
  3393  00127C  0100               	movlb	0	; () banked
  3394  00127E  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  3395  001280  0100               	movlb	0	; () banked
  3396  001282  A4D8               	btfss	status,2,c
  3397  001284  D00B               	goto	l3327
  3398                           
  3399                           ; BSR set to: 0
  3400  001286  0100               	movlb	0	; () banked
  3401  001288  51A1               	movf	lcd_printf@width& (0+255),w,b
  3402  00128A  0100               	movlb	0	; () banked
  3403  00128C  A4D8               	btfss	status,2,c
  3404  00128E  D006               	goto	l3327
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;iut_lcd.c: 683: precision = 3;
  3408  001290  0E03               	movlw	3
  3409  001292  0100               	movlb	0	; () banked
  3410  001294  6FA0               	movwf	lcd_printf@precision& (0+255),b
  3411                           
  3412                           ;iut_lcd.c: 684: have_precision = 1;
  3413  001296  0E01               	movlw	1
  3414  001298  0100               	movlb	0	; () banked
  3415  00129A  6F95               	movwf	lcd_printf@have_precision& (0+255),b
  3416  00129C                     l3327:
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;iut_lcd.c: 685: }
  3420                           ;iut_lcd.c: 686: w = precision + i;
  3421  00129C  0100               	movlb	0	; () banked
  3422  00129E  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3423  0012A0  0100               	movlb	0	; () banked
  3424  0012A2  258D               	addwf	lcd_printf@i& (0+255),w,b
  3425  0012A4  0100               	movlb	0	; () banked
  3426  0012A6  6F8E               	movwf	lcd_printf@w& (0+255),b
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;iut_lcd.c: 687: if (precision > 0) w++;
  3430  0012A8  0100               	movlb	0	; () banked
  3431  0012AA  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3432  0012AC  0100               	movlb	0	; () banked
  3433  0012AE  B4D8               	btfsc	status,2,c
  3434  0012B0  D002               	goto	l3333
  3435                           
  3436                           ; BSR set to: 0
  3437  0012B2  0100               	movlb	0	; () banked
  3438  0012B4  2B8E               	incf	lcd_printf@w& (0+255),f,b
  3439  0012B6                     l3333:
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;iut_lcd.c: 688: if (have_sign) w++;
  3443  0012B6  0100               	movlb	0	; () banked
  3444  0012B8  518B               	movf	lcd_printf@have_sign& (0+255),w,b
  3445  0012BA  0100               	movlb	0	; () banked
  3446  0012BC  B4D8               	btfsc	status,2,c
  3447  0012BE  D002               	goto	l3337
  3448                           
  3449                           ; BSR set to: 0
  3450  0012C0  0100               	movlb	0	; () banked
  3451  0012C2  2B8E               	incf	lcd_printf@w& (0+255),f,b
  3452  0012C4                     l3337:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;iut_lcd.c: 689: if (i == 0) w++;
  3456  0012C4  0100               	movlb	0	; () banked
  3457  0012C6  518D               	movf	lcd_printf@i& (0+255),w,b
  3458  0012C8  0100               	movlb	0	; () banked
  3459  0012CA  A4D8               	btfss	status,2,c
  3460  0012CC  D002               	goto	l3341
  3461                           
  3462                           ; BSR set to: 0
  3463  0012CE  0100               	movlb	0	; () banked
  3464  0012D0  2B8E               	incf	lcd_printf@w& (0+255),f,b
  3465  0012D2                     l3341:
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;iut_lcd.c: 690: if (!have_precision) {
  3469  0012D2  0100               	movlb	0	; () banked
  3470  0012D4  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  3471  0012D6  0100               	movlb	0	; () banked
  3472  0012D8  A4D8               	btfss	status,2,c
  3473  0012DA  D01F               	goto	l3349
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;iut_lcd.c: 691: if (width > w + 1) {
  3477  0012DC  0100               	movlb	0	; () banked
  3478  0012DE  51A1               	movf	lcd_printf@width& (0+255),w,b
  3479  0012E0  6E44               	movwf	??_lcd_printf& (0+255),c
  3480  0012E2  6A45               	clrf	(??_lcd_printf+1)& (0+255),c
  3481  0012E4  0100               	movlb	0	; () banked
  3482  0012E6  518E               	movf	lcd_printf@w& (0+255),w,b
  3483  0012E8  6E46               	movwf	(??_lcd_printf+2)& (0+255),c
  3484  0012EA  6A47               	clrf	(??_lcd_printf+3)& (0+255),c
  3485  0012EC  0E01               	movlw	1
  3486  0012EE  2646               	addwf	??_lcd_printf+2,f,c
  3487  0012F0  0E00               	movlw	0
  3488  0012F2  2247               	addwfc	??_lcd_printf+3,f,c
  3489  0012F4  5044               	movf	??_lcd_printf,w,c
  3490  0012F6  5C46               	subwf	??_lcd_printf+2,w,c
  3491  0012F8  5047               	movf	??_lcd_printf+3,w,c
  3492  0012FA  0A80               	xorlw	128
  3493  0012FC  6E48               	movwf	(??_lcd_printf+4)& (0+255),c
  3494  0012FE  5045               	movf	??_lcd_printf+1,w,c
  3495  001300  0A80               	xorlw	128
  3496  001302  5848               	subwfb	(??_lcd_printf+4)& (0+255),w,c
  3497  001304  B0D8               	btfsc	status,0,c
  3498  001306  D009               	goto	l3349
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;iut_lcd.c: 692: precision = width - (w + 1);
  3502  001308  0100               	movlb	0	; () banked
  3503  00130A  298E               	incf	lcd_printf@w& (0+255),w,b
  3504  00130C  0800               	sublw	0
  3505  00130E  0100               	movlb	0	; () banked
  3506  001310  25A1               	addwf	lcd_printf@width& (0+255),w,b
  3507  001312  0100               	movlb	0	; () banked
  3508  001314  6FA0               	movwf	lcd_printf@precision& (0+255),b
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;iut_lcd.c: 693: w = width;
  3512  001316  C0A1  F08E         	movff	lcd_printf@width,lcd_printf@w
  3513  00131A                     l3349:
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;iut_lcd.c: 694: }
  3517                           ;iut_lcd.c: 695: }
  3518                           ;iut_lcd.c: 696: if (!(flags & 0x1)) {
  3519  00131A  0100               	movlb	0	; () banked
  3520  00131C  B19F               	btfsc	lcd_printf@flags& (0+255),0,b
  3521  00131E  D02E               	goto	l3373
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;iut_lcd.c: 697: if (flags & 0x10) {
  3525  001320  0100               	movlb	0	; () banked
  3526  001322  A99F               	btfss	lcd_printf@flags& (0+255),4,b
  3527  001324  D01B               	goto	l3367
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;iut_lcd.c: 698: if (have_sign) lcd_write_data_busy(sign);
  3531  001326  0100               	movlb	0	; () banked
  3532  001328  518B               	movf	lcd_printf@have_sign& (0+255),w,b
  3533  00132A  0100               	movlb	0	; () banked
  3534  00132C  B4D8               	btfsc	status,2,c
  3535  00132E  D00A               	goto	l3361
  3536                           
  3537                           ; BSR set to: 0
  3538  001330  0100               	movlb	0	; () banked
  3539  001332  5188               	movf	lcd_printf@sign& (0+255),w,b
  3540  001334  EC59  F011         	call	_lcd_write_data_busy
  3541                           
  3542                           ;iut_lcd.c: 699: for (; width > w; w++) lcd_write_data_busy('0');
  3543  001338  D005               	goto	l3361
  3544  00133A                     l3357:
  3545  00133A  0E30               	movlw	48
  3546  00133C  EC59  F011         	call	_lcd_write_data_busy
  3547  001340  0100               	movlb	0	; () banked
  3548  001342  2B8E               	incf	lcd_printf@w& (0+255),f,b
  3549  001344                     l3361:
  3550  001344  0100               	movlb	0	; () banked
  3551  001346  51A1               	movf	lcd_printf@width& (0+255),w,b
  3552  001348  0100               	movlb	0	; () banked
  3553  00134A  5D8E               	subwf	lcd_printf@w& (0+255),w,b
  3554  00134C  B0D8               	btfsc	status,0,c
  3555  00134E  D01F               	goto	l3377
  3556  001350  D7F4               	goto	l3357
  3557  001352                     l3363:
  3558                           
  3559                           ; BSR set to: 0
  3560  001352  0E20               	movlw	32
  3561  001354  EC59  F011         	call	_lcd_write_data_busy
  3562  001358  0100               	movlb	0	; () banked
  3563  00135A  2B8E               	incf	lcd_printf@w& (0+255),f,b
  3564  00135C                     l3367:
  3565                           
  3566                           ; BSR set to: 0
  3567  00135C  0100               	movlb	0	; () banked
  3568  00135E  51A1               	movf	lcd_printf@width& (0+255),w,b
  3569  001360  0100               	movlb	0	; () banked
  3570  001362  5D8E               	subwf	lcd_printf@w& (0+255),w,b
  3571  001364  A0D8               	btfss	status,0,c
  3572  001366  D7F5               	goto	l3363
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;iut_lcd.c: 702: if (have_sign) lcd_write_data_busy(sign);
  3576                           
  3577                           ; BSR set to: 0
  3578  001368  0100               	movlb	0	; () banked
  3579  00136A  518B               	movf	lcd_printf@have_sign& (0+255),w,b
  3580  00136C  0100               	movlb	0	; () banked
  3581  00136E  B4D8               	btfsc	status,2,c
  3582  001370  D00E               	goto	l3377
  3583                           
  3584                           ; BSR set to: 0
  3585  001372  0100               	movlb	0	; () banked
  3586  001374  5188               	movf	lcd_printf@sign& (0+255),w,b
  3587  001376  EC59  F011         	call	_lcd_write_data_busy
  3588                           
  3589                           ;iut_lcd.c: 703: }
  3590                           ;iut_lcd.c: 704: } else {
  3591  00137A  D009               	goto	l3377
  3592  00137C                     l3373:
  3593                           
  3594                           ;iut_lcd.c: 705: if (have_sign) lcd_write_data_busy(sign);
  3595  00137C  0100               	movlb	0	; () banked
  3596  00137E  518B               	movf	lcd_printf@have_sign& (0+255),w,b
  3597  001380  0100               	movlb	0	; () banked
  3598  001382  B4D8               	btfsc	status,2,c
  3599  001384  D004               	goto	l3377
  3600                           
  3601                           ; BSR set to: 0
  3602  001386  0100               	movlb	0	; () banked
  3603  001388  5188               	movf	lcd_printf@sign& (0+255),w,b
  3604  00138A  EC59  F011         	call	_lcd_write_data_busy
  3605  00138E                     l3377:
  3606                           
  3607                           ;iut_lcd.c: 706: }
  3608                           ;iut_lcd.c: 707: if (i == 0) {
  3609  00138E  0100               	movlb	0	; () banked
  3610  001390  518D               	movf	lcd_printf@i& (0+255),w,b
  3611  001392  0100               	movlb	0	; () banked
  3612  001394  A4D8               	btfss	status,2,c
  3613  001396  D003               	goto	l3381
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;iut_lcd.c: 708: lcd_write_data_busy('0');
  3617  001398  0E30               	movlw	48
  3618  00139A  EC59  F011         	call	_lcd_write_data_busy
  3619  00139E                     l3381:
  3620                           
  3621                           ;iut_lcd.c: 709: }
  3622                           ;iut_lcd.c: 710: for (; i > 0; i--) {
  3623  00139E  0100               	movlb	0	; () banked
  3624  0013A0  518D               	movf	lcd_printf@i& (0+255),w,b
  3625  0013A2  0100               	movlb	0	; () banked
  3626  0013A4  B4D8               	btfsc	status,2,c
  3627  0013A6  D04A               	goto	l3391
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;iut_lcd.c: 711: x *= 10;
  3631                           
  3632                           ; BSR set to: 0
  3633                           
  3634                           ; BSR set to: 0
  3635  0013A8  C096  F01C         	movff	lcd_printf@x,___ftmul@f1
  3636  0013AC  C097  F01D         	movff	lcd_printf@x+1,___ftmul@f1+1
  3637  0013B0  C098  F01E         	movff	lcd_printf@x+2,___ftmul@f1+2
  3638  0013B4  0E00               	movlw	0
  3639  0013B6  6E1F               	movwf	___ftmul@f2,c
  3640  0013B8  0E20               	movlw	32
  3641  0013BA  6E20               	movwf	___ftmul@f2+1,c
  3642  0013BC  0E41               	movlw	65
  3643  0013BE  6E21               	movwf	___ftmul@f2+2,c
  3644  0013C0  ECB7  F00D         	call	___ftmul	;wreg free
  3645  0013C4  C01C  F096         	movff	?___ftmul,lcd_printf@x
  3646  0013C8  C01D  F097         	movff	?___ftmul+1,lcd_printf@x+1
  3647  0013CC  C01E  F098         	movff	?___ftmul+2,lcd_printf@x+2
  3648                           
  3649                           ;iut_lcd.c: 712: k = (unsigned int)x;
  3650  0013D0  C096  F001         	movff	lcd_printf@x,___fttol@f1
  3651  0013D4  C097  F002         	movff	lcd_printf@x+1,___fttol@f1+1
  3652  0013D8  C098  F003         	movff	lcd_printf@x+2,___fttol@f1+2
  3653  0013DC  EC3D  F00D         	call	___fttol	;wreg free
  3654  0013E0  C001  F089         	movff	?___fttol,lcd_printf@k
  3655  0013E4  C002  F08A         	movff	?___fttol+1,lcd_printf@k+1
  3656                           
  3657                           ;iut_lcd.c: 713: x = x - k;
  3658  0013E8  C089  F009         	movff	lcd_printf@k,___lwtoft@c
  3659  0013EC  C08A  F00A         	movff	lcd_printf@k+1,___lwtoft@c+1
  3660  0013F0  EC26  F011         	call	___lwtoft	;wreg free
  3661  0013F4  C009  F00D         	movff	?___lwtoft,___ftneg@f1
  3662  0013F8  C00A  F00E         	movff	?___lwtoft+1,___ftneg@f1+1
  3663  0013FC  C00B  F00F         	movff	?___lwtoft+2,___ftneg@f1+2
  3664  001400  EC38  F011         	call	___ftneg	;wreg free
  3665  001404  C00D  F010         	movff	?___ftneg,___ftadd@f1
  3666  001408  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  3667  00140C  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  3668  001410  C096  F013         	movff	lcd_printf@x,___ftadd@f2
  3669  001414  C097  F014         	movff	lcd_printf@x+1,___ftadd@f2+1
  3670  001418  C098  F015         	movff	lcd_printf@x+2,___ftadd@f2+2
  3671  00141C  EC67  F00C         	call	___ftadd	;wreg free
  3672  001420  C010  F096         	movff	?___ftadd,lcd_printf@x
  3673  001424  C011  F097         	movff	?___ftadd+1,lcd_printf@x+1
  3674  001428  C012  F098         	movff	?___ftadd+2,lcd_printf@x+2
  3675                           
  3676                           ;iut_lcd.c: 714: lcd_write_data_busy(k + '0');
  3677  00142C  0100               	movlb	0	; () banked
  3678  00142E  5189               	movf	lcd_printf@k& (0+255),w,b
  3679  001430  0F30               	addlw	48
  3680  001432  EC59  F011         	call	_lcd_write_data_busy
  3681  001436  0100               	movlb	0	; () banked
  3682  001438  078D               	decf	lcd_printf@i& (0+255),f,b
  3683  00143A  D7B1               	goto	l3381
  3684  00143C                     l3391:
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;iut_lcd.c: 715: }
  3688                           ;iut_lcd.c: 716: if (precision > 0) lcd_write_data_busy('.');
  3689  00143C  0100               	movlb	0	; () banked
  3690  00143E  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3691  001440  0100               	movlb	0	; () banked
  3692  001442  B4D8               	btfsc	status,2,c
  3693  001444  D04D               	goto	l3399
  3694                           
  3695                           ; BSR set to: 0
  3696  001446  0E2E               	movlw	46
  3697  001448  EC59  F011         	call	_lcd_write_data_busy
  3698                           
  3699                           ;iut_lcd.c: 717: for (; i < precision; i++) {
  3700  00144C  D049               	goto	l3399
  3701  00144E                     l3395:
  3702                           
  3703                           ;iut_lcd.c: 718: x *= 10;
  3704  00144E  C096  F01C         	movff	lcd_printf@x,___ftmul@f1
  3705  001452  C097  F01D         	movff	lcd_printf@x+1,___ftmul@f1+1
  3706  001456  C098  F01E         	movff	lcd_printf@x+2,___ftmul@f1+2
  3707  00145A  0E00               	movlw	0
  3708  00145C  6E1F               	movwf	___ftmul@f2,c
  3709  00145E  0E20               	movlw	32
  3710  001460  6E20               	movwf	___ftmul@f2+1,c
  3711  001462  0E41               	movlw	65
  3712  001464  6E21               	movwf	___ftmul@f2+2,c
  3713  001466  ECB7  F00D         	call	___ftmul	;wreg free
  3714  00146A  C01C  F096         	movff	?___ftmul,lcd_printf@x
  3715  00146E  C01D  F097         	movff	?___ftmul+1,lcd_printf@x+1
  3716  001472  C01E  F098         	movff	?___ftmul+2,lcd_printf@x+2
  3717                           
  3718                           ;iut_lcd.c: 719: k = (unsigned int)x;
  3719  001476  C096  F001         	movff	lcd_printf@x,___fttol@f1
  3720  00147A  C097  F002         	movff	lcd_printf@x+1,___fttol@f1+1
  3721  00147E  C098  F003         	movff	lcd_printf@x+2,___fttol@f1+2
  3722  001482  EC3D  F00D         	call	___fttol	;wreg free
  3723  001486  C001  F089         	movff	?___fttol,lcd_printf@k
  3724  00148A  C002  F08A         	movff	?___fttol+1,lcd_printf@k+1
  3725                           
  3726                           ;iut_lcd.c: 720: x = x - k;
  3727  00148E  C089  F009         	movff	lcd_printf@k,___lwtoft@c
  3728  001492  C08A  F00A         	movff	lcd_printf@k+1,___lwtoft@c+1
  3729  001496  EC26  F011         	call	___lwtoft	;wreg free
  3730  00149A  C009  F00D         	movff	?___lwtoft,___ftneg@f1
  3731  00149E  C00A  F00E         	movff	?___lwtoft+1,___ftneg@f1+1
  3732  0014A2  C00B  F00F         	movff	?___lwtoft+2,___ftneg@f1+2
  3733  0014A6  EC38  F011         	call	___ftneg	;wreg free
  3734  0014AA  C00D  F010         	movff	?___ftneg,___ftadd@f1
  3735  0014AE  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  3736  0014B2  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  3737  0014B6  C096  F013         	movff	lcd_printf@x,___ftadd@f2
  3738  0014BA  C097  F014         	movff	lcd_printf@x+1,___ftadd@f2+1
  3739  0014BE  C098  F015         	movff	lcd_printf@x+2,___ftadd@f2+2
  3740  0014C2  EC67  F00C         	call	___ftadd	;wreg free
  3741  0014C6  C010  F096         	movff	?___ftadd,lcd_printf@x
  3742  0014CA  C011  F097         	movff	?___ftadd+1,lcd_printf@x+1
  3743  0014CE  C012  F098         	movff	?___ftadd+2,lcd_printf@x+2
  3744                           
  3745                           ;iut_lcd.c: 721: lcd_write_data_busy(k + '0');
  3746  0014D2  0100               	movlb	0	; () banked
  3747  0014D4  5189               	movf	lcd_printf@k& (0+255),w,b
  3748  0014D6  0F30               	addlw	48
  3749  0014D8  EC59  F011         	call	_lcd_write_data_busy
  3750  0014DC  0100               	movlb	0	; () banked
  3751  0014DE  2B8D               	incf	lcd_printf@i& (0+255),f,b
  3752  0014E0                     l3399:
  3753  0014E0  0100               	movlb	0	; () banked
  3754  0014E2  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3755  0014E4  0100               	movlb	0	; () banked
  3756  0014E6  5D8D               	subwf	lcd_printf@i& (0+255),w,b
  3757  0014E8  A0D8               	btfss	status,0,c
  3758  0014EA  D7B1               	goto	l3395
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;iut_lcd.c: 722: }
  3762                           ;iut_lcd.c: 723: if (flags & 0x1) {
  3763  0014EC  0100               	movlb	0	; () banked
  3764  0014EE  B19F               	btfsc	lcd_printf@flags& (0+255),0,b
  3765  0014F0  D006               	goto	l3407
  3766  0014F2  D04C               	goto	l3415
  3767  0014F4                     l3403:
  3768                           
  3769                           ; BSR set to: 0
  3770  0014F4  0E20               	movlw	32
  3771  0014F6  EC59  F011         	call	_lcd_write_data_busy
  3772  0014FA  0100               	movlb	0	; () banked
  3773  0014FC  2B8E               	incf	lcd_printf@w& (0+255),f,b
  3774  0014FE                     l3407:
  3775                           
  3776                           ; BSR set to: 0
  3777  0014FE  0100               	movlb	0	; () banked
  3778  001500  51A1               	movf	lcd_printf@width& (0+255),w,b
  3779  001502  0100               	movlb	0	; () banked
  3780  001504  5D8E               	subwf	lcd_printf@w& (0+255),w,b
  3781  001506  B0D8               	btfsc	status,0,c
  3782  001508  D041               	goto	l3415
  3783  00150A  D7F4               	goto	l3403
  3784  00150C                     l3411:
  3785                           
  3786                           ; BSR set to: 0
  3787  00150C  0100               	movlb	0	; () banked
  3788  00150E  51A2               	movf	lcd_printf@c& (0+255),w,b
  3789                           
  3790                           ; Switch size 1, requested type "space"
  3791                           ; Number of cases is 16, Range of values is 0 to 120
  3792                           ; switch strategies available:
  3793                           ; Name         Instructions Cycles
  3794                           ; simple_byte           49    25 (average)
  3795                           ;	Chosen strategy is simple_byte
  3796  001510  0A00               	xorlw	0	; case 0
  3797  001512  B4D8               	btfsc	status,2,c
  3798  001514  EF6A  F005         	goto	l2989
  3799  001518  0A25               	xorlw	37	; case 37
  3800  00151A  B4D8               	btfsc	status,2,c
  3801  00151C  EF6D  F005         	goto	l2991
  3802  001520  0A67               	xorlw	103	; case 66
  3803  001522  B4D8               	btfsc	status,2,c
  3804  001524  D41B               	goto	l3119
  3805  001526  0A12               	xorlw	18	; case 80
  3806  001528  B4D8               	btfsc	status,2,c
  3807  00152A  D450               	goto	l3139
  3808  00152C  0A03               	xorlw	3	; case 83
  3809  00152E  B4D8               	btfsc	status,2,c
  3810  001530  EFA6  F005         	goto	l3015
  3811  001534  0A0B               	xorlw	11	; case 88
  3812  001536  B4D8               	btfsc	status,2,c
  3813  001538  D411               	goto	l3119
  3814  00153A  0A3A               	xorlw	58	; case 98
  3815  00153C  B4D8               	btfsc	status,2,c
  3816  00153E  D40E               	goto	l3119
  3817  001540  0A01               	xorlw	1	; case 99
  3818  001542  B4D8               	btfsc	status,2,c
  3819  001544  EF72  F005         	goto	l2993
  3820  001548  0A07               	xorlw	7	; case 100
  3821  00154A  B4D8               	btfsc	status,2,c
  3822  00154C  D405               	goto	l3117
  3823  00154E  0A02               	xorlw	2	; case 102
  3824  001550  B4D8               	btfsc	status,2,c
  3825  001552  D625               	goto	l3293
  3826  001554  0A0F               	xorlw	15	; case 105
  3827  001556  B4D8               	btfsc	status,2,c
  3828  001558  EFAC  F006         	goto	l3117
  3829  00155C  0A06               	xorlw	6	; case 111
  3830  00155E  B4D8               	btfsc	status,2,c
  3831  001560  EFAE  F006         	goto	l3119
  3832  001564  0A1F               	xorlw	31	; case 112
  3833  001566  B4D8               	btfsc	status,2,c
  3834  001568  D431               	goto	l3139
  3835  00156A  0A03               	xorlw	3	; case 115
  3836  00156C  B4D8               	btfsc	status,2,c
  3837  00156E  EF2D  F006         	goto	l3069
  3838  001572  0A06               	xorlw	6	; case 117
  3839  001574  B4D8               	btfsc	status,2,c
  3840  001576  EFAE  F006         	goto	l3119
  3841  00157A  0A0D               	xorlw	13	; case 120
  3842  00157C  B4D8               	btfsc	status,2,c
  3843  00157E  EFAE  F006         	goto	l3119
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;iut_lcd.c: 732: } else {
  3847  001582  D004               	goto	l3415
  3848  001584                     l3413:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;iut_lcd.c: 733: lcd_putc(c);
  3852  001584  0100               	movlb	0	; () banked
  3853  001586  51A2               	movf	lcd_printf@c& (0+255),w,b
  3854  001588  EC56  F010         	call	_lcd_putc
  3855  00158C                     l3415:
  3856  00158C  4A3A               	infsnz	lcd_printf@f,f,c
  3857  00158E  2A3B               	incf	lcd_printf@f+1,f,c
  3858  001590                     L1:
  3859  001590  C03A  FFF6         	movff	lcd_printf@f,tblptrl
  3860  001594  C03B  FFF7         	movff	lcd_printf@f+1,tblptrh
  3861  001598                     	if	0	;tblptru may be non-zero
  3862  001598                     	endif
  3863  001598                     	if	0	;tblptru may be non-zero
  3864  001598                     	endif
  3865  001598  0008               	tblrd		*
  3866  00159A  CFF5 F0A2          	movff	tablat,lcd_printf@c
  3867  00159E  0100               	movlb	0	; () banked
  3868  0015A0  51A2               	movf	lcd_printf@c& (0+255),w,b
  3869  0015A2  0100               	movlb	0	; () banked
  3870  0015A4  B4D8               	btfsc	status,2,c
  3871  0015A6  0012               	return	
  3872  0015A8  EF24  F004         	goto	l2867
  3873  0015AC                     __end_of_lcd_printf:
  3874                           	opt stack 0
  3875                           tblptru	equ	0xFF8
  3876                           tblptrh	equ	0xFF7
  3877                           tblptrl	equ	0xFF6
  3878                           tablat	equ	0xFF5
  3879                           prodl	equ	0xFF3
  3880                           indf2	equ	0xFDF
  3881                           postinc2	equ	0xFDE
  3882                           postdec2	equ	0xFDD
  3883                           fsr2h	equ	0xFDA
  3884                           fsr2l	equ	0xFD9
  3885                           status	equ	0xFD8
  3886                           
  3887 ;; *************** function _lcd_repete_n *****************
  3888 ;; Defined at:
  3889 ;;		line 798 in file "iut_lcd.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  n               1    wreg     unsigned char 
  3892 ;;  c               1    2[COMRAM] unsigned char 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  n               1    3[COMRAM] unsigned char 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0, cstack
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3904 ;;      Params:         1       0       0       0       0       0       0       0       0
  3905 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3907 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3908 ;;Total ram usage:        2 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    3
  3911 ;; This function calls:
  3912 ;;		_lcd_write_data_busy
  3913 ;; This function is called by:
  3914 ;;		_lcd_printf
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text5
  3919  0022DE                     __ptext5:
  3920                           	opt stack 0
  3921  0022DE                     _lcd_repete_n:
  3922                           	opt stack 26
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;incstack = 0
  3926                           ;lcd_repete_n@n stored from wreg
  3927  0022DE  6E04               	movwf	lcd_repete_n@n,c
  3928                           
  3929                           ;iut_lcd.c: 799: while (n--) lcd_write_data_busy(c);
  3930  0022E0  D003               	goto	l2457
  3931  0022E2                     l2455:
  3932  0022E2  5003               	movf	lcd_repete_n@c,w,c
  3933  0022E4  EC59  F011         	call	_lcd_write_data_busy
  3934  0022E8                     l2457:
  3935  0022E8  0604               	decf	lcd_repete_n@n,f,c
  3936  0022EA  2804               	incf	lcd_repete_n@n,w,c
  3937  0022EC  B4D8               	btfsc	status,2,c
  3938  0022EE  0012               	return	
  3939  0022F0  D7F8               	goto	l2455
  3940  0022F2                     __end_of_lcd_repete_n:
  3941                           	opt stack 0
  3942                           tblptru	equ	0xFF8
  3943                           tblptrh	equ	0xFF7
  3944                           tblptrl	equ	0xFF6
  3945                           tablat	equ	0xFF5
  3946                           prodl	equ	0xFF3
  3947                           indf2	equ	0xFDF
  3948                           postinc2	equ	0xFDE
  3949                           postdec2	equ	0xFDD
  3950                           fsr2h	equ	0xFDA
  3951                           fsr2l	equ	0xFD9
  3952                           status	equ	0xFD8
  3953                           
  3954 ;; *************** function _lcd_putc *****************
  3955 ;; Defined at:
  3956 ;;		line 180 in file "iut_lcd.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  lettre          1    wreg     unsigned char 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  lettre          1    5[COMRAM] unsigned char 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3970 ;;      Params:         0       0       0       0       0       0       0       0       0
  3971 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3973 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3974 ;;Total ram usage:        1 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:    4
  3977 ;; This function calls:
  3978 ;;		_lcd_position
  3979 ;;		_lcd_write_cmd_busy
  3980 ;;		_lcd_write_data_busy
  3981 ;; This function is called by:
  3982 ;;		_lcd_printf
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text6
  3987  0020AC                     __ptext6:
  3988                           	opt stack 0
  3989  0020AC                     _lcd_putc:
  3990                           	opt stack 25
  3991                           
  3992                           ;incstack = 0
  3993                           ;lcd_putc@lettre stored from wreg
  3994  0020AC  6E06               	movwf	lcd_putc@lettre,c
  3995                           
  3996                           ;iut_lcd.c: 181: if (lettre >= 0x20) {
  3997  0020AE  0E1F               	movlw	31
  3998  0020B0  6406               	cpfsgt	lcd_putc@lettre,c
  3999  0020B2  D004               	goto	l2439
  4000                           
  4001                           ;iut_lcd.c: 182: lcd_write_data_busy(lettre);
  4002  0020B4  5006               	movf	lcd_putc@lettre,w,c
  4003  0020B6  EC59  F011         	call	_lcd_write_data_busy
  4004                           
  4005                           ;iut_lcd.c: 183: } else if (lettre == '\f') {
  4006  0020BA  0012               	return	
  4007  0020BC                     l2439:
  4008  0020BC  0E0C               	movlw	12
  4009  0020BE  1806               	xorwf	lcd_putc@lettre,w,c
  4010  0020C0  A4D8               	btfss	status,2,c
  4011  0020C2  D004               	goto	l2443
  4012                           
  4013                           ;iut_lcd.c: 184: lcd_write_cmd_busy(0x01);
  4014  0020C4  0E01               	movlw	1
  4015  0020C6  EC64  F011         	call	_lcd_write_cmd_busy
  4016                           
  4017                           ;iut_lcd.c: 185: } else if (lettre == '\n') {
  4018  0020CA  0012               	return	
  4019  0020CC                     l2443:
  4020  0020CC  0E0A               	movlw	10
  4021  0020CE  1806               	xorwf	lcd_putc@lettre,w,c
  4022  0020D0  A4D8               	btfss	status,2,c
  4023  0020D2  D006               	goto	l2447
  4024                           
  4025                           ;iut_lcd.c: 186: lcd_position(1, 0);
  4026  0020D4  0E00               	movlw	0
  4027  0020D6  6E03               	movwf	lcd_position@colonne,c
  4028  0020D8  0E01               	movlw	1
  4029  0020DA  EC4A  F011         	call	_lcd_position
  4030                           
  4031                           ;iut_lcd.c: 187: } else if (lettre == '\b') {
  4032  0020DE  0012               	return	
  4033  0020E0                     l2447:
  4034  0020E0  0E08               	movlw	8
  4035  0020E2  1806               	xorwf	lcd_putc@lettre,w,c
  4036  0020E4  A4D8               	btfss	status,2,c
  4037  0020E6  D004               	goto	l2451
  4038                           
  4039                           ;iut_lcd.c: 188: lcd_write_cmd_busy(0x10);
  4040  0020E8  0E10               	movlw	16
  4041  0020EA  EC64  F011         	call	_lcd_write_cmd_busy
  4042                           
  4043                           ;iut_lcd.c: 189: } else {
  4044  0020EE  0012               	return	
  4045  0020F0                     l2451:
  4046                           
  4047                           ;iut_lcd.c: 190: lcd_write_data_busy(lettre);
  4048  0020F0  5006               	movf	lcd_putc@lettre,w,c
  4049  0020F2  EC59  F011         	call	_lcd_write_data_busy
  4050  0020F6  0012               	return	
  4051  0020F8                     __end_of_lcd_putc:
  4052                           	opt stack 0
  4053                           tblptru	equ	0xFF8
  4054                           tblptrh	equ	0xFF7
  4055                           tblptrl	equ	0xFF6
  4056                           tablat	equ	0xFF5
  4057                           prodl	equ	0xFF3
  4058                           indf2	equ	0xFDF
  4059                           postinc2	equ	0xFDE
  4060                           postdec2	equ	0xFDD
  4061                           fsr2h	equ	0xFDA
  4062                           fsr2l	equ	0xFD9
  4063                           status	equ	0xFD8
  4064                           
  4065 ;; *************** function _lcd_write_data_busy *****************
  4066 ;; Defined at:
  4067 ;;		line 758 in file "iut_lcd.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  c               1    wreg     unsigned char 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  c               1    1[COMRAM] unsigned char 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0
  4082 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4084 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4085 ;;Total ram usage:        1 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    2
  4088 ;; This function calls:
  4089 ;;		_lcd_busy
  4090 ;;		_lcd_write_cmd_data
  4091 ;; This function is called by:
  4092 ;;		_lcd_putc
  4093 ;;		_lcd_printf
  4094 ;;		_lcd_repete_n
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text7
  4099  0022B2                     __ptext7:
  4100                           	opt stack 0
  4101  0022B2                     _lcd_write_data_busy:
  4102                           	opt stack 27
  4103                           
  4104                           ;incstack = 0
  4105                           ;lcd_write_data_busy@c stored from wreg
  4106  0022B2  6E02               	movwf	lcd_write_data_busy@c,c
  4107  0022B4                     l2393:
  4108  0022B4  EC7C  F010         	call	_lcd_busy	;wreg free
  4109  0022B8  0900               	iorlw	0
  4110  0022BA  A4D8               	btfss	status,2,c
  4111  0022BC  D7FB               	goto	l2393
  4112                           
  4113                           ;iut_lcd.c: 760: PORTDbits.RD1 = 1;
  4114  0022BE  8283               	bsf	3971,1,c	;volatile
  4115                           
  4116                           ;iut_lcd.c: 761: lcd_write_cmd_data(c);
  4117  0022C0  5002               	movf	lcd_write_data_busy@c,w,c
  4118  0022C2  ECD1  F010         	call	_lcd_write_cmd_data
  4119  0022C6  0012               	return		;funcret
  4120  0022C8                     __end_of_lcd_write_data_busy:
  4121                           	opt stack 0
  4122                           tblptru	equ	0xFF8
  4123                           tblptrh	equ	0xFF7
  4124                           tblptrl	equ	0xFF6
  4125                           tablat	equ	0xFF5
  4126                           prodl	equ	0xFF3
  4127                           indf2	equ	0xFDF
  4128                           postinc2	equ	0xFDE
  4129                           postdec2	equ	0xFDD
  4130                           fsr2h	equ	0xFDA
  4131                           fsr2l	equ	0xFD9
  4132                           status	equ	0xFD8
  4133                           
  4134 ;; *************** function _lcd_position *****************
  4135 ;; Defined at:
  4136 ;;		line 159 in file "iut_lcd.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  ligne           1    wreg     unsigned char 
  4139 ;;  colonne         1    2[COMRAM] unsigned char 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  ligne           1    3[COMRAM] unsigned char 
  4142 ;;  address         1    4[COMRAM] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4152 ;;      Params:         1       0       0       0       0       0       0       0       0
  4153 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4155 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4156 ;;Total ram usage:        3 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    3
  4159 ;; This function calls:
  4160 ;;		_lcd_write_cmd_busy
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;;		_lcd_putc
  4164 ;;		_lcd_gotoyx
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text8
  4169  002294                     __ptext8:
  4170                           	opt stack 0
  4171  002294                     _lcd_position:
  4172                           	opt stack 25
  4173                           
  4174                           ;incstack = 0
  4175                           ;lcd_position@ligne stored from wreg
  4176  002294  6E04               	movwf	lcd_position@ligne,c
  4177                           
  4178                           ;iut_lcd.c: 160: char address;
  4179                           ;iut_lcd.c: 162: if (ligne != 0) {
  4180  002296  5004               	movf	lcd_position@ligne,w,c
  4181  002298  B4D8               	btfsc	status,2,c
  4182  00229A  D002               	goto	l2385
  4183                           
  4184                           ;iut_lcd.c: 163: address = 0x40;
  4185  00229C  0E40               	movlw	64
  4186  00229E  D001               	goto	L14
  4187  0022A0                     l2385:
  4188                           
  4189                           ;iut_lcd.c: 165: address = 0;
  4190  0022A0  0E00               	movlw	0
  4191  0022A2                     L14:
  4192  0022A2  6E05               	movwf	lcd_position@address,c
  4193                           
  4194                           ;iut_lcd.c: 166: }
  4195                           ;iut_lcd.c: 167: address += colonne;
  4196  0022A4  5003               	movf	lcd_position@colonne,w,c
  4197  0022A6  2605               	addwf	lcd_position@address,f,c
  4198                           
  4199                           ;iut_lcd.c: 168: lcd_write_cmd_busy(0x80 | address);
  4200  0022A8  5005               	movf	lcd_position@address,w,c
  4201  0022AA  0980               	iorlw	128
  4202  0022AC  EC64  F011         	call	_lcd_write_cmd_busy
  4203  0022B0  0012               	return		;funcret
  4204  0022B2                     __end_of_lcd_position:
  4205                           	opt stack 0
  4206                           tblptru	equ	0xFF8
  4207                           tblptrh	equ	0xFF7
  4208                           tblptrl	equ	0xFF6
  4209                           tablat	equ	0xFF5
  4210                           prodl	equ	0xFF3
  4211                           indf2	equ	0xFDF
  4212                           postinc2	equ	0xFDE
  4213                           postdec2	equ	0xFDD
  4214                           fsr2h	equ	0xFDA
  4215                           fsr2l	equ	0xFD9
  4216                           status	equ	0xFD8
  4217                           
  4218 ;; *************** function ___lwtoft *****************
  4219 ;; Defined at:
  4220 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwtoft.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  c               2    8[COMRAM] unsigned int 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;		None
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  3    8[COMRAM] float 
  4227 ;; Registers used:
  4228 ;;		wreg, status,2, status,0, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4234 ;;      Params:         3       0       0       0       0       0       0       0       0
  4235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4236 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4237 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4238 ;;Total ram usage:        3 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    1
  4241 ;; This function calls:
  4242 ;;		___ftpack
  4243 ;; This function is called by:
  4244 ;;		_lcd_printf
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text9
  4249  00224C                     __ptext9:
  4250                           	opt stack 0
  4251  00224C                     ___lwtoft:
  4252                           	opt stack 28
  4253                           
  4254                           ;incstack = 0
  4255  00224C  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  4256  002250  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  4257  002254  6A03               	clrf	___ftpack@arg+2,c
  4258  002256  0E8E               	movlw	142
  4259  002258  6E04               	movwf	___ftpack@exp,c
  4260  00225A  0E00               	movlw	0
  4261  00225C  6E05               	movwf	___ftpack@sign,c
  4262  00225E  ECA4  F00E         	call	___ftpack	;wreg free
  4263  002262  C001  F009         	movff	?___ftpack,?___lwtoft
  4264  002266  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  4265  00226A  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  4266  00226E  0012               	return	
  4267  002270                     __end_of___lwtoft:
  4268                           	opt stack 0
  4269                           tblptru	equ	0xFF8
  4270                           tblptrh	equ	0xFF7
  4271                           tblptrl	equ	0xFF6
  4272                           tablat	equ	0xFF5
  4273                           prodl	equ	0xFF3
  4274                           indf2	equ	0xFDF
  4275                           postinc2	equ	0xFDE
  4276                           postdec2	equ	0xFDD
  4277                           fsr2h	equ	0xFDA
  4278                           fsr2l	equ	0xFD9
  4279                           status	equ	0xFD8
  4280                           
  4281 ;; *************** function ___llmod *****************
  4282 ;; Defined at:
  4283 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\llmod.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  dividend        4    0[COMRAM] unsigned long 
  4286 ;;  divisor         4    4[COMRAM] unsigned long 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  counter         1    8[COMRAM] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  4    0[COMRAM] unsigned long 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4298 ;;      Params:         8       0       0       0       0       0       0       0       0
  4299 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4301 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4302 ;;Total ram usage:        9 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_lcd_printf
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text10
  4312  002046                     __ptext10:
  4313                           	opt stack 0
  4314  002046                     ___llmod:
  4315                           	opt stack 29
  4316                           
  4317                           ;incstack = 0
  4318  002046  5005               	movf	___llmod@divisor,w,c
  4319  002048  1006               	iorwf	___llmod@divisor+1,w,c
  4320  00204A  1007               	iorwf	___llmod@divisor+2,w,c
  4321  00204C  1008               	iorwf	___llmod@divisor+3,w,c
  4322  00204E  B4D8               	btfsc	status,2,c
  4323  002050  D024               	goto	l841
  4324  002052  0E01               	movlw	1
  4325  002054  6E09               	movwf	___llmod@counter,c
  4326  002056  D006               	goto	l2719
  4327  002058                     l2717:
  4328  002058  90D8               	bcf	status,0,c
  4329  00205A  3605               	rlcf	___llmod@divisor,f,c
  4330  00205C  3606               	rlcf	___llmod@divisor+1,f,c
  4331  00205E  3607               	rlcf	___llmod@divisor+2,f,c
  4332  002060  3608               	rlcf	___llmod@divisor+3,f,c
  4333  002062  2A09               	incf	___llmod@counter,f,c
  4334  002064                     l2719:
  4335  002064  AE08               	btfss	___llmod@divisor+3,7,c
  4336  002066  D7F8               	goto	l2717
  4337  002068                     l2721:
  4338  002068  5005               	movf	___llmod@divisor,w,c
  4339  00206A  5C01               	subwf	___llmod@dividend,w,c
  4340  00206C  5006               	movf	___llmod@divisor+1,w,c
  4341  00206E  5802               	subwfb	___llmod@dividend+1,w,c
  4342  002070  5007               	movf	___llmod@divisor+2,w,c
  4343  002072  5803               	subwfb	___llmod@dividend+2,w,c
  4344  002074  5008               	movf	___llmod@divisor+3,w,c
  4345  002076  5804               	subwfb	___llmod@dividend+3,w,c
  4346  002078  A0D8               	btfss	status,0,c
  4347  00207A  D008               	goto	l2725
  4348  00207C  5005               	movf	___llmod@divisor,w,c
  4349  00207E  5E01               	subwf	___llmod@dividend,f,c
  4350  002080  5006               	movf	___llmod@divisor+1,w,c
  4351  002082  5A02               	subwfb	___llmod@dividend+1,f,c
  4352  002084  5007               	movf	___llmod@divisor+2,w,c
  4353  002086  5A03               	subwfb	___llmod@dividend+2,f,c
  4354  002088  5008               	movf	___llmod@divisor+3,w,c
  4355  00208A  5A04               	subwfb	___llmod@dividend+3,f,c
  4356  00208C                     l2725:
  4357  00208C  90D8               	bcf	status,0,c
  4358  00208E  3208               	rrcf	___llmod@divisor+3,f,c
  4359  002090  3207               	rrcf	___llmod@divisor+2,f,c
  4360  002092  3206               	rrcf	___llmod@divisor+1,f,c
  4361  002094  3205               	rrcf	___llmod@divisor,f,c
  4362  002096  2E09               	decfsz	___llmod@counter,f,c
  4363  002098  D7E7               	goto	l2721
  4364  00209A                     l841:
  4365  00209A  C001  F001         	movff	___llmod@dividend,?___llmod
  4366  00209E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4367  0020A2  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4368  0020A6  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4369  0020AA  0012               	return		;funcret
  4370  0020AC                     __end_of___llmod:
  4371                           	opt stack 0
  4372                           tblptru	equ	0xFF8
  4373                           tblptrh	equ	0xFF7
  4374                           tblptrl	equ	0xFF6
  4375                           tablat	equ	0xFF5
  4376                           prodl	equ	0xFF3
  4377                           indf2	equ	0xFDF
  4378                           postinc2	equ	0xFDE
  4379                           postdec2	equ	0xFDD
  4380                           fsr2h	equ	0xFDA
  4381                           fsr2l	equ	0xFD9
  4382                           status	equ	0xFD8
  4383                           
  4384 ;; *************** function ___lldiv *****************
  4385 ;; Defined at:
  4386 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  dividend        4    0[COMRAM] unsigned long 
  4389 ;;  divisor         4    4[COMRAM] unsigned long 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  quotient        4    8[COMRAM] unsigned long 
  4392 ;;  counter         1   12[COMRAM] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  4    0[COMRAM] unsigned long 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4402 ;;      Params:         8       0       0       0       0       0       0       0       0
  4403 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4405 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4406 ;;Total ram usage:       13 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_lcd_printf
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text11
  4416  001FC4                     __ptext11:
  4417                           	opt stack 0
  4418  001FC4                     ___lldiv:
  4419                           	opt stack 29
  4420                           
  4421                           ;incstack = 0
  4422  001FC4  0E00               	movlw	0
  4423  001FC6  6E09               	movwf	___lldiv@quotient,c
  4424  001FC8  0E00               	movlw	0
  4425  001FCA  6E0A               	movwf	___lldiv@quotient+1,c
  4426  001FCC  0E00               	movlw	0
  4427  001FCE  6E0B               	movwf	___lldiv@quotient+2,c
  4428  001FD0  0E00               	movlw	0
  4429  001FD2  6E0C               	movwf	___lldiv@quotient+3,c
  4430  001FD4  5005               	movf	___lldiv@divisor,w,c
  4431  001FD6  1006               	iorwf	___lldiv@divisor+1,w,c
  4432  001FD8  1007               	iorwf	___lldiv@divisor+2,w,c
  4433  001FDA  1008               	iorwf	___lldiv@divisor+3,w,c
  4434  001FDC  B4D8               	btfsc	status,2,c
  4435  001FDE  D02A               	goto	l831
  4436  001FE0  0E01               	movlw	1
  4437  001FE2  6E0D               	movwf	___lldiv@counter,c
  4438  001FE4  D006               	goto	l2699
  4439  001FE6                     l2697:
  4440  001FE6  90D8               	bcf	status,0,c
  4441  001FE8  3605               	rlcf	___lldiv@divisor,f,c
  4442  001FEA  3606               	rlcf	___lldiv@divisor+1,f,c
  4443  001FEC  3607               	rlcf	___lldiv@divisor+2,f,c
  4444  001FEE  3608               	rlcf	___lldiv@divisor+3,f,c
  4445  001FF0  2A0D               	incf	___lldiv@counter,f,c
  4446  001FF2                     l2699:
  4447  001FF2  AE08               	btfss	___lldiv@divisor+3,7,c
  4448  001FF4  D7F8               	goto	l2697
  4449  001FF6                     l2701:
  4450  001FF6  90D8               	bcf	status,0,c
  4451  001FF8  3609               	rlcf	___lldiv@quotient,f,c
  4452  001FFA  360A               	rlcf	___lldiv@quotient+1,f,c
  4453  001FFC  360B               	rlcf	___lldiv@quotient+2,f,c
  4454  001FFE  360C               	rlcf	___lldiv@quotient+3,f,c
  4455  002000  5005               	movf	___lldiv@divisor,w,c
  4456  002002  5C01               	subwf	___lldiv@dividend,w,c
  4457  002004  5006               	movf	___lldiv@divisor+1,w,c
  4458  002006  5802               	subwfb	___lldiv@dividend+1,w,c
  4459  002008  5007               	movf	___lldiv@divisor+2,w,c
  4460  00200A  5803               	subwfb	___lldiv@dividend+2,w,c
  4461  00200C  5008               	movf	___lldiv@divisor+3,w,c
  4462  00200E  5804               	subwfb	___lldiv@dividend+3,w,c
  4463  002010  A0D8               	btfss	status,0,c
  4464  002012  D009               	goto	l2709
  4465  002014  5005               	movf	___lldiv@divisor,w,c
  4466  002016  5E01               	subwf	___lldiv@dividend,f,c
  4467  002018  5006               	movf	___lldiv@divisor+1,w,c
  4468  00201A  5A02               	subwfb	___lldiv@dividend+1,f,c
  4469  00201C  5007               	movf	___lldiv@divisor+2,w,c
  4470  00201E  5A03               	subwfb	___lldiv@dividend+2,f,c
  4471  002020  5008               	movf	___lldiv@divisor+3,w,c
  4472  002022  5A04               	subwfb	___lldiv@dividend+3,f,c
  4473  002024  8009               	bsf	___lldiv@quotient,0,c
  4474  002026                     l2709:
  4475  002026  90D8               	bcf	status,0,c
  4476  002028  3208               	rrcf	___lldiv@divisor+3,f,c
  4477  00202A  3207               	rrcf	___lldiv@divisor+2,f,c
  4478  00202C  3206               	rrcf	___lldiv@divisor+1,f,c
  4479  00202E  3205               	rrcf	___lldiv@divisor,f,c
  4480  002030  2E0D               	decfsz	___lldiv@counter,f,c
  4481  002032  D7E1               	goto	l2701
  4482  002034                     l831:
  4483  002034  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4484  002038  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4485  00203C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4486  002040  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4487  002044  0012               	return		;funcret
  4488  002046                     __end_of___lldiv:
  4489                           	opt stack 0
  4490                           tblptru	equ	0xFF8
  4491                           tblptrh	equ	0xFF7
  4492                           tblptrl	equ	0xFF6
  4493                           tablat	equ	0xFF5
  4494                           prodl	equ	0xFF3
  4495                           indf2	equ	0xFDF
  4496                           postinc2	equ	0xFDE
  4497                           postdec2	equ	0xFDD
  4498                           fsr2h	equ	0xFDA
  4499                           fsr2l	equ	0xFD9
  4500                           status	equ	0xFD8
  4501                           
  4502 ;; *************** function ___fttol *****************
  4503 ;; Defined at:
  4504 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  f1              3    0[COMRAM] float 
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;  lval            4   10[COMRAM] unsigned long 
  4509 ;;  exp1            1   14[COMRAM] unsigned char 
  4510 ;;  sign1           1    9[COMRAM] unsigned char 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  4    0[COMRAM] long 
  4513 ;; Registers used:
  4514 ;;		wreg, status,2, status,0
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4520 ;;      Params:         4       0       0       0       0       0       0       0       0
  4521 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4522 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4523 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4524 ;;Total ram usage:       15 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_main
  4530 ;;		_lcd_printf
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text12
  4535  001A7A                     __ptext12:
  4536                           	opt stack 0
  4537  001A7A                     ___fttol:
  4538                           	opt stack 29
  4539                           
  4540                           ;incstack = 0
  4541  001A7A  C003  F005         	movff	___fttol@f1+2,??___fttol
  4542  001A7E  6A06               	clrf	(??___fttol+1)& (0+255),c
  4543  001A80  6A07               	clrf	(??___fttol+2)& (0+255),c
  4544  001A82  3402               	rlcf	___fttol@f1+1,w,c
  4545  001A84  3605               	rlcf	??___fttol& (0+255),f,c
  4546  001A86  E301               	bnc	u2461
  4547  001A88  8006               	bsf	(??___fttol+1)& (0+255),0,c
  4548  001A8A                     u2461:
  4549  001A8A  5005               	movf	??___fttol,w,c
  4550  001A8C  6E0F               	movwf	___fttol@exp1,c
  4551  001A8E  500F               	movf	___fttol@exp1,w,c
  4552  001A90  A4D8               	btfss	status,2,c
  4553  001A92  D009               	goto	l2651
  4554  001A94  0E00               	movlw	0
  4555  001A96  6E01               	movwf	?___fttol,c
  4556  001A98  0E00               	movlw	0
  4557  001A9A  6E02               	movwf	?___fttol+1,c
  4558  001A9C  0E00               	movlw	0
  4559  001A9E  6E03               	movwf	?___fttol+2,c
  4560  001AA0  0E00               	movlw	0
  4561  001AA2  6E04               	movwf	?___fttol+3,c
  4562  001AA4  0012               	return	
  4563  001AA6                     l2651:
  4564  001AA6  0E17               	movlw	23
  4565  001AA8  6E05               	movwf	??___fttol& (0+255),c
  4566  001AAA  C001  F006         	movff	___fttol@f1,??___fttol+1
  4567  001AAE  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  4568  001AB2  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  4569  001AB6  2805               	incf	??___fttol,w,c
  4570  001AB8  6E09               	movwf	(??___fttol+4)& (0+255),c
  4571  001ABA  D004               	goto	u2480
  4572  001ABC                     u2485:
  4573  001ABC  90D8               	bcf	status,0,c
  4574  001ABE  3208               	rrcf	??___fttol+3,f,c
  4575  001AC0  3207               	rrcf	??___fttol+2,f,c
  4576  001AC2  3206               	rrcf	??___fttol+1,f,c
  4577  001AC4                     u2480:
  4578  001AC4  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  4579  001AC6  D7FA               	goto	u2485
  4580  001AC8  5006               	movf	??___fttol+1,w,c
  4581  001ACA  6E0A               	movwf	___fttol@sign1,c
  4582  001ACC  8E02               	bsf	___fttol@f1+1,7,c
  4583  001ACE  0EFF               	movlw	255
  4584  001AD0  1601               	andwf	___fttol@f1,f,c
  4585  001AD2  0EFF               	movlw	255
  4586  001AD4  1602               	andwf	___fttol@f1+1,f,c
  4587  001AD6  0E00               	movlw	0
  4588  001AD8  1603               	andwf	___fttol@f1+2,f,c
  4589  001ADA  5001               	movf	___fttol@f1,w,c
  4590  001ADC  6E0B               	movwf	___fttol@lval,c
  4591  001ADE  5002               	movf	___fttol@f1+1,w,c
  4592  001AE0  6E0C               	movwf	___fttol@lval+1,c
  4593  001AE2  5003               	movf	___fttol@f1+2,w,c
  4594  001AE4  6E0D               	movwf	___fttol@lval+2,c
  4595  001AE6  6A0E               	clrf	___fttol@lval+3,c
  4596  001AE8  0E8E               	movlw	142
  4597  001AEA  5E0F               	subwf	___fttol@exp1,f,c
  4598  001AEC  AE0F               	btfss	___fttol@exp1,7,c
  4599  001AEE  D016               	goto	l2673
  4600  001AF0  500F               	movf	___fttol@exp1,w,c
  4601  001AF2  0A80               	xorlw	128
  4602  001AF4  0F8F               	addlw	143
  4603  001AF6  B0D8               	btfsc	status,0,c
  4604  001AF8  D009               	goto	l2669
  4605  001AFA  0E00               	movlw	0
  4606  001AFC  6E01               	movwf	?___fttol,c
  4607  001AFE  0E00               	movlw	0
  4608  001B00  6E02               	movwf	?___fttol+1,c
  4609  001B02  0E00               	movlw	0
  4610  001B04  6E03               	movwf	?___fttol+2,c
  4611  001B06  0E00               	movlw	0
  4612  001B08  6E04               	movwf	?___fttol+3,c
  4613  001B0A  0012               	return	
  4614  001B0C                     l2669:
  4615  001B0C  90D8               	bcf	status,0,c
  4616  001B0E  320E               	rrcf	___fttol@lval+3,f,c
  4617  001B10  320D               	rrcf	___fttol@lval+2,f,c
  4618  001B12  320C               	rrcf	___fttol@lval+1,f,c
  4619  001B14  320B               	rrcf	___fttol@lval,f,c
  4620  001B16  3E0F               	incfsz	___fttol@exp1,f,c
  4621  001B18  D7F9               	goto	l2669
  4622  001B1A  D015               	goto	l2683
  4623  001B1C                     l2673:
  4624  001B1C  0E17               	movlw	23
  4625  001B1E  640F               	cpfsgt	___fttol@exp1,c
  4626  001B20  D00F               	goto	l2681
  4627  001B22  0E00               	movlw	0
  4628  001B24  6E01               	movwf	?___fttol,c
  4629  001B26  0E00               	movlw	0
  4630  001B28  6E02               	movwf	?___fttol+1,c
  4631  001B2A  0E00               	movlw	0
  4632  001B2C  6E03               	movwf	?___fttol+2,c
  4633  001B2E  0E00               	movlw	0
  4634  001B30  6E04               	movwf	?___fttol+3,c
  4635  001B32  0012               	return	
  4636  001B34                     l2679:
  4637  001B34  90D8               	bcf	status,0,c
  4638  001B36  360B               	rlcf	___fttol@lval,f,c
  4639  001B38  360C               	rlcf	___fttol@lval+1,f,c
  4640  001B3A  360D               	rlcf	___fttol@lval+2,f,c
  4641  001B3C  360E               	rlcf	___fttol@lval+3,f,c
  4642  001B3E  060F               	decf	___fttol@exp1,f,c
  4643  001B40                     l2681:
  4644  001B40  500F               	movf	___fttol@exp1,w,c
  4645  001B42  A4D8               	btfss	status,2,c
  4646  001B44  D7F7               	goto	l2679
  4647  001B46                     l2683:
  4648  001B46  500A               	movf	___fttol@sign1,w,c
  4649  001B48  B4D8               	btfsc	status,2,c
  4650  001B4A  D008               	goto	l2687
  4651  001B4C  1E0E               	comf	___fttol@lval+3,f,c
  4652  001B4E  1E0D               	comf	___fttol@lval+2,f,c
  4653  001B50  1E0C               	comf	___fttol@lval+1,f,c
  4654  001B52  6C0B               	negf	___fttol@lval,c
  4655  001B54  0E00               	movlw	0
  4656  001B56  220C               	addwfc	___fttol@lval+1,f,c
  4657  001B58  220D               	addwfc	___fttol@lval+2,f,c
  4658  001B5A  220E               	addwfc	___fttol@lval+3,f,c
  4659  001B5C                     l2687:
  4660  001B5C  C00B  F001         	movff	___fttol@lval,?___fttol
  4661  001B60  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  4662  001B64  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  4663  001B68  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  4664  001B6C  0012               	return	
  4665  001B6E                     __end_of___fttol:
  4666                           	opt stack 0
  4667                           tblptru	equ	0xFF8
  4668                           tblptrh	equ	0xFF7
  4669                           tblptrl	equ	0xFF6
  4670                           tablat	equ	0xFF5
  4671                           prodl	equ	0xFF3
  4672                           indf2	equ	0xFDF
  4673                           postinc2	equ	0xFDE
  4674                           postdec2	equ	0xFDD
  4675                           fsr2h	equ	0xFDA
  4676                           fsr2l	equ	0xFD9
  4677                           status	equ	0xFD8
  4678                           
  4679 ;; *************** function ___ftneg *****************
  4680 ;; Defined at:
  4681 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;  f1              3   12[COMRAM] float 
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  3   12[COMRAM] float 
  4688 ;; Registers used:
  4689 ;;		wreg, status,2, status,0
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4695 ;;      Params:         3       0       0       0       0       0       0       0       0
  4696 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4698 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4699 ;;Total ram usage:        3 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_main
  4705 ;;		_lcd_printf
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text13
  4710  002270                     __ptext13:
  4711                           	opt stack 0
  4712  002270                     ___ftneg:
  4713                           	opt stack 29
  4714                           
  4715                           ;incstack = 0
  4716  002270  500D               	movf	___ftneg@f1,w,c
  4717  002272  100E               	iorwf	___ftneg@f1+1,w,c
  4718  002274  100F               	iorwf	___ftneg@f1+2,w,c
  4719  002276  B4D8               	btfsc	status,2,c
  4720  002278  D006               	goto	l786
  4721  00227A  0E00               	movlw	0
  4722  00227C  1A0D               	xorwf	___ftneg@f1,f,c
  4723  00227E  0E00               	movlw	0
  4724  002280  1A0E               	xorwf	___ftneg@f1+1,f,c
  4725  002282  0E80               	movlw	128
  4726  002284  1A0F               	xorwf	___ftneg@f1+2,f,c
  4727  002286                     l786:
  4728  002286  C00D  F00D         	movff	___ftneg@f1,?___ftneg
  4729  00228A  C00E  F00E         	movff	___ftneg@f1+1,?___ftneg+1
  4730  00228E  C00F  F00F         	movff	___ftneg@f1+2,?___ftneg+2
  4731  002292  0012               	return		;funcret
  4732  002294                     __end_of___ftneg:
  4733                           	opt stack 0
  4734                           tblptru	equ	0xFF8
  4735                           tblptrh	equ	0xFF7
  4736                           tblptrl	equ	0xFF6
  4737                           tablat	equ	0xFF5
  4738                           prodl	equ	0xFF3
  4739                           indf2	equ	0xFDF
  4740                           postinc2	equ	0xFDE
  4741                           postdec2	equ	0xFDD
  4742                           fsr2h	equ	0xFDA
  4743                           fsr2l	equ	0xFD9
  4744                           status	equ	0xFD8
  4745                           
  4746 ;; *************** function ___ftmul *****************
  4747 ;; Defined at:
  4748 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  f1              3   27[COMRAM] float 
  4751 ;;  f2              3   30[COMRAM] float 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  4754 ;;  sign            1   41[COMRAM] unsigned char 
  4755 ;;  cntr            1   40[COMRAM] unsigned char 
  4756 ;;  exp             1   36[COMRAM] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  3   27[COMRAM] float 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4766 ;;      Params:         6       0       0       0       0       0       0       0       0
  4767 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4768 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4769 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4770 ;;Total ram usage:       15 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    1
  4773 ;; This function calls:
  4774 ;;		___ftpack
  4775 ;; This function is called by:
  4776 ;;		_main
  4777 ;;		_lcd_printf
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text14
  4782  001B6E                     __ptext14:
  4783                           	opt stack 0
  4784  001B6E                     ___ftmul:
  4785                           	opt stack 28
  4786                           
  4787                           ;incstack = 0
  4788  001B6E  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  4789  001B72  6A23               	clrf	(??___ftmul+1)& (0+255),c
  4790  001B74  6A24               	clrf	(??___ftmul+2)& (0+255),c
  4791  001B76  341D               	rlcf	___ftmul@f1+1,w,c
  4792  001B78  3622               	rlcf	??___ftmul& (0+255),f,c
  4793  001B7A  E301               	bnc	u2361
  4794  001B7C  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  4795  001B7E                     u2361:
  4796  001B7E  5022               	movf	??___ftmul,w,c
  4797  001B80  6E25               	movwf	___ftmul@exp,c
  4798  001B82  5025               	movf	___ftmul@exp,w,c
  4799  001B84  A4D8               	btfss	status,2,c
  4800  001B86  D007               	goto	l2581
  4801  001B88  0E00               	movlw	0
  4802  001B8A  6E1C               	movwf	?___ftmul,c
  4803  001B8C  0E00               	movlw	0
  4804  001B8E  6E1D               	movwf	?___ftmul+1,c
  4805  001B90  0E00               	movlw	0
  4806  001B92  6E1E               	movwf	?___ftmul+2,c
  4807  001B94  0012               	return	
  4808  001B96                     l2581:
  4809  001B96  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  4810  001B9A  6A23               	clrf	(??___ftmul+1)& (0+255),c
  4811  001B9C  6A24               	clrf	(??___ftmul+2)& (0+255),c
  4812  001B9E  3420               	rlcf	___ftmul@f2+1,w,c
  4813  001BA0  3622               	rlcf	??___ftmul& (0+255),f,c
  4814  001BA2  E301               	bnc	u2381
  4815  001BA4  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  4816  001BA6                     u2381:
  4817  001BA6  5022               	movf	??___ftmul,w,c
  4818  001BA8  6E2A               	movwf	___ftmul@sign,c
  4819  001BAA  502A               	movf	___ftmul@sign,w,c
  4820  001BAC  A4D8               	btfss	status,2,c
  4821  001BAE  D007               	goto	l2587
  4822  001BB0  0E00               	movlw	0
  4823  001BB2  6E1C               	movwf	?___ftmul,c
  4824  001BB4  0E00               	movlw	0
  4825  001BB6  6E1D               	movwf	?___ftmul+1,c
  4826  001BB8  0E00               	movlw	0
  4827  001BBA  6E1E               	movwf	?___ftmul+2,c
  4828  001BBC  0012               	return	
  4829  001BBE                     l2587:
  4830  001BBE  502A               	movf	___ftmul@sign,w,c
  4831  001BC0  0F7B               	addlw	123
  4832  001BC2  2625               	addwf	___ftmul@exp,f,c
  4833  001BC4  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  4834  001BC8  5021               	movf	___ftmul@f2+2,w,c
  4835  001BCA  1A2A               	xorwf	___ftmul@sign,f,c
  4836  001BCC  0E80               	movlw	128
  4837  001BCE  162A               	andwf	___ftmul@sign,f,c
  4838  001BD0  8E1D               	bsf	___ftmul@f1+1,7,c
  4839  001BD2  8E20               	bsf	___ftmul@f2+1,7,c
  4840  001BD4  0EFF               	movlw	255
  4841  001BD6  161F               	andwf	___ftmul@f2,f,c
  4842  001BD8  0EFF               	movlw	255
  4843  001BDA  1620               	andwf	___ftmul@f2+1,f,c
  4844  001BDC  0E00               	movlw	0
  4845  001BDE  1621               	andwf	___ftmul@f2+2,f,c
  4846  001BE0  0E00               	movlw	0
  4847  001BE2  6E26               	movwf	___ftmul@f3_as_product,c
  4848  001BE4  0E00               	movlw	0
  4849  001BE6  6E27               	movwf	___ftmul@f3_as_product+1,c
  4850  001BE8  0E00               	movlw	0
  4851  001BEA  6E28               	movwf	___ftmul@f3_as_product+2,c
  4852  001BEC  0E07               	movlw	7
  4853  001BEE  6E29               	movwf	___ftmul@cntr,c
  4854  001BF0                     l2601:
  4855  001BF0  A01C               	btfss	___ftmul@f1,0,c
  4856  001BF2  D006               	goto	l2605
  4857  001BF4  501F               	movf	___ftmul@f2,w,c
  4858  001BF6  2626               	addwf	___ftmul@f3_as_product,f,c
  4859  001BF8  5020               	movf	___ftmul@f2+1,w,c
  4860  001BFA  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  4861  001BFC  5021               	movf	___ftmul@f2+2,w,c
  4862  001BFE  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  4863  001C00                     l2605:
  4864  001C00  90D8               	bcf	status,0,c
  4865  001C02  321E               	rrcf	___ftmul@f1+2,f,c
  4866  001C04  321D               	rrcf	___ftmul@f1+1,f,c
  4867  001C06  321C               	rrcf	___ftmul@f1,f,c
  4868  001C08  90D8               	bcf	status,0,c
  4869  001C0A  361F               	rlcf	___ftmul@f2,f,c
  4870  001C0C  3620               	rlcf	___ftmul@f2+1,f,c
  4871  001C0E  3621               	rlcf	___ftmul@f2+2,f,c
  4872  001C10  2E29               	decfsz	___ftmul@cntr,f,c
  4873  001C12  D7EE               	goto	l2601
  4874  001C14  0E09               	movlw	9
  4875  001C16  6E29               	movwf	___ftmul@cntr,c
  4876  001C18                     l2611:
  4877  001C18  A01C               	btfss	___ftmul@f1,0,c
  4878  001C1A  D006               	goto	l2615
  4879  001C1C  501F               	movf	___ftmul@f2,w,c
  4880  001C1E  2626               	addwf	___ftmul@f3_as_product,f,c
  4881  001C20  5020               	movf	___ftmul@f2+1,w,c
  4882  001C22  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  4883  001C24  5021               	movf	___ftmul@f2+2,w,c
  4884  001C26  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  4885  001C28                     l2615:
  4886  001C28  90D8               	bcf	status,0,c
  4887  001C2A  321E               	rrcf	___ftmul@f1+2,f,c
  4888  001C2C  321D               	rrcf	___ftmul@f1+1,f,c
  4889  001C2E  321C               	rrcf	___ftmul@f1,f,c
  4890  001C30  90D8               	bcf	status,0,c
  4891  001C32  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  4892  001C34  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  4893  001C36  3226               	rrcf	___ftmul@f3_as_product,f,c
  4894  001C38  2E29               	decfsz	___ftmul@cntr,f,c
  4895  001C3A  D7EE               	goto	l2611
  4896  001C3C  C026  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4897  001C40  C027  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4898  001C44  C028  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4899  001C48  C025  F004         	movff	___ftmul@exp,___ftpack@exp
  4900  001C4C  C02A  F005         	movff	___ftmul@sign,___ftpack@sign
  4901  001C50  ECA4  F00E         	call	___ftpack	;wreg free
  4902  001C54  C001  F01C         	movff	?___ftpack,?___ftmul
  4903  001C58  C002  F01D         	movff	?___ftpack+1,?___ftmul+1
  4904  001C5C  C003  F01E         	movff	?___ftpack+2,?___ftmul+2
  4905  001C60  0012               	return	
  4906  001C62                     __end_of___ftmul:
  4907                           	opt stack 0
  4908                           tblptru	equ	0xFF8
  4909                           tblptrh	equ	0xFF7
  4910                           tblptrl	equ	0xFF6
  4911                           tablat	equ	0xFF5
  4912                           prodl	equ	0xFF3
  4913                           indf2	equ	0xFDF
  4914                           postinc2	equ	0xFDE
  4915                           postdec2	equ	0xFDD
  4916                           fsr2h	equ	0xFDA
  4917                           fsr2l	equ	0xFD9
  4918                           status	equ	0xFD8
  4919                           
  4920 ;; *************** function ___ftge *****************
  4921 ;; Defined at:
  4922 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  ff1             3    0[COMRAM] float 
  4925 ;;  ff2             3    3[COMRAM] float 
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;		None
  4928 ;; Return value:  Size  Location     Type
  4929 ;;		None               void
  4930 ;; Registers used:
  4931 ;;		wreg, status,2, status,0
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4937 ;;      Params:         6       0       0       0       0       0       0       0       0
  4938 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4939 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4940 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4941 ;;Total ram usage:        9 bytes
  4942 ;; Hardware stack levels used:    1
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_lcd_printf
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text15
  4951  001F34                     __ptext15:
  4952                           	opt stack 0
  4953  001F34                     ___ftge:
  4954                           	opt stack 29
  4955                           
  4956                           ;incstack = 0
  4957  001F34  AE03               	btfss	___ftge@ff1+2,7,c
  4958  001F36  D016               	goto	l2627
  4959  001F38  C001  F007         	movff	___ftge@ff1,??___ftge
  4960  001F3C  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4961  001F40  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4962  001F44  1E07               	comf	??___ftge,f,c
  4963  001F46  1E08               	comf	??___ftge+1,f,c
  4964  001F48  1E09               	comf	??___ftge+2,f,c
  4965  001F4A  2A07               	incf	??___ftge,f,c
  4966  001F4C  0E00               	movlw	0
  4967  001F4E  2208               	addwfc	??___ftge+1,f,c
  4968  001F50  2209               	addwfc	??___ftge+2,f,c
  4969  001F52  0E00               	movlw	0
  4970  001F54  2407               	addwf	??___ftge,w,c
  4971  001F56  6E01               	movwf	___ftge@ff1,c
  4972  001F58  0E00               	movlw	0
  4973  001F5A  2008               	addwfc	??___ftge+1,w,c
  4974  001F5C  6E02               	movwf	___ftge@ff1+1,c
  4975  001F5E  0E80               	movlw	128
  4976  001F60  2009               	addwfc	??___ftge+2,w,c
  4977  001F62  6E03               	movwf	___ftge@ff1+2,c
  4978  001F64                     l2627:
  4979  001F64  AE06               	btfss	___ftge@ff2+2,7,c
  4980  001F66  D016               	goto	l2631
  4981  001F68  C004  F007         	movff	___ftge@ff2,??___ftge
  4982  001F6C  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4983  001F70  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4984  001F74  1E07               	comf	??___ftge,f,c
  4985  001F76  1E08               	comf	??___ftge+1,f,c
  4986  001F78  1E09               	comf	??___ftge+2,f,c
  4987  001F7A  2A07               	incf	??___ftge,f,c
  4988  001F7C  0E00               	movlw	0
  4989  001F7E  2208               	addwfc	??___ftge+1,f,c
  4990  001F80  2209               	addwfc	??___ftge+2,f,c
  4991  001F82  0E00               	movlw	0
  4992  001F84  2407               	addwf	??___ftge,w,c
  4993  001F86  6E04               	movwf	___ftge@ff2,c
  4994  001F88  0E00               	movlw	0
  4995  001F8A  2008               	addwfc	??___ftge+1,w,c
  4996  001F8C  6E05               	movwf	___ftge@ff2+1,c
  4997  001F8E  0E80               	movlw	128
  4998  001F90  2009               	addwfc	??___ftge+2,w,c
  4999  001F92  6E06               	movwf	___ftge@ff2+2,c
  5000  001F94                     l2631:
  5001  001F94  0E00               	movlw	0
  5002  001F96  1A01               	xorwf	___ftge@ff1,f,c
  5003  001F98  0E00               	movlw	0
  5004  001F9A  1A02               	xorwf	___ftge@ff1+1,f,c
  5005  001F9C  0E80               	movlw	128
  5006  001F9E  1A03               	xorwf	___ftge@ff1+2,f,c
  5007  001FA0  0E00               	movlw	0
  5008  001FA2  1A04               	xorwf	___ftge@ff2,f,c
  5009  001FA4  0E00               	movlw	0
  5010  001FA6  1A05               	xorwf	___ftge@ff2+1,f,c
  5011  001FA8  0E80               	movlw	128
  5012  001FAA  1A06               	xorwf	___ftge@ff2+2,f,c
  5013  001FAC  5004               	movf	___ftge@ff2,w,c
  5014  001FAE  5C01               	subwf	___ftge@ff1,w,c
  5015  001FB0  5005               	movf	___ftge@ff2+1,w,c
  5016  001FB2  5802               	subwfb	___ftge@ff1+1,w,c
  5017  001FB4  5006               	movf	___ftge@ff2+2,w,c
  5018  001FB6  5803               	subwfb	___ftge@ff1+2,w,c
  5019  001FB8  B0D8               	btfsc	status,0,c
  5020  001FBA  D002               	goto	l2637
  5021  001FBC  90D8               	bcf	status,0,c
  5022  001FBE  0012               	return	
  5023  001FC0                     l2637:
  5024  001FC0  80D8               	bsf	status,0,c
  5025  001FC2  0012               	return	
  5026  001FC4                     __end_of___ftge:
  5027                           	opt stack 0
  5028                           tblptru	equ	0xFF8
  5029                           tblptrh	equ	0xFF7
  5030                           tblptrl	equ	0xFF6
  5031                           tablat	equ	0xFF5
  5032                           prodl	equ	0xFF3
  5033                           indf2	equ	0xFDF
  5034                           postinc2	equ	0xFDE
  5035                           postdec2	equ	0xFDD
  5036                           fsr2h	equ	0xFDA
  5037                           fsr2l	equ	0xFD9
  5038                           status	equ	0xFD8
  5039                           
  5040 ;; *************** function ___ftdiv *****************
  5041 ;; Defined at:
  5042 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;  f1              3   42[COMRAM] float 
  5045 ;;  f2              3   45[COMRAM] float 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  f3              3   52[COMRAM] float 
  5048 ;;  sign            1   56[COMRAM] unsigned char 
  5049 ;;  exp             1   55[COMRAM] unsigned char 
  5050 ;;  cntr            1   51[COMRAM] unsigned char 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  3   42[COMRAM] float 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0, cstack
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5060 ;;      Params:         6       0       0       0       0       0       0       0       0
  5061 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5062 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5063 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5064 ;;Total ram usage:       15 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    1
  5067 ;; This function calls:
  5068 ;;		___ftpack
  5069 ;; This function is called by:
  5070 ;;		_main
  5071 ;;		_lcd_printf
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           	psect	text16
  5076  001C62                     __ptext16:
  5077                           	opt stack 0
  5078  001C62                     ___ftdiv:
  5079                           	opt stack 28
  5080                           
  5081                           ;incstack = 0
  5082  001C62  C02D  F031         	movff	___ftdiv@f1+2,??___ftdiv
  5083  001C66  6A32               	clrf	(??___ftdiv+1)& (0+255),c
  5084  001C68  6A33               	clrf	(??___ftdiv+2)& (0+255),c
  5085  001C6A  342C               	rlcf	___ftdiv@f1+1,w,c
  5086  001C6C  3631               	rlcf	??___ftdiv& (0+255),f,c
  5087  001C6E  E301               	bnc	u2311
  5088  001C70  8032               	bsf	(??___ftdiv+1)& (0+255),0,c
  5089  001C72                     u2311:
  5090  001C72  5031               	movf	??___ftdiv,w,c
  5091  001C74  6E38               	movwf	___ftdiv@exp,c
  5092  001C76  5038               	movf	___ftdiv@exp,w,c
  5093  001C78  A4D8               	btfss	status,2,c
  5094  001C7A  D007               	goto	l2535
  5095  001C7C  0E00               	movlw	0
  5096  001C7E  6E2B               	movwf	?___ftdiv,c
  5097  001C80  0E00               	movlw	0
  5098  001C82  6E2C               	movwf	?___ftdiv+1,c
  5099  001C84  0E00               	movlw	0
  5100  001C86  6E2D               	movwf	?___ftdiv+2,c
  5101  001C88  0012               	return	
  5102  001C8A                     l2535:
  5103  001C8A  C030  F031         	movff	___ftdiv@f2+2,??___ftdiv
  5104  001C8E  6A32               	clrf	(??___ftdiv+1)& (0+255),c
  5105  001C90  6A33               	clrf	(??___ftdiv+2)& (0+255),c
  5106  001C92  342F               	rlcf	___ftdiv@f2+1,w,c
  5107  001C94  3631               	rlcf	??___ftdiv& (0+255),f,c
  5108  001C96  E301               	bnc	u2331
  5109  001C98  8032               	bsf	(??___ftdiv+1)& (0+255),0,c
  5110  001C9A                     u2331:
  5111  001C9A  5031               	movf	??___ftdiv,w,c
  5112  001C9C  6E39               	movwf	___ftdiv@sign,c
  5113  001C9E  5039               	movf	___ftdiv@sign,w,c
  5114  001CA0  A4D8               	btfss	status,2,c
  5115  001CA2  D007               	goto	l2541
  5116  001CA4  0E00               	movlw	0
  5117  001CA6  6E2B               	movwf	?___ftdiv,c
  5118  001CA8  0E00               	movlw	0
  5119  001CAA  6E2C               	movwf	?___ftdiv+1,c
  5120  001CAC  0E00               	movlw	0
  5121  001CAE  6E2D               	movwf	?___ftdiv+2,c
  5122  001CB0  0012               	return	
  5123  001CB2                     l2541:
  5124  001CB2  0E00               	movlw	0
  5125  001CB4  6E35               	movwf	___ftdiv@f3,c
  5126  001CB6  0E00               	movlw	0
  5127  001CB8  6E36               	movwf	___ftdiv@f3+1,c
  5128  001CBA  0E00               	movlw	0
  5129  001CBC  6E37               	movwf	___ftdiv@f3+2,c
  5130  001CBE  5039               	movf	___ftdiv@sign,w,c
  5131  001CC0  0F89               	addlw	137
  5132  001CC2  5E38               	subwf	___ftdiv@exp,f,c
  5133  001CC4  C02D  F039         	movff	___ftdiv@f1+2,___ftdiv@sign
  5134  001CC8  5030               	movf	___ftdiv@f2+2,w,c
  5135  001CCA  1A39               	xorwf	___ftdiv@sign,f,c
  5136  001CCC  0E80               	movlw	128
  5137  001CCE  1639               	andwf	___ftdiv@sign,f,c
  5138  001CD0  8E2C               	bsf	___ftdiv@f1+1,7,c
  5139  001CD2  0EFF               	movlw	255
  5140  001CD4  162B               	andwf	___ftdiv@f1,f,c
  5141  001CD6  0EFF               	movlw	255
  5142  001CD8  162C               	andwf	___ftdiv@f1+1,f,c
  5143  001CDA  0E00               	movlw	0
  5144  001CDC  162D               	andwf	___ftdiv@f1+2,f,c
  5145  001CDE  8E2F               	bsf	___ftdiv@f2+1,7,c
  5146  001CE0  0EFF               	movlw	255
  5147  001CE2  162E               	andwf	___ftdiv@f2,f,c
  5148  001CE4  0EFF               	movlw	255
  5149  001CE6  162F               	andwf	___ftdiv@f2+1,f,c
  5150  001CE8  0E00               	movlw	0
  5151  001CEA  1630               	andwf	___ftdiv@f2+2,f,c
  5152  001CEC  0E18               	movlw	24
  5153  001CEE  6E34               	movwf	___ftdiv@cntr,c
  5154  001CF0                     l2561:
  5155  001CF0  90D8               	bcf	status,0,c
  5156  001CF2  3635               	rlcf	___ftdiv@f3,f,c
  5157  001CF4  3636               	rlcf	___ftdiv@f3+1,f,c
  5158  001CF6  3637               	rlcf	___ftdiv@f3+2,f,c
  5159  001CF8  502E               	movf	___ftdiv@f2,w,c
  5160  001CFA  5C2B               	subwf	___ftdiv@f1,w,c
  5161  001CFC  502F               	movf	___ftdiv@f2+1,w,c
  5162  001CFE  582C               	subwfb	___ftdiv@f1+1,w,c
  5163  001D00  5030               	movf	___ftdiv@f2+2,w,c
  5164  001D02  582D               	subwfb	___ftdiv@f1+2,w,c
  5165  001D04  A0D8               	btfss	status,0,c
  5166  001D06  D007               	goto	l764
  5167  001D08  502E               	movf	___ftdiv@f2,w,c
  5168  001D0A  5E2B               	subwf	___ftdiv@f1,f,c
  5169  001D0C  502F               	movf	___ftdiv@f2+1,w,c
  5170  001D0E  5A2C               	subwfb	___ftdiv@f1+1,f,c
  5171  001D10  5030               	movf	___ftdiv@f2+2,w,c
  5172  001D12  5A2D               	subwfb	___ftdiv@f1+2,f,c
  5173  001D14  8035               	bsf	___ftdiv@f3,0,c
  5174  001D16                     l764:
  5175  001D16  90D8               	bcf	status,0,c
  5176  001D18  362B               	rlcf	___ftdiv@f1,f,c
  5177  001D1A  362C               	rlcf	___ftdiv@f1+1,f,c
  5178  001D1C  362D               	rlcf	___ftdiv@f1+2,f,c
  5179  001D1E  2E34               	decfsz	___ftdiv@cntr,f,c
  5180  001D20  D7E7               	goto	l2561
  5181  001D22  C035  F001         	movff	___ftdiv@f3,___ftpack@arg
  5182  001D26  C036  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5183  001D2A  C037  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5184  001D2E  C038  F004         	movff	___ftdiv@exp,___ftpack@exp
  5185  001D32  C039  F005         	movff	___ftdiv@sign,___ftpack@sign
  5186  001D36  ECA4  F00E         	call	___ftpack	;wreg free
  5187  001D3A  C001  F02B         	movff	?___ftpack,?___ftdiv
  5188  001D3E  C002  F02C         	movff	?___ftpack+1,?___ftdiv+1
  5189  001D42  C003  F02D         	movff	?___ftpack+2,?___ftdiv+2
  5190  001D46  0012               	return	
  5191  001D48                     __end_of___ftdiv:
  5192                           	opt stack 0
  5193                           tblptru	equ	0xFF8
  5194                           tblptrh	equ	0xFF7
  5195                           tblptrl	equ	0xFF6
  5196                           tablat	equ	0xFF5
  5197                           prodl	equ	0xFF3
  5198                           indf2	equ	0xFDF
  5199                           postinc2	equ	0xFDE
  5200                           postdec2	equ	0xFDD
  5201                           fsr2h	equ	0xFDA
  5202                           fsr2l	equ	0xFD9
  5203                           status	equ	0xFD8
  5204                           
  5205 ;; *************** function ___ftadd *****************
  5206 ;; Defined at:
  5207 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  f1              3   15[COMRAM] float 
  5210 ;;  f2              3   18[COMRAM] float 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  exp1            1   26[COMRAM] unsigned char 
  5213 ;;  exp2            1   25[COMRAM] unsigned char 
  5214 ;;  sign            1   24[COMRAM] unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  3   15[COMRAM] float 
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, status,0, cstack
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5224 ;;      Params:         6       0       0       0       0       0       0       0       0
  5225 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5226 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5227 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5228 ;;Total ram usage:       12 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    1
  5231 ;; This function calls:
  5232 ;;		___ftpack
  5233 ;; This function is called by:
  5234 ;;		_main
  5235 ;;		_lcd_printf
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           	psect	text17
  5240  0018CE                     __ptext17:
  5241                           	opt stack 0
  5242  0018CE                     ___ftadd:
  5243                           	opt stack 28
  5244                           
  5245                           ;incstack = 0
  5246  0018CE  C012  F016         	movff	___ftadd@f1+2,??___ftadd
  5247  0018D2  6A17               	clrf	(??___ftadd+1)& (0+255),c
  5248  0018D4  6A18               	clrf	(??___ftadd+2)& (0+255),c
  5249  0018D6  3411               	rlcf	___ftadd@f1+1,w,c
  5250  0018D8  3616               	rlcf	??___ftadd& (0+255),f,c
  5251  0018DA  E301               	bnc	u2101
  5252  0018DC  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  5253  0018DE                     u2101:
  5254  0018DE  5016               	movf	??___ftadd,w,c
  5255  0018E0  6E1B               	movwf	___ftadd@exp1,c
  5256  0018E2  C015  F016         	movff	___ftadd@f2+2,??___ftadd
  5257  0018E6  6A17               	clrf	(??___ftadd+1)& (0+255),c
  5258  0018E8  6A18               	clrf	(??___ftadd+2)& (0+255),c
  5259  0018EA  3414               	rlcf	___ftadd@f2+1,w,c
  5260  0018EC  3616               	rlcf	??___ftadd& (0+255),f,c
  5261  0018EE  E301               	bnc	u2111
  5262  0018F0  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  5263  0018F2                     u2111:
  5264  0018F2  5016               	movf	??___ftadd,w,c
  5265  0018F4  6E1A               	movwf	___ftadd@exp2,c
  5266  0018F6  501B               	movf	___ftadd@exp1,w,c
  5267  0018F8  B4D8               	btfsc	status,2,c
  5268  0018FA  D00B               	goto	l729
  5269  0018FC  501A               	movf	___ftadd@exp2,w,c
  5270  0018FE  5C1B               	subwf	___ftadd@exp1,w,c
  5271  001900  B0D8               	btfsc	status,0,c
  5272  001902  D00E               	goto	l2467
  5273  001904  501B               	movf	___ftadd@exp1,w,c
  5274  001906  0800               	sublw	0
  5275  001908  241A               	addwf	___ftadd@exp2,w,c
  5276  00190A  6E16               	movwf	??___ftadd& (0+255),c
  5277  00190C  0E18               	movlw	24
  5278  00190E  6416               	cpfsgt	??___ftadd,c
  5279  001910  D007               	goto	l2467
  5280  001912                     l729:
  5281  001912  C013  F010         	movff	___ftadd@f2,?___ftadd
  5282  001916  C014  F011         	movff	___ftadd@f2+1,?___ftadd+1
  5283  00191A  C015  F012         	movff	___ftadd@f2+2,?___ftadd+2
  5284  00191E  0012               	return	
  5285  001920                     l2467:
  5286  001920  501A               	movf	___ftadd@exp2,w,c
  5287  001922  B4D8               	btfsc	status,2,c
  5288  001924  D00B               	goto	l733
  5289  001926  501B               	movf	___ftadd@exp1,w,c
  5290  001928  5C1A               	subwf	___ftadd@exp2,w,c
  5291  00192A  B0D8               	btfsc	status,0,c
  5292  00192C  D00E               	goto	l2473
  5293  00192E  501A               	movf	___ftadd@exp2,w,c
  5294  001930  0800               	sublw	0
  5295  001932  241B               	addwf	___ftadd@exp1,w,c
  5296  001934  6E16               	movwf	??___ftadd& (0+255),c
  5297  001936  0E18               	movlw	24
  5298  001938  6416               	cpfsgt	??___ftadd,c
  5299  00193A  D007               	goto	l2473
  5300  00193C                     l733:
  5301  00193C  C010  F010         	movff	___ftadd@f1,?___ftadd
  5302  001940  C011  F011         	movff	___ftadd@f1+1,?___ftadd+1
  5303  001944  C012  F012         	movff	___ftadd@f1+2,?___ftadd+2
  5304  001948  0012               	return	
  5305  00194A                     l2473:
  5306  00194A  0E06               	movlw	6
  5307  00194C  6E19               	movwf	___ftadd@sign,c
  5308  00194E  BE12               	btfsc	___ftadd@f1+2,7,c
  5309  001950  8E19               	bsf	___ftadd@sign,7,c
  5310  001952  BE15               	btfsc	___ftadd@f2+2,7,c
  5311  001954  8C19               	bsf	___ftadd@sign,6,c
  5312  001956  8E11               	bsf	___ftadd@f1+1,7,c
  5313  001958  0EFF               	movlw	255
  5314  00195A  1610               	andwf	___ftadd@f1,f,c
  5315  00195C  0EFF               	movlw	255
  5316  00195E  1611               	andwf	___ftadd@f1+1,f,c
  5317  001960  0E00               	movlw	0
  5318  001962  1612               	andwf	___ftadd@f1+2,f,c
  5319  001964  8E14               	bsf	___ftadd@f2+1,7,c
  5320  001966  0EFF               	movlw	255
  5321  001968  1613               	andwf	___ftadd@f2,f,c
  5322  00196A  0EFF               	movlw	255
  5323  00196C  1614               	andwf	___ftadd@f2+1,f,c
  5324  00196E  0E00               	movlw	0
  5325  001970  1615               	andwf	___ftadd@f2+2,f,c
  5326  001972  501A               	movf	___ftadd@exp2,w,c
  5327  001974  5C1B               	subwf	___ftadd@exp1,w,c
  5328  001976  B0D8               	btfsc	status,0,c
  5329  001978  D01B               	goto	l2499
  5330  00197A                     l2489:
  5331  00197A  90D8               	bcf	status,0,c
  5332  00197C  3613               	rlcf	___ftadd@f2,f,c
  5333  00197E  3614               	rlcf	___ftadd@f2+1,f,c
  5334  001980  3615               	rlcf	___ftadd@f2+2,f,c
  5335  001982  061A               	decf	___ftadd@exp2,f,c
  5336  001984  501B               	movf	___ftadd@exp1,w,c
  5337  001986  181A               	xorwf	___ftadd@exp2,w,c
  5338  001988  B4D8               	btfsc	status,2,c
  5339  00198A  D00D               	goto	l2497
  5340  00198C  0619               	decf	___ftadd@sign,f,c
  5341  00198E  C019  F016         	movff	___ftadd@sign,??___ftadd
  5342  001992  0E07               	movlw	7
  5343  001994  1616               	andwf	??___ftadd,f,c
  5344  001996  B4D8               	btfsc	status,2,c
  5345  001998  D006               	goto	l2497
  5346  00199A  D7EF               	goto	l2489
  5347  00199C                     l2495:
  5348  00199C  90D8               	bcf	status,0,c
  5349  00199E  3212               	rrcf	___ftadd@f1+2,f,c
  5350  0019A0  3211               	rrcf	___ftadd@f1+1,f,c
  5351  0019A2  3210               	rrcf	___ftadd@f1,f,c
  5352  0019A4  2A1B               	incf	___ftadd@exp1,f,c
  5353  0019A6                     l2497:
  5354  0019A6  501A               	movf	___ftadd@exp2,w,c
  5355  0019A8  181B               	xorwf	___ftadd@exp1,w,c
  5356  0019AA  B4D8               	btfsc	status,2,c
  5357  0019AC  D01F               	goto	l744
  5358  0019AE  D7F6               	goto	l2495
  5359  0019B0                     l2499:
  5360  0019B0  501B               	movf	___ftadd@exp1,w,c
  5361  0019B2  5C1A               	subwf	___ftadd@exp2,w,c
  5362  0019B4  B0D8               	btfsc	status,0,c
  5363  0019B6  D01A               	goto	l744
  5364  0019B8                     l2501:
  5365  0019B8  90D8               	bcf	status,0,c
  5366  0019BA  3610               	rlcf	___ftadd@f1,f,c
  5367  0019BC  3611               	rlcf	___ftadd@f1+1,f,c
  5368  0019BE  3612               	rlcf	___ftadd@f1+2,f,c
  5369  0019C0  061B               	decf	___ftadd@exp1,f,c
  5370  0019C2  501B               	movf	___ftadd@exp1,w,c
  5371  0019C4  181A               	xorwf	___ftadd@exp2,w,c
  5372  0019C6  B4D8               	btfsc	status,2,c
  5373  0019C8  D00D               	goto	l2509
  5374  0019CA  0619               	decf	___ftadd@sign,f,c
  5375  0019CC  C019  F016         	movff	___ftadd@sign,??___ftadd
  5376  0019D0  0E07               	movlw	7
  5377  0019D2  1616               	andwf	??___ftadd,f,c
  5378  0019D4  B4D8               	btfsc	status,2,c
  5379  0019D6  D006               	goto	l2509
  5380  0019D8  D7EF               	goto	l2501
  5381  0019DA                     l2507:
  5382  0019DA  90D8               	bcf	status,0,c
  5383  0019DC  3215               	rrcf	___ftadd@f2+2,f,c
  5384  0019DE  3214               	rrcf	___ftadd@f2+1,f,c
  5385  0019E0  3213               	rrcf	___ftadd@f2,f,c
  5386  0019E2  2A1A               	incf	___ftadd@exp2,f,c
  5387  0019E4                     l2509:
  5388  0019E4  501A               	movf	___ftadd@exp2,w,c
  5389  0019E6  181B               	xorwf	___ftadd@exp1,w,c
  5390  0019E8  A4D8               	btfss	status,2,c
  5391  0019EA  D7F7               	goto	l2507
  5392  0019EC                     l744:
  5393  0019EC  AE19               	btfss	___ftadd@sign,7,c
  5394  0019EE  D00C               	goto	l753
  5395  0019F0  0EFF               	movlw	255
  5396  0019F2  1A10               	xorwf	___ftadd@f1,f,c
  5397  0019F4  0EFF               	movlw	255
  5398  0019F6  1A11               	xorwf	___ftadd@f1+1,f,c
  5399  0019F8  0EFF               	movlw	255
  5400  0019FA  1A12               	xorwf	___ftadd@f1+2,f,c
  5401  0019FC  0E01               	movlw	1
  5402  0019FE  2610               	addwf	___ftadd@f1,f,c
  5403  001A00  0E00               	movlw	0
  5404  001A02  2211               	addwfc	___ftadd@f1+1,f,c
  5405  001A04  0E00               	movlw	0
  5406  001A06  2212               	addwfc	___ftadd@f1+2,f,c
  5407  001A08                     l753:
  5408  001A08  AC19               	btfss	___ftadd@sign,6,c
  5409  001A0A  D00C               	goto	l2515
  5410  001A0C  0EFF               	movlw	255
  5411  001A0E  1A13               	xorwf	___ftadd@f2,f,c
  5412  001A10  0EFF               	movlw	255
  5413  001A12  1A14               	xorwf	___ftadd@f2+1,f,c
  5414  001A14  0EFF               	movlw	255
  5415  001A16  1A15               	xorwf	___ftadd@f2+2,f,c
  5416  001A18  0E01               	movlw	1
  5417  001A1A  2613               	addwf	___ftadd@f2,f,c
  5418  001A1C  0E00               	movlw	0
  5419  001A1E  2214               	addwfc	___ftadd@f2+1,f,c
  5420  001A20  0E00               	movlw	0
  5421  001A22  2215               	addwfc	___ftadd@f2+2,f,c
  5422  001A24                     l2515:
  5423  001A24  0E00               	movlw	0
  5424  001A26  6E19               	movwf	___ftadd@sign,c
  5425  001A28  5010               	movf	___ftadd@f1,w,c
  5426  001A2A  2613               	addwf	___ftadd@f2,f,c
  5427  001A2C  5011               	movf	___ftadd@f1+1,w,c
  5428  001A2E  2214               	addwfc	___ftadd@f2+1,f,c
  5429  001A30  5012               	movf	___ftadd@f1+2,w,c
  5430  001A32  2215               	addwfc	___ftadd@f2+2,f,c
  5431  001A34  AE15               	btfss	___ftadd@f2+2,7,c
  5432  001A36  D00E               	goto	l2525
  5433  001A38  0EFF               	movlw	255
  5434  001A3A  1A13               	xorwf	___ftadd@f2,f,c
  5435  001A3C  0EFF               	movlw	255
  5436  001A3E  1A14               	xorwf	___ftadd@f2+1,f,c
  5437  001A40  0EFF               	movlw	255
  5438  001A42  1A15               	xorwf	___ftadd@f2+2,f,c
  5439  001A44  0E01               	movlw	1
  5440  001A46  2613               	addwf	___ftadd@f2,f,c
  5441  001A48  0E00               	movlw	0
  5442  001A4A  2214               	addwfc	___ftadd@f2+1,f,c
  5443  001A4C  0E00               	movlw	0
  5444  001A4E  2215               	addwfc	___ftadd@f2+2,f,c
  5445  001A50  0E01               	movlw	1
  5446  001A52  6E19               	movwf	___ftadd@sign,c
  5447  001A54                     l2525:
  5448  001A54  C013  F001         	movff	___ftadd@f2,___ftpack@arg
  5449  001A58  C014  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5450  001A5C  C015  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5451  001A60  C01B  F004         	movff	___ftadd@exp1,___ftpack@exp
  5452  001A64  C019  F005         	movff	___ftadd@sign,___ftpack@sign
  5453  001A68  ECA4  F00E         	call	___ftpack	;wreg free
  5454  001A6C  C001  F010         	movff	?___ftpack,?___ftadd
  5455  001A70  C002  F011         	movff	?___ftpack+1,?___ftadd+1
  5456  001A74  C003  F012         	movff	?___ftpack+2,?___ftadd+2
  5457  001A78  0012               	return	
  5458  001A7A                     __end_of___ftadd:
  5459                           	opt stack 0
  5460                           tblptru	equ	0xFF8
  5461                           tblptrh	equ	0xFF7
  5462                           tblptrl	equ	0xFF6
  5463                           tablat	equ	0xFF5
  5464                           prodl	equ	0xFF3
  5465                           indf2	equ	0xFDF
  5466                           postinc2	equ	0xFDE
  5467                           postdec2	equ	0xFDD
  5468                           fsr2h	equ	0xFDA
  5469                           fsr2l	equ	0xFD9
  5470                           status	equ	0xFD8
  5471                           
  5472 ;; *************** function _lcd_init *****************
  5473 ;; Defined at:
  5474 ;;		line 101 in file "iut_lcd.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;		None
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;		None
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg, status,2, status,0, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5488 ;;      Params:         0       0       0       0       0       0       0       0       0
  5489 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5490 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5491 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5492 ;;Total ram usage:        1 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    4
  5495 ;; This function calls:
  5496 ;;		_lcd_clear
  5497 ;;		_lcd_clock_e
  5498 ;;		_lcd_write_cmd_busy
  5499 ;; This function is called by:
  5500 ;;		_main
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text18
  5505  001E9C                     __ptext18:
  5506                           	opt stack 0
  5507  001E9C                     _lcd_init:
  5508                           	opt stack 26
  5509                           
  5510                           ;iut_lcd.c: 102: TRISD &= ~0x07;
  5511                           
  5512                           ;incstack = 0
  5513  001E9C  0EF8               	movlw	248
  5514  001E9E  1695               	andwf	3989,f,c	;volatile
  5515                           
  5516                           ;iut_lcd.c: 103: TRISD |= 0xF0;
  5517  001EA0  0EF0               	movlw	240
  5518  001EA2  1295               	iorwf	3989,f,c	;volatile
  5519                           
  5520                           ;iut_lcd.c: 104: PORTD &= 0x08;
  5521  001EA4  0E08               	movlw	8
  5522  001EA6  1683               	andwf	3971,f,c	;volatile
  5523                           
  5524                           ;iut_lcd.c: 105: _delay(180000);
  5525  001EA8  0EEA               	movlw	234
  5526  001EAA  6E03               	movwf	??_lcd_init& (0+255),c
  5527  001EAC  0EC3               	movlw	195
  5528  001EAE                     u3787:
  5529  001EAE  2EE8               	decfsz	wreg,f,c
  5530  001EB0  D7FE               	bra	u3787
  5531  001EB2  2E03               	decfsz	??_lcd_init& (0+255),f,c
  5532  001EB4  D7FC               	bra	u3787
  5533  001EB6  F000               	nop	
  5534                           
  5535                           ;iut_lcd.c: 107: TRISD &= 0x0f;
  5536  001EB8  0E0F               	movlw	15
  5537  001EBA  1695               	andwf	3989,f,c	;volatile
  5538                           
  5539                           ;iut_lcd.c: 109: PORTD &= 0x0f;
  5540  001EBC  0E0F               	movlw	15
  5541  001EBE  1683               	andwf	3971,f,c	;volatile
  5542                           
  5543                           ;iut_lcd.c: 110: PORTD |= 0b00110000;
  5544  001EC0  0E30               	movlw	48
  5545  001EC2  1283               	iorwf	3971,f,c	;volatile
  5546                           
  5547                           ;iut_lcd.c: 111: lcd_clock_e();
  5548  001EC4  EC79  F011         	call	_lcd_clock_e	;wreg free
  5549                           
  5550                           ;iut_lcd.c: 112: _delay(60000);
  5551  001EC8  0E4E               	movlw	78
  5552  001ECA  6E03               	movwf	??_lcd_init& (0+255),c
  5553  001ECC  0EEB               	movlw	235
  5554  001ECE                     u3797:
  5555  001ECE  2EE8               	decfsz	wreg,f,c
  5556  001ED0  D7FE               	bra	u3797
  5557  001ED2  2E03               	decfsz	??_lcd_init& (0+255),f,c
  5558  001ED4  D7FC               	bra	u3797
  5559  001ED6  F000               	nop	
  5560                           
  5561                           ;iut_lcd.c: 114: PORTD &= 0x0f;
  5562  001ED8  0E0F               	movlw	15
  5563  001EDA  1683               	andwf	3971,f,c	;volatile
  5564                           
  5565                           ;iut_lcd.c: 115: PORTD |= 0b00110000;
  5566  001EDC  0E30               	movlw	48
  5567  001EDE  1283               	iorwf	3971,f,c	;volatile
  5568                           
  5569                           ;iut_lcd.c: 116: lcd_clock_e();
  5570  001EE0  EC79  F011         	call	_lcd_clock_e	;wreg free
  5571                           
  5572                           ;iut_lcd.c: 117: _delay(1200);
  5573  001EE4  0EF0               	movlw	240
  5574  001EE6                     u3807:
  5575  001EE6  D000               	nop2	
  5576  001EE8  2EE8               	decfsz	wreg,f,c
  5577  001EEA  D7FD               	bra	u3807
  5578                           
  5579                           ;iut_lcd.c: 119: PORTD &= 0x0f;
  5580  001EEC  0E0F               	movlw	15
  5581  001EEE  1683               	andwf	3971,f,c	;volatile
  5582                           
  5583                           ;iut_lcd.c: 120: PORTD |= 0b00110000;
  5584  001EF0  0E30               	movlw	48
  5585  001EF2  1283               	iorwf	3971,f,c	;volatile
  5586                           
  5587                           ;iut_lcd.c: 121: lcd_clock_e();
  5588  001EF4  EC79  F011         	call	_lcd_clock_e	;wreg free
  5589                           
  5590                           ;iut_lcd.c: 122: _delay(1200);
  5591  001EF8  0EF0               	movlw	240
  5592  001EFA                     u3817:
  5593  001EFA  D000               	nop2	
  5594  001EFC  2EE8               	decfsz	wreg,f,c
  5595  001EFE  D7FD               	bra	u3817
  5596                           
  5597                           ;iut_lcd.c: 124: PORTD &= 0x0f;
  5598  001F00  0E0F               	movlw	15
  5599  001F02  1683               	andwf	3971,f,c	;volatile
  5600                           
  5601                           ;iut_lcd.c: 125: PORTD |= 0b00100000;
  5602  001F04  8A83               	bsf	3971,5,c	;volatile
  5603                           
  5604                           ;iut_lcd.c: 126: lcd_clock_e();
  5605  001F06  EC79  F011         	call	_lcd_clock_e	;wreg free
  5606                           
  5607                           ;iut_lcd.c: 127: _delay(1200);
  5608  001F0A  0EF0               	movlw	240
  5609  001F0C                     u3827:
  5610  001F0C  D000               	nop2	
  5611  001F0E  2EE8               	decfsz	wreg,f,c
  5612  001F10  D7FD               	bra	u3827
  5613                           
  5614                           ;iut_lcd.c: 129: TRISD |= 0xf0;
  5615  001F12  0EF0               	movlw	240
  5616  001F14  1295               	iorwf	3989,f,c	;volatile
  5617                           
  5618                           ;iut_lcd.c: 131: lcd_write_cmd_busy(0x28);
  5619  001F16  0E28               	movlw	40
  5620  001F18  EC64  F011         	call	_lcd_write_cmd_busy
  5621                           
  5622                           ;iut_lcd.c: 132: lcd_write_cmd_busy(0x08);
  5623  001F1C  0E08               	movlw	8
  5624  001F1E  EC64  F011         	call	_lcd_write_cmd_busy
  5625                           
  5626                           ;iut_lcd.c: 133: lcd_clear();
  5627  001F22  EC87  F011         	call	_lcd_clear	;wreg free
  5628                           
  5629                           ;iut_lcd.c: 134: lcd_write_cmd_busy(0x06);
  5630  001F26  0E06               	movlw	6
  5631  001F28  EC64  F011         	call	_lcd_write_cmd_busy
  5632                           
  5633                           ;iut_lcd.c: 135: lcd_write_cmd_busy(0x0C);
  5634  001F2C  0E0C               	movlw	12
  5635  001F2E  EC64  F011         	call	_lcd_write_cmd_busy
  5636  001F32  0012               	return		;funcret
  5637  001F34                     __end_of_lcd_init:
  5638                           	opt stack 0
  5639                           tblptru	equ	0xFF8
  5640                           tblptrh	equ	0xFF7
  5641                           tblptrl	equ	0xFF6
  5642                           tablat	equ	0xFF5
  5643                           prodl	equ	0xFF3
  5644                           wreg	equ	0xFE8
  5645                           indf2	equ	0xFDF
  5646                           postinc2	equ	0xFDE
  5647                           postdec2	equ	0xFDD
  5648                           fsr2h	equ	0xFDA
  5649                           fsr2l	equ	0xFD9
  5650                           status	equ	0xFD8
  5651                           
  5652 ;; *************** function _lcd_clear *****************
  5653 ;; Defined at:
  5654 ;;		line 145 in file "iut_lcd.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;		None
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;		None
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      void 
  5661 ;; Registers used:
  5662 ;;		wreg, status,2, status,0, cstack
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5668 ;;      Params:         0       0       0       0       0       0       0       0       0
  5669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5671 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5672 ;;Total ram usage:        0 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:    3
  5675 ;; This function calls:
  5676 ;;		_lcd_write_cmd_busy
  5677 ;; This function is called by:
  5678 ;;		_lcd_init
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           	psect	text19
  5683  00230E                     __ptext19:
  5684                           	opt stack 0
  5685  00230E                     _lcd_clear:
  5686                           	opt stack 26
  5687                           
  5688                           ;iut_lcd.c: 146: lcd_write_cmd_busy(0x01);
  5689                           
  5690                           ;incstack = 0
  5691  00230E  0E01               	movlw	1
  5692  002310  EC64  F011         	call	_lcd_write_cmd_busy
  5693  002314  0012               	return		;funcret
  5694  002316                     __end_of_lcd_clear:
  5695                           	opt stack 0
  5696                           tblptru	equ	0xFF8
  5697                           tblptrh	equ	0xFF7
  5698                           tblptrl	equ	0xFF6
  5699                           tablat	equ	0xFF5
  5700                           prodl	equ	0xFF3
  5701                           wreg	equ	0xFE8
  5702                           indf2	equ	0xFDF
  5703                           postinc2	equ	0xFDE
  5704                           postdec2	equ	0xFDD
  5705                           fsr2h	equ	0xFDA
  5706                           fsr2l	equ	0xFD9
  5707                           status	equ	0xFD8
  5708                           
  5709 ;; *************** function _lcd_write_cmd_busy *****************
  5710 ;; Defined at:
  5711 ;;		line 764 in file "iut_lcd.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  c               1    wreg     unsigned char 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;  c               1    1[COMRAM] unsigned char 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		wreg, status,2, status,0, cstack
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5725 ;;      Params:         0       0       0       0       0       0       0       0       0
  5726 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5728 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5729 ;;Total ram usage:        1 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    2
  5732 ;; This function calls:
  5733 ;;		_lcd_busy
  5734 ;;		_lcd_write_cmd_data
  5735 ;; This function is called by:
  5736 ;;		_lcd_init
  5737 ;;		_lcd_clear
  5738 ;;		_lcd_position
  5739 ;;		_lcd_putc
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           	psect	text20
  5744  0022C8                     __ptext20:
  5745                           	opt stack 0
  5746  0022C8                     _lcd_write_cmd_busy:
  5747                           	opt stack 26
  5748                           
  5749                           ;incstack = 0
  5750                           ;lcd_write_cmd_busy@c stored from wreg
  5751  0022C8  6E02               	movwf	lcd_write_cmd_busy@c,c
  5752  0022CA                     l2377:
  5753  0022CA  EC7C  F010         	call	_lcd_busy	;wreg free
  5754  0022CE  0900               	iorlw	0
  5755  0022D0  A4D8               	btfss	status,2,c
  5756  0022D2  D7FB               	goto	l2377
  5757                           
  5758                           ;iut_lcd.c: 766: PORTDbits.RD1 = 0;
  5759  0022D4  9283               	bcf	3971,1,c	;volatile
  5760                           
  5761                           ;iut_lcd.c: 767: lcd_write_cmd_data(c);
  5762  0022D6  5002               	movf	lcd_write_cmd_busy@c,w,c
  5763  0022D8  ECD1  F010         	call	_lcd_write_cmd_data
  5764  0022DC  0012               	return		;funcret
  5765  0022DE                     __end_of_lcd_write_cmd_busy:
  5766                           	opt stack 0
  5767                           tblptru	equ	0xFF8
  5768                           tblptrh	equ	0xFF7
  5769                           tblptrl	equ	0xFF6
  5770                           tablat	equ	0xFF5
  5771                           prodl	equ	0xFF3
  5772                           wreg	equ	0xFE8
  5773                           indf2	equ	0xFDF
  5774                           postinc2	equ	0xFDE
  5775                           postdec2	equ	0xFDD
  5776                           fsr2h	equ	0xFDA
  5777                           fsr2l	equ	0xFD9
  5778                           status	equ	0xFD8
  5779                           
  5780 ;; *************** function _lcd_write_cmd_data *****************
  5781 ;; Defined at:
  5782 ;;		line 746 in file "iut_lcd.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  c               1    wreg     unsigned char 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  c               1    0[COMRAM] unsigned char 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  1    wreg      void 
  5789 ;; Registers used:
  5790 ;;		wreg, status,2, status,0, cstack
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5796 ;;      Params:         0       0       0       0       0       0       0       0       0
  5797 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5799 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5800 ;;Total ram usage:        1 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:    1
  5803 ;; This function calls:
  5804 ;;		_lcd_clock_e
  5805 ;; This function is called by:
  5806 ;;		_lcd_write_data_busy
  5807 ;;		_lcd_write_cmd_busy
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text21
  5812  0021A2                     __ptext21:
  5813                           	opt stack 0
  5814  0021A2                     _lcd_write_cmd_data:
  5815                           	opt stack 27
  5816                           
  5817                           ;incstack = 0
  5818                           ;lcd_write_cmd_data@c stored from wreg
  5819  0021A2  6E01               	movwf	lcd_write_cmd_data@c,c
  5820                           
  5821                           ;iut_lcd.c: 747: PORTDbits.RD2 = 0;
  5822  0021A4  9483               	bcf	3971,2,c	;volatile
  5823                           
  5824                           ;iut_lcd.c: 748: TRISD &= 0x0f;
  5825  0021A6  0E0F               	movlw	15
  5826  0021A8  1695               	andwf	3989,f,c	;volatile
  5827                           
  5828                           ;iut_lcd.c: 749: PORTD &= 0x0f;
  5829  0021AA  0E0F               	movlw	15
  5830  0021AC  1683               	andwf	3971,f,c	;volatile
  5831                           
  5832                           ;iut_lcd.c: 750: PORTD |= (c & 0xf0);
  5833  0021AE  5001               	movf	lcd_write_cmd_data@c,w,c
  5834  0021B0  0BF0               	andlw	240
  5835  0021B2  1283               	iorwf	3971,f,c	;volatile
  5836                           
  5837                           ;iut_lcd.c: 751: lcd_clock_e();
  5838  0021B4  EC79  F011         	call	_lcd_clock_e	;wreg free
  5839                           
  5840                           ;iut_lcd.c: 752: PORTD &= 0x0f;
  5841  0021B8  0E0F               	movlw	15
  5842  0021BA  1683               	andwf	3971,f,c	;volatile
  5843                           
  5844                           ;iut_lcd.c: 753: PORTD |= ((c << 4)&0xf0);
  5845  0021BC  3801               	swapf	lcd_write_cmd_data@c,w,c
  5846  0021BE  0BF0               	andlw	240
  5847  0021C0  0BF0               	andlw	240
  5848  0021C2  1283               	iorwf	3971,f,c	;volatile
  5849                           
  5850                           ;iut_lcd.c: 754: lcd_clock_e();
  5851  0021C4  EC79  F011         	call	_lcd_clock_e	;wreg free
  5852                           
  5853                           ;iut_lcd.c: 755: TRISD |= 0xf0;
  5854  0021C8  0EF0               	movlw	240
  5855  0021CA  1295               	iorwf	3989,f,c	;volatile
  5856  0021CC  0012               	return		;funcret
  5857  0021CE                     __end_of_lcd_write_cmd_data:
  5858                           	opt stack 0
  5859                           tblptru	equ	0xFF8
  5860                           tblptrh	equ	0xFF7
  5861                           tblptrl	equ	0xFF6
  5862                           tablat	equ	0xFF5
  5863                           prodl	equ	0xFF3
  5864                           wreg	equ	0xFE8
  5865                           indf2	equ	0xFDF
  5866                           postinc2	equ	0xFDE
  5867                           postdec2	equ	0xFDD
  5868                           fsr2h	equ	0xFDA
  5869                           fsr2l	equ	0xFD9
  5870                           status	equ	0xFD8
  5871                           
  5872 ;; *************** function _lcd_busy *****************
  5873 ;; Defined at:
  5874 ;;		line 770 in file "iut_lcd.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  1    wreg      unsigned char 
  5881 ;; Registers used:
  5882 ;;		wreg, cstack
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5888 ;;      Params:         0       0       0       0       0       0       0       0       0
  5889 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5891 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5892 ;;Total ram usage:        0 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:    1
  5895 ;; This function calls:
  5896 ;;		_lcd_clock_e
  5897 ;; This function is called by:
  5898 ;;		_lcd_write_data_busy
  5899 ;;		_lcd_write_cmd_busy
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text22
  5904  0020F8                     __ptext22:
  5905                           	opt stack 0
  5906  0020F8                     _lcd_busy:
  5907                           	opt stack 27
  5908                           
  5909                           ;iut_lcd.c: 771: PORTDbits.RD2 = 1;
  5910                           
  5911                           ;incstack = 0
  5912  0020F8  8483               	bsf	3971,2,c	;volatile
  5913                           
  5914                           ;iut_lcd.c: 772: PORTDbits.RD1 = 0;
  5915  0020FA  9283               	bcf	3971,1,c	;volatile
  5916                           
  5917                           ;iut_lcd.c: 773: __nop(); __nop(); __nop();;
  5918  0020FC  F000               	nop	
  5919  0020FE  F000               	nop	
  5920  002100  F000               	nop	
  5921                           
  5922                           ;iut_lcd.c: 774: PORTDbits.RD0 = 1;
  5923  002102  8083               	bsf	3971,0,c	;volatile
  5924                           
  5925                           ;iut_lcd.c: 775: __nop(); __nop(); __nop();;
  5926  002104  F000               	nop	
  5927  002106  F000               	nop	
  5928  002108  F000               	nop	
  5929                           
  5930                           ;iut_lcd.c: 776: if (PORTD & 0x80) {
  5931  00210A  AE83               	btfss	3971,7,c	;volatile
  5932  00210C  D009               	goto	l323
  5933                           
  5934                           ;iut_lcd.c: 777: PORTDbits.RD0 = 0;
  5935  00210E  9083               	bcf	3971,0,c	;volatile
  5936                           
  5937                           ;iut_lcd.c: 778: __nop(); __nop(); __nop();;
  5938  002110  F000               	nop	
  5939  002112  F000               	nop	
  5940  002114  F000               	nop	
  5941                           
  5942                           ;iut_lcd.c: 779: lcd_clock_e();
  5943  002116  EC79  F011         	call	_lcd_clock_e	;wreg free
  5944                           
  5945                           ;iut_lcd.c: 780: PORTDbits.RD2 = 0;
  5946  00211A  9483               	bcf	3971,2,c	;volatile
  5947                           
  5948                           ;iut_lcd.c: 781: return 1;
  5949  00211C  0E01               	movlw	1
  5950                           
  5951                           ;iut_lcd.c: 782: } else {
  5952  00211E  0012               	return	
  5953  002120                     l323:
  5954                           
  5955                           ;iut_lcd.c: 783: PORTDbits.RD0 = 0;
  5956  002120  9083               	bcf	3971,0,c	;volatile
  5957                           
  5958                           ;iut_lcd.c: 784: __nop(); __nop(); __nop();;
  5959  002122  F000               	nop	
  5960  002124  F000               	nop	
  5961  002126  F000               	nop	
  5962                           
  5963                           ;iut_lcd.c: 785: lcd_clock_e();
  5964  002128  EC79  F011         	call	_lcd_clock_e	;wreg free
  5965                           
  5966                           ;iut_lcd.c: 786: PORTDbits.RD2 = 0;
  5967  00212C  9483               	bcf	3971,2,c	;volatile
  5968                           
  5969                           ;iut_lcd.c: 787: return 0;
  5970  00212E  0E00               	movlw	0
  5971  002130  0012               	return	
  5972  002132                     __end_of_lcd_busy:
  5973                           	opt stack 0
  5974                           tblptru	equ	0xFF8
  5975                           tblptrh	equ	0xFF7
  5976                           tblptrl	equ	0xFF6
  5977                           tablat	equ	0xFF5
  5978                           prodl	equ	0xFF3
  5979                           wreg	equ	0xFE8
  5980                           indf2	equ	0xFDF
  5981                           postinc2	equ	0xFDE
  5982                           postdec2	equ	0xFDD
  5983                           fsr2h	equ	0xFDA
  5984                           fsr2l	equ	0xFD9
  5985                           status	equ	0xFD8
  5986                           
  5987 ;; *************** function _lcd_clock_e *****************
  5988 ;; Defined at:
  5989 ;;		line 791 in file "iut_lcd.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;		None
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;		None
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  1    wreg      void 
  5996 ;; Registers used:
  5997 ;;		None
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6003 ;;      Params:         0       0       0       0       0       0       0       0       0
  6004 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6006 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6007 ;;Total ram usage:        0 bytes
  6008 ;; Hardware stack levels used:    1
  6009 ;; This function calls:
  6010 ;;		Nothing
  6011 ;; This function is called by:
  6012 ;;		_lcd_init
  6013 ;;		_lcd_write_cmd_data
  6014 ;;		_lcd_busy
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text23
  6019  0022F2                     __ptext23:
  6020                           	opt stack 0
  6021  0022F2                     _lcd_clock_e:
  6022                           	opt stack 27
  6023                           
  6024                           ;iut_lcd.c: 792: PORTDbits.RD0 = 1;
  6025                           
  6026                           ;incstack = 0
  6027  0022F2  8083               	bsf	3971,0,c	;volatile
  6028                           
  6029                           ;iut_lcd.c: 793: __nop(); __nop(); __nop();;
  6030  0022F4  F000               	nop	
  6031  0022F6  F000               	nop	
  6032  0022F8  F000               	nop	
  6033                           
  6034                           ;iut_lcd.c: 794: PORTDbits.RD0 = 0;
  6035  0022FA  9083               	bcf	3971,0,c	;volatile
  6036                           
  6037                           ;iut_lcd.c: 795: __nop(); __nop(); __nop();;
  6038  0022FC  F000               	nop	
  6039  0022FE  F000               	nop	
  6040  002300  F000               	nop	
  6041  002302  0012               	return		;funcret
  6042  002304                     __end_of_lcd_clock_e:
  6043                           	opt stack 0
  6044                           tblptru	equ	0xFF8
  6045                           tblptrh	equ	0xFF7
  6046                           tblptrl	equ	0xFF6
  6047                           tablat	equ	0xFF5
  6048                           prodl	equ	0xFF3
  6049                           wreg	equ	0xFE8
  6050                           indf2	equ	0xFDF
  6051                           postinc2	equ	0xFDE
  6052                           postdec2	equ	0xFDD
  6053                           fsr2h	equ	0xFDA
  6054                           fsr2l	equ	0xFD9
  6055                           status	equ	0xFD8
  6056                           
  6057 ;; *************** function _adc_read *****************
  6058 ;; Defined at:
  6059 ;;		line 113 in file "iut_adc.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  numero_canal    1    wreg     unsigned char 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  numero_canal    1    4[COMRAM] unsigned char 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  2    0[COMRAM] int 
  6066 ;; Registers used:
  6067 ;;		wreg, status,2, status,0
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6073 ;;      Params:         2       0       0       0       0       0       0       0       0
  6074 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6075 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6076 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6077 ;;Total ram usage:        5 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_main
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text24
  6087  002222                     __ptext24:
  6088                           	opt stack 0
  6089  002222                     _adc_read:
  6090                           	opt stack 30
  6091                           
  6092                           ;incstack = 0
  6093                           ;adc_read@numero_canal stored from wreg
  6094  002222  6E05               	movwf	adc_read@numero_canal,c
  6095                           
  6096                           ;iut_adc.c: 115: ADCON0 = ((numero_canal & 0x07) << 2) | 0x01;
  6097  002224  C005  F003         	movff	adc_read@numero_canal,??_adc_read
  6098  002228  0E07               	movlw	7
  6099  00222A  1603               	andwf	??_adc_read,f,c
  6100  00222C  90D8               	bcf	status,0,c
  6101  00222E  3603               	rlcf	??_adc_read,f,c
  6102  002230  90D8               	bcf	status,0,c
  6103  002232  3403               	rlcf	??_adc_read,w,c
  6104  002234  0901               	iorlw	1
  6105  002236  6EC2               	movwf	4034,c	;volatile
  6106                           
  6107                           ;iut_adc.c: 118: ADCON0bits.GO = 1;
  6108  002238  82C2               	bsf	4034,1,c	;volatile
  6109  00223A                     l63:
  6110  00223A  B2C2               	btfsc	4034,1,c	;volatile
  6111  00223C  D7FE               	goto	l63
  6112                           
  6113                           ;iut_adc.c: 124: return (((unsigned int) ADRESH) << 8) | ADRESL;
  6114  00223E  50C4               	movf	4036,w,c	;volatile
  6115  002240  6E03               	movwf	??_adc_read& (0+255),c
  6116  002242  50C3               	movf	4035,w,c	;volatile
  6117  002244  6E01               	movwf	?_adc_read,c
  6118  002246  C003  F002         	movff	??_adc_read,?_adc_read+1
  6119  00224A  0012               	return	
  6120  00224C                     __end_of_adc_read:
  6121                           	opt stack 0
  6122                           tblptru	equ	0xFF8
  6123                           tblptrh	equ	0xFF7
  6124                           tblptrl	equ	0xFF6
  6125                           tablat	equ	0xFF5
  6126                           prodl	equ	0xFF3
  6127                           wreg	equ	0xFE8
  6128                           indf2	equ	0xFDF
  6129                           postinc2	equ	0xFDE
  6130                           postdec2	equ	0xFDD
  6131                           fsr2h	equ	0xFDA
  6132                           fsr2l	equ	0xFD9
  6133                           status	equ	0xFD8
  6134                           
  6135 ;; *************** function _adc_init *****************
  6136 ;; Defined at:
  6137 ;;		line 48 in file "iut_adc.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;  numero_derni    1    wreg     unsigned char 
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  numero_derni    1    0[COMRAM] unsigned char 
  6142 ;; Return value:  Size  Location     Type
  6143 ;;                  1    wreg      void 
  6144 ;; Registers used:
  6145 ;;		wreg, status,2, status,0
  6146 ;; Tracked objects:
  6147 ;;		On entry : 0/0
  6148 ;;		On exit  : 0/0
  6149 ;;		Unchanged: 0/0
  6150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6151 ;;      Params:         0       0       0       0       0       0       0       0       0
  6152 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6154 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6155 ;;Total ram usage:        1 bytes
  6156 ;; Hardware stack levels used:    1
  6157 ;; This function calls:
  6158 ;;		Nothing
  6159 ;; This function is called by:
  6160 ;;		_main
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text25
  6165  001DF6                     __ptext25:
  6166                           	opt stack 0
  6167  001DF6                     _adc_init:
  6168                           	opt stack 30
  6169                           
  6170                           ;incstack = 0
  6171                           ;adc_init@numero_dernier_canal stored from wreg
  6172  001DF6  6E01               	movwf	adc_init@numero_dernier_canal,c
  6173                           
  6174                           ;iut_adc.c: 51: switch (numero_dernier_canal) {
  6175  001DF8  D033               	goto	l2779
  6176  001DFA                     l2739:
  6177                           
  6178                           ;iut_adc.c: 57: ADCON1 = 0xD;
  6179  001DFA  0E0D               	movlw	13
  6180  001DFC  6EC1               	movwf	4033,c	;volatile
  6181                           
  6182                           ;iut_adc.c: 58: TRISA = TRISA | 0b00000011;
  6183  001DFE  5092               	movf	3986,w,c	;volatile
  6184  001E00  0903               	iorlw	3
  6185  001E02  D02C               	goto	L19
  6186  001E04                     l2743:
  6187                           
  6188                           ;iut_adc.c: 61: ADCON1 = 0xC;
  6189  001E04  0E0C               	movlw	12
  6190  001E06  6EC1               	movwf	4033,c	;volatile
  6191                           
  6192                           ;iut_adc.c: 62: TRISA = TRISA | 0b00000111;
  6193  001E08  5092               	movf	3986,w,c	;volatile
  6194  001E0A  0907               	iorlw	7
  6195  001E0C  D027               	goto	L19
  6196  001E0E                     l2747:
  6197                           
  6198                           ;iut_adc.c: 65: ADCON1 = 0xB;
  6199  001E0E  0E0B               	movlw	11
  6200  001E10  6EC1               	movwf	4033,c	;volatile
  6201                           
  6202                           ;iut_adc.c: 66: TRISA = TRISA | 0b00001111;
  6203  001E12  5092               	movf	3986,w,c	;volatile
  6204  001E14  090F               	iorlw	15
  6205  001E16  D022               	goto	L19
  6206  001E18                     l2751:
  6207                           
  6208                           ;iut_adc.c: 69: ADCON1 = 0xA;
  6209  001E18  0E0A               	movlw	10
  6210  001E1A  6EC1               	movwf	4033,c	;volatile
  6211                           
  6212                           ;iut_adc.c: 70: TRISA = TRISA | 0b00101111;
  6213  001E1C  5092               	movf	3986,w,c	;volatile
  6214  001E1E  092F               	iorlw	47
  6215  001E20  D01D               	goto	L19
  6216  001E22                     l2755:
  6217                           
  6218                           ;iut_adc.c: 73: ADCON1 = 0x9;
  6219  001E22  0E09               	movlw	9
  6220  001E24  6EC1               	movwf	4033,c	;volatile
  6221                           
  6222                           ;iut_adc.c: 74: TRISA = TRISA | 0b00101111;
  6223  001E26  5092               	movf	3986,w,c	;volatile
  6224  001E28  092F               	iorlw	47
  6225  001E2A  6E92               	movwf	3986,c	;volatile
  6226                           
  6227                           ;iut_adc.c: 75: TRISE = TRISE | 0b00000001;
  6228  001E2C  5096               	movf	3990,w,c	;volatile
  6229  001E2E  0901               	iorlw	1
  6230  001E30  D00F               	goto	L21
  6231  001E32                     l2761:
  6232                           
  6233                           ;iut_adc.c: 78: ADCON1 = 0x8;
  6234  001E32  0E08               	movlw	8
  6235  001E34  6EC1               	movwf	4033,c	;volatile
  6236                           
  6237                           ;iut_adc.c: 79: TRISA = TRISA | 0b00101111;
  6238  001E36  5092               	movf	3986,w,c	;volatile
  6239  001E38  092F               	iorlw	47
  6240  001E3A  6E92               	movwf	3986,c	;volatile
  6241                           
  6242                           ;iut_adc.c: 80: TRISE = TRISE | 0b00000011;
  6243  001E3C  5096               	movf	3990,w,c	;volatile
  6244  001E3E  0903               	iorlw	3
  6245  001E40  D007               	goto	L21
  6246  001E42                     l2767:
  6247                           
  6248                           ;iut_adc.c: 83: ADCON1 = 0x7;
  6249  001E42  0E07               	movlw	7
  6250  001E44  6EC1               	movwf	4033,c	;volatile
  6251                           
  6252                           ;iut_adc.c: 84: TRISA = TRISA | 0b00101111;
  6253  001E46  5092               	movf	3986,w,c	;volatile
  6254  001E48  092F               	iorlw	47
  6255  001E4A  6E92               	movwf	3986,c	;volatile
  6256                           
  6257                           ;iut_adc.c: 85: TRISE = TRISE | 0b00000111;
  6258  001E4C  5096               	movf	3990,w,c	;volatile
  6259  001E4E  0907               	iorlw	7
  6260  001E50                     L21:
  6261  001E50  6E96               	movwf	3990,c	;volatile
  6262                           
  6263                           ;iut_adc.c: 86: break;
  6264  001E52  D020               	goto	l2781
  6265  001E54                     l2773:
  6266                           
  6267                           ;iut_adc.c: 88: ADCON1 = 0xE;
  6268  001E54  0E0E               	movlw	14
  6269  001E56  6EC1               	movwf	4033,c	;volatile
  6270                           
  6271                           ;iut_adc.c: 89: TRISA = TRISA | 0b00000001;
  6272  001E58  5092               	movf	3986,w,c	;volatile
  6273  001E5A  0901               	iorlw	1
  6274  001E5C                     L19:
  6275  001E5C  6E92               	movwf	3986,c	;volatile
  6276                           
  6277                           ;iut_adc.c: 91: }
  6278                           
  6279                           ;iut_adc.c: 90: break;
  6280  001E5E  D01A               	goto	l2781
  6281  001E60                     l2779:
  6282  001E60  5001               	movf	adc_init@numero_dernier_canal,w,c
  6283                           
  6284                           ; Switch size 1, requested type "space"
  6285                           ; Number of cases is 8, Range of values is 0 to 7
  6286                           ; switch strategies available:
  6287                           ; Name         Instructions Cycles
  6288                           ; simple_byte           25    13 (average)
  6289                           ;	Chosen strategy is simple_byte
  6290  001E62  0A00               	xorlw	0	; case 0
  6291  001E64  B4D8               	btfsc	status,2,c
  6292  001E66  D7F6               	goto	l2773
  6293  001E68  0A01               	xorlw	1	; case 1
  6294  001E6A  B4D8               	btfsc	status,2,c
  6295  001E6C  D7C6               	goto	l2739
  6296  001E6E  0A03               	xorlw	3	; case 2
  6297  001E70  B4D8               	btfsc	status,2,c
  6298  001E72  D7C8               	goto	l2743
  6299  001E74  0A01               	xorlw	1	; case 3
  6300  001E76  B4D8               	btfsc	status,2,c
  6301  001E78  D7CA               	goto	l2747
  6302  001E7A  0A07               	xorlw	7	; case 4
  6303  001E7C  B4D8               	btfsc	status,2,c
  6304  001E7E  D7CC               	goto	l2751
  6305  001E80  0A01               	xorlw	1	; case 5
  6306  001E82  B4D8               	btfsc	status,2,c
  6307  001E84  D7CE               	goto	l2755
  6308  001E86  0A03               	xorlw	3	; case 6
  6309  001E88  B4D8               	btfsc	status,2,c
  6310  001E8A  D7D3               	goto	l2761
  6311  001E8C  0A01               	xorlw	1	; case 7
  6312  001E8E  B4D8               	btfsc	status,2,c
  6313  001E90  D7D8               	goto	l2767
  6314  001E92  D7E0               	goto	l2773
  6315  001E94                     l2781:
  6316                           
  6317                           ;iut_adc.c: 96: ADCON2 = 0b10100110;
  6318  001E94  0EA6               	movlw	166
  6319  001E96  6EC0               	movwf	4032,c	;volatile
  6320                           
  6321                           ;iut_adc.c: 99: ADCON0bits.ADON = 1;
  6322  001E98  80C2               	bsf	4034,0,c	;volatile
  6323  001E9A  0012               	return		;funcret
  6324  001E9C                     __end_of_adc_init:
  6325                           	opt stack 0
  6326                           tblptru	equ	0xFF8
  6327                           tblptrh	equ	0xFF7
  6328                           tblptrl	equ	0xFF6
  6329                           tablat	equ	0xFF5
  6330                           prodl	equ	0xFF3
  6331                           wreg	equ	0xFE8
  6332                           indf2	equ	0xFDF
  6333                           postinc2	equ	0xFDE
  6334                           postdec2	equ	0xFDD
  6335                           fsr2h	equ	0xFDA
  6336                           fsr2l	equ	0xFD9
  6337                           status	equ	0xFD8
  6338                           
  6339 ;; *************** function ___awtoft *****************
  6340 ;; Defined at:
  6341 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  c               2    8[COMRAM] int 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  sign            1   11[COMRAM] unsigned char 
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  3    8[COMRAM] float 
  6348 ;; Registers used:
  6349 ;;		wreg, status,2, status,0, cstack
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6355 ;;      Params:         3       0       0       0       0       0       0       0       0
  6356 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6357 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6358 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6359 ;;Total ram usage:        4 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; Hardware stack levels required when called:    1
  6362 ;; This function calls:
  6363 ;;		___ftpack
  6364 ;; This function is called by:
  6365 ;;		_main
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text26
  6370  00216A                     __ptext26:
  6371                           	opt stack 0
  6372  00216A                     ___awtoft:
  6373                           	opt stack 29
  6374                           
  6375                           ;incstack = 0
  6376  00216A  0E00               	movlw	0
  6377  00216C  6E0C               	movwf	___awtoft@sign,c
  6378  00216E  AE0A               	btfss	___awtoft@c+1,7,c
  6379  002170  D006               	goto	l3427
  6380  002172  6C09               	negf	___awtoft@c,c
  6381  002174  1E0A               	comf	___awtoft@c+1,f,c
  6382  002176  B0D8               	btfsc	status,0,c
  6383  002178  2A0A               	incf	___awtoft@c+1,f,c
  6384  00217A  0E01               	movlw	1
  6385  00217C  6E0C               	movwf	___awtoft@sign,c
  6386  00217E                     l3427:
  6387  00217E  C009  F001         	movff	___awtoft@c,___ftpack@arg
  6388  002182  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  6389  002186  6A03               	clrf	___ftpack@arg+2,c
  6390  002188  0E8E               	movlw	142
  6391  00218A  6E04               	movwf	___ftpack@exp,c
  6392  00218C  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  6393  002190  ECA4  F00E         	call	___ftpack	;wreg free
  6394  002194  C001  F009         	movff	?___ftpack,?___awtoft
  6395  002198  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  6396  00219C  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  6397  0021A0  0012               	return	
  6398  0021A2                     __end_of___awtoft:
  6399                           	opt stack 0
  6400                           tblptru	equ	0xFF8
  6401                           tblptrh	equ	0xFF7
  6402                           tblptrl	equ	0xFF6
  6403                           tablat	equ	0xFF5
  6404                           prodl	equ	0xFF3
  6405                           wreg	equ	0xFE8
  6406                           indf2	equ	0xFDF
  6407                           postinc2	equ	0xFDE
  6408                           postdec2	equ	0xFDD
  6409                           fsr2h	equ	0xFDA
  6410                           fsr2l	equ	0xFD9
  6411                           status	equ	0xFD8
  6412                           
  6413 ;; *************** function ___ftpack *****************
  6414 ;; Defined at:
  6415 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  arg             3    0[COMRAM] unsigned um
  6418 ;;  exp             1    3[COMRAM] unsigned char 
  6419 ;;  sign            1    4[COMRAM] unsigned char 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;		None
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  3    0[COMRAM] float 
  6424 ;; Registers used:
  6425 ;;		wreg, status,2, status,0
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6431 ;;      Params:         5       0       0       0       0       0       0       0       0
  6432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6433 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6434 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6435 ;;Total ram usage:        8 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		___awtoft
  6441 ;;		___ftadd
  6442 ;;		___ftdiv
  6443 ;;		___ftmul
  6444 ;;		___lwtoft
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           	psect	text27
  6449  001D48                     __ptext27:
  6450                           	opt stack 0
  6451  001D48                     ___ftpack:
  6452                           	opt stack 28
  6453                           
  6454                           ;incstack = 0
  6455  001D48  5004               	movf	___ftpack@exp,w,c
  6456  001D4A  B4D8               	btfsc	status,2,c
  6457  001D4C  D005               	goto	l2401
  6458  001D4E  5001               	movf	___ftpack@arg,w,c
  6459  001D50  1002               	iorwf	___ftpack@arg+1,w,c
  6460  001D52  1003               	iorwf	___ftpack@arg+2,w,c
  6461  001D54  A4D8               	btfss	status,2,c
  6462  001D56  D00C               	goto	l2407
  6463  001D58                     l2401:
  6464  001D58  0E00               	movlw	0
  6465  001D5A  6E01               	movwf	?___ftpack,c
  6466  001D5C  0E00               	movlw	0
  6467  001D5E  6E02               	movwf	?___ftpack+1,c
  6468  001D60  0E00               	movlw	0
  6469  001D62  6E03               	movwf	?___ftpack+2,c
  6470  001D64  0012               	return	
  6471  001D66                     l2405:
  6472  001D66  2A04               	incf	___ftpack@exp,f,c
  6473  001D68  90D8               	bcf	status,0,c
  6474  001D6A  3203               	rrcf	___ftpack@arg+2,f,c
  6475  001D6C  3202               	rrcf	___ftpack@arg+1,f,c
  6476  001D6E  3201               	rrcf	___ftpack@arg,f,c
  6477  001D70                     l2407:
  6478  001D70  0E00               	movlw	0
  6479  001D72  1401               	andwf	___ftpack@arg,w,c
  6480  001D74  6E06               	movwf	??___ftpack& (0+255),c
  6481  001D76  0E00               	movlw	0
  6482  001D78  1402               	andwf	___ftpack@arg+1,w,c
  6483  001D7A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6484  001D7C  0EFE               	movlw	254
  6485  001D7E  1403               	andwf	___ftpack@arg+2,w,c
  6486  001D80  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6487  001D82  5006               	movf	??___ftpack,w,c
  6488  001D84  1007               	iorwf	??___ftpack+1,w,c
  6489  001D86  1008               	iorwf	??___ftpack+2,w,c
  6490  001D88  B4D8               	btfsc	status,2,c
  6491  001D8A  D00C               	goto	l2413
  6492  001D8C  D7EC               	goto	l2405
  6493  001D8E                     l2409:
  6494  001D8E  2A04               	incf	___ftpack@exp,f,c
  6495  001D90  0E01               	movlw	1
  6496  001D92  2601               	addwf	___ftpack@arg,f,c
  6497  001D94  0E00               	movlw	0
  6498  001D96  2202               	addwfc	___ftpack@arg+1,f,c
  6499  001D98  0E00               	movlw	0
  6500  001D9A  2203               	addwfc	___ftpack@arg+2,f,c
  6501  001D9C  90D8               	bcf	status,0,c
  6502  001D9E  3203               	rrcf	___ftpack@arg+2,f,c
  6503  001DA0  3202               	rrcf	___ftpack@arg+1,f,c
  6504  001DA2  3201               	rrcf	___ftpack@arg,f,c
  6505  001DA4                     l2413:
  6506  001DA4  0E00               	movlw	0
  6507  001DA6  1401               	andwf	___ftpack@arg,w,c
  6508  001DA8  6E06               	movwf	??___ftpack& (0+255),c
  6509  001DAA  0E00               	movlw	0
  6510  001DAC  1402               	andwf	___ftpack@arg+1,w,c
  6511  001DAE  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6512  001DB0  0EFF               	movlw	255
  6513  001DB2  1403               	andwf	___ftpack@arg+2,w,c
  6514  001DB4  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6515  001DB6  5006               	movf	??___ftpack,w,c
  6516  001DB8  1007               	iorwf	??___ftpack+1,w,c
  6517  001DBA  1008               	iorwf	??___ftpack+2,w,c
  6518  001DBC  B4D8               	btfsc	status,2,c
  6519  001DBE  D006               	goto	l2417
  6520  001DC0  D7E6               	goto	l2409
  6521  001DC2                     l2415:
  6522  001DC2  0604               	decf	___ftpack@exp,f,c
  6523  001DC4  90D8               	bcf	status,0,c
  6524  001DC6  3601               	rlcf	___ftpack@arg,f,c
  6525  001DC8  3602               	rlcf	___ftpack@arg+1,f,c
  6526  001DCA  3603               	rlcf	___ftpack@arg+2,f,c
  6527  001DCC                     l2417:
  6528  001DCC  BE02               	btfsc	___ftpack@arg+1,7,c
  6529  001DCE  D003               	goto	l706
  6530  001DD0  0E02               	movlw	2
  6531  001DD2  6004               	cpfslt	___ftpack@exp,c
  6532  001DD4  D7F6               	goto	l2415
  6533  001DD6                     l706:
  6534  001DD6  A004               	btfss	___ftpack@exp,0,c
  6535  001DD8  9E02               	bcf	___ftpack@arg+1,7,c
  6536  001DDA  90D8               	bcf	status,0,c
  6537  001DDC  3204               	rrcf	___ftpack@exp,f,c
  6538  001DDE  5004               	movf	___ftpack@exp,w,c
  6539  001DE0  1203               	iorwf	___ftpack@arg+2,f,c
  6540  001DE2  5005               	movf	___ftpack@sign,w,c
  6541  001DE4  A4D8               	btfss	status,2,c
  6542  001DE6  8E03               	bsf	___ftpack@arg+2,7,c
  6543  001DE8  C001  F001         	movff	___ftpack@arg,?___ftpack
  6544  001DEC  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6545  001DF0  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6546  001DF4  0012               	return	
  6547  001DF6                     __end_of___ftpack:
  6548                           	opt stack 0
  6549                           tblptru	equ	0xFF8
  6550                           tblptrh	equ	0xFF7
  6551                           tblptrl	equ	0xFF6
  6552                           tablat	equ	0xFF5
  6553                           prodl	equ	0xFF3
  6554                           wreg	equ	0xFE8
  6555                           indf2	equ	0xFDF
  6556                           postinc2	equ	0xFDE
  6557                           postdec2	equ	0xFDD
  6558                           fsr2h	equ	0xFDA
  6559                           fsr2l	equ	0xFD9
  6560                           status	equ	0xFD8
  6561                           tblptru	equ	0xFF8
  6562                           tblptrh	equ	0xFF7
  6563                           tblptrl	equ	0xFF6
  6564                           tablat	equ	0xFF5
  6565                           prodl	equ	0xFF3
  6566                           wreg	equ	0xFE8
  6567                           indf2	equ	0xFDF
  6568                           postinc2	equ	0xFDE
  6569                           postdec2	equ	0xFDD
  6570                           fsr2h	equ	0xFDA
  6571                           fsr2l	equ	0xFD9
  6572                           status	equ	0xFD8
  6573                           
  6574                           	psect	rparam
  6575  0000                     tblptru	equ	0xFF8
  6576                           tblptrh	equ	0xFF7
  6577                           tblptrl	equ	0xFF6
  6578                           tablat	equ	0xFF5
  6579                           prodl	equ	0xFF3
  6580                           wreg	equ	0xFE8
  6581                           indf2	equ	0xFDF
  6582                           postinc2	equ	0xFDE
  6583                           postdec2	equ	0xFDD
  6584                           fsr2h	equ	0xFDA
  6585                           fsr2l	equ	0xFD9
  6586                           status	equ	0xFD8


Data Sizes:
    Strings     36
    Constant    17
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     75      75
    BANK0           160     89      89
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_printf@q	PTR unsigned char  size(2) Largest target is 33
		 -> lcd_printf@buf(BANK0[33]), 

    lcd_printf@ramstring	PTR unsigned char  size(2) Largest target is 0

    lcd_printf@romstring	PTR far unsigned char  size(2) Largest target is 0

    lcd_printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[7]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[16]), 

    lcd_printf@ap	PTR void [1] size(2) Largest target is 1
		 -> ?_lcd_printf(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_printf
    _pwm_setdc2->___fttol
    _pwm_setdc1->___fttol
    _lcd_printf->___ftdiv
    _lcd_repete_n->_lcd_write_data_busy
    _lcd_putc->_lcd_position
    _lcd_write_data_busy->_lcd_write_cmd_data
    _lcd_position->_lcd_write_cmd_busy
    ___lwtoft->___ftpack
    ___ftneg->___awtoft
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftneg
    _lcd_init->_lcd_write_cmd_busy
    _lcd_clear->_lcd_write_cmd_busy
    _lcd_write_cmd_busy->_lcd_write_cmd_data
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_lcd_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   41259
                                             74 COMRAM     1     1      0
                                             67 BANK0     22    22      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           _adc_init
                           _adc_read
                           _lcd_init
                       _lcd_position
                         _lcd_printf
                           _pwm_init
                         _pwm_setdc1
                         _pwm_setdc2
 ---------------------------------------------------------------------------------
 (1) _pwm_setdc2                                           4     2      2     120
                                             15 COMRAM     4     2      2
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwm_setdc1                                           4     2      2     120
                                             15 COMRAM     4     2      2
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             2     1      1     164
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _lcd_printf                                          84    74     10   23958
                                             57 COMRAM    17     7     10
                                              0 BANK0     67    67      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lwtoft
                           _lcd_putc
                       _lcd_repete_n
                _lcd_write_data_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_repete_n                                         2     1      1     794
                                              2 COMRAM     2     1      1
                _lcd_write_data_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0     931
                                              5 COMRAM     1     1      0
                       _lcd_position
                 _lcd_write_cmd_busy
                _lcd_write_data_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data_busy                                  1     1      0      66
                                              1 COMRAM     1     1      0
                           _lcd_busy
                 _lcd_write_cmd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_position                                         3     2      1     667
                                              2 COMRAM     3     2      1
                 _lcd_write_cmd_busy
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2679
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     860
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     425
                                             12 COMRAM     3     0      3
                           ___awtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3565
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     440
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3367
                                             42 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4205
                                             15 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     132
                                              2 COMRAM     1     1      0
                          _lcd_clear
                        _lcd_clock_e
                 _lcd_write_cmd_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0      66
                 _lcd_write_cmd_busy
 ---------------------------------------------------------------------------------
 (3) _lcd_write_cmd_busy                                   1     1      0      66
                                              1 COMRAM     1     1      0
                           _lcd_busy
                 _lcd_write_cmd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_write_cmd_data                                   1     1      0      44
                                              0 COMRAM     1     1      0
                        _lcd_clock_e
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             0     0      0       0
                        _lcd_clock_e
 ---------------------------------------------------------------------------------
 (4) _lcd_clock_e                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2900
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2505
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
   _adc_init
   _adc_read
   _lcd_init
     _lcd_clear
       _lcd_write_cmd_busy
         _lcd_busy
           _lcd_clock_e
         _lcd_write_cmd_data
           _lcd_clock_e
     _lcd_clock_e
     _lcd_write_cmd_busy
       _lcd_busy
         _lcd_clock_e
       _lcd_write_cmd_data
         _lcd_clock_e
   _lcd_position
     _lcd_write_cmd_busy
       _lcd_busy
         _lcd_clock_e
       _lcd_write_cmd_data
         _lcd_clock_e
   _lcd_printf
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
     ___lldiv
     ___llmod
     ___lwtoft
       ___ftpack
     _lcd_putc
       _lcd_position
         _lcd_write_cmd_busy
           _lcd_busy
             _lcd_clock_e
           _lcd_write_cmd_data
             _lcd_clock_e
       _lcd_write_cmd_busy
         _lcd_busy
           _lcd_clock_e
         _lcd_write_cmd_data
           _lcd_clock_e
       _lcd_write_data_busy
         _lcd_busy
           _lcd_clock_e
         _lcd_write_cmd_data
           _lcd_clock_e
     _lcd_repete_n
       _lcd_write_data_busy
         _lcd_busy
           _lcd_clock_e
         _lcd_write_cmd_data
           _lcd_clock_e
     _lcd_write_data_busy
       _lcd_busy
         _lcd_clock_e
       _lcd_write_cmd_data
         _lcd_clock_e
   _pwm_init
   _pwm_setdc1
     ___fttol (ARG)
   _pwm_setdc2
     ___fttol (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     4B      4B       1       78.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     59      59       5       55.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Jan 06 13:44:35 2020

               ?_lcd_repete_n 0003                            l25 15CE                            l26 1644  
                          l63 223A                 ?_lcd_position 0003                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                ___ftadd@exp1 001B                  ___ftadd@exp2 001A                  ___ftadd@sign 0019  
                         l140 0986                           l133 0932                           l222 0E94  
                         l150 0A34                           l135 098A                           l216 0E42  
                         l233 0F38                           l234 0F56                           l226 0F04  
                         l323 2120                           l235 0F42                           l180 0BF4  
                         l265 11EC                           l193 0CF2                           l266 120C  
                         l267 11FE                           l706 1DD6                           l733 193C  
                         l831 2034                           l744 19EC                           l753 1A08  
                         l729 1912                           l841 209A                           l764 1D16  
                         l786 2286                  __CFG_CPB$OFF 000000                           _PR2 000FCB  
                __CFG_CPD$OFF 000000                           wreg 000FE8                  __CFG_LVP$OFF 000000  
                ___ftdiv@cntr 0034                  ___ftdiv@sign 0039                  __CFG_WDT$OFF 000000  
                        l3101 0D0A                          l3021 0B64                          l3015 0B4C  
                        l3007 0B1C                          l2401 1D58                          l3105 0D12  
                        l3025 0B76                          l3203 0F50                          l3115 0D48  
                        l3027 0B82                          l3019 0B58                          l2413 1DA4  
                        l2405 1D66                          l2501 19B8                          l3117 0D58  
                        l3053 0C0C                          l3037 0BC0                          l3029 0B88  
                        l2415 1DC2                          l2407 1D70                          l3231 1040  
                        l3215 0FBE                          l3207 0F74                          l3135 0DB6  
                        l3127 0D80                          l3119 0D5C                          l2417 1DCC  
                        l2409 1D8E                          l2601 1BF0                          l3321 127C  
                        l3241 1070                          l3057 0C14                          l2515 1A24  
                        l2507 19DA                          l2611 1C18                          l2451 20F0  
                        l2443 20CC                          l3403 14F4                          l3251 1094  
                        l3243 1076                          l3171 0EC0                          l3155 0E62  
                        l3147 0E14                          l3139 0DCC                          l3075 0C80  
                        l3067 0C4A                          l3411 150C                          l2525 1A54  
                        l2509 19E4                          l2541 1CB2                          l2605 1C00  
                        l2701 1FF6                          l3341 12D2                          l3333 12B6  
                        l3261 10FC                          l3173 0EC4                          l3181 0ED6  
                        l3157 0E80                          l3149 0E3E                          l3085 0CBE  
                        l3077 0C86                          l3069 0C5A                          l3413 1584  
                        l2535 1C8A                          l2631 1F94                          l2615 1C28  
                        l2447 20E0                          l2439 20BC                          l2455 22E2  
                        l3407 14FE                          l3327 129C                          l3255 10AA  
                        l3239 1068                          l3175 0EC8                          l3159 0E84  
                        l3415 158C                          l2377 22CA                          l2473 194A  
                        l2561 1CF0                          l2721 2068                          l2385 22A0  
                        l2393 22B4                          l2457 22E8                          l3361 1344  
                        l3337 12C4                          l3281 115C                          l3273 1130  
                        l3257 10B0                          l3193 0F32                          l3185 0F10  
                        l3177 0ECE                          l3427 217E                          l2467 1920  
                        l2627 1F64                          l2651 1AA6                          l3363 1352  
                        l2637 1FC0                          l2581 1B96                          l2709 2026  
                        l2725 208C                          l2717 2058                          l3381 139E  
                        l3357 133A                          l3373 137C                          l3349 131A  
                        l3293 119E                          l3285 116A                          l3277 1148  
                        l3269 111E                          l2751 1E18                          l2743 1E04  
                        l2495 199C                          l2719 2064                          l3391 143C  
                        l3367 135C                          l3287 1172                          l2911 0936  
                        l2761 1E32                          l2497 19A6                          l2489 197A  
                        l2681 1B40                          l2673 1B1C                          l3377 138E  
                        l2913 094A                          l2755 1E22                          l2747 1E0E  
                        l2739 1DFA                          l2499 19B0                          l2587 1BBE  
                        l2683 1B46                          l3395 144E                          l2915 0952  
                        l2773 1E54                          l2781 1E94                          l2669 1B0C  
                        l2941 09E4                          l2925 0994                          l2853 2158  
                        l2845 2146                          l2767 1E42                          l2687 1B5C  
                        l2679 1B34                          l3399 14E0                          l2943 09F8  
                        l2919 0976                          l2855 215C                          l2847 214A  
                        l2697 1FE6                          l2945 0A00                          l2881 088C  
                        l2873 0874                          l2779 1E60                          l2699 1FF2  
                        l2955 0A3E                          l2875 087A                          l2867 0848  
                        l2981 0AB6                          l2965 0A6A                          l2949 0A24  
                        l2877 0880                          l2885 0892                          l2991 0ADA  
                        l2879 0886                          l2887 08B4                          l2993 0AE4  
                        l2985 0ACC                          l2977 0A9C                          l2979 0AA0  
                        l2989 0AD4                          l2999 0AFA                          STR_1 0812  
                        STR_2 0829                          STR_3 0822                          STR_4 0829  
                        STR_5 0822                          STR_6 0833                          STR_7 0830  
                        u2101 18DE                          u2111 18F2                          u2311 1C72  
                        u2331 1C9A                          u2361 1B7E                 __CFG_DEBUG$ON 000000  
                        u2381 1BA6                          u2461 1A8A                          u2480 1AC4  
                        u2485 1ABC                          u3740 1610                          u3750 1624  
                        u3807 1EE6                          u3817 1EFA                          u3827 1F0C  
                        u3748 1612                          u3758 1626                          u3787 1EAE  
                        u3797 1ECE                          _TMR2 000FCC                   lcd_printf@c 00A2  
                 lcd_printf@f 003A                   lcd_printf@i 008D                   lcd_printf@k 0089  
                 lcd_printf@n 009B                   lcd_printf@q 0086                   lcd_printf@w 008E  
                 lcd_printf@x 0096    pwm_setdc1@cycles_etat_haut 0010                          _main 15AC  
                ___ftpack@arg 0001                  ___ftpack@exp 0004                   main@moteurD 00B4  
                 main@moteurG 00B1                          fsr2h 000FDA                          indf2 000FDF  
                        fsr2l 000FD9                          prodl 000FF3                          start 0000  
                ___ftmul@cntr 0029                  ___param_bank 000000                  ___ftmul@sign 002A  
              ??_lcd_repete_n 0004                  ___fttol@exp1 000F                  ___fttol@lval 000B  
              ??_lcd_position 0004                 __CFG_PLLDIV$5 000000                         ?_main 0001  
             __end_of___ftadd 1A7A               __end_of___ftdiv 1D48               __end_of___ftneg 2294  
             __end_of___lldiv 2046               __end_of___ftmul 1C62                         _T0CON 000FD5  
                       _T1CON 000FCD               __end_of___llmod 20AC               __end_of___fttol 1B6E  
                       _T2CON 000FCA                         _T3CON 000FB1                         _TMR0H 000FD7  
                       _TMR1H 000FCF                         _TMR0L 000FD6                         _TMR1L 000FCE  
                       _TMR3H 000FB3                         _TMR3L 000FB2                         _PORTD 000F83  
               __CFG_USBDIV$2 000000                         _TRISA 000F92                         _TRISD 000F95  
                       _TRISE 000F96                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
                lcd_printf@ap 009D                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                 ___awtoft@sign 000C  
               ___ftpack@sign 0005                         tablat 000FF5                         status 000FD8  
             __initialization 2304                  __end_of_main 18CE                        ??_main 004B  
               ___fttol@sign1 000A                 __activetblptr 000002   __end_of_lcd_write_data_busy 22C8  
               lcd_repete_n@c 0003                        _ADCON0 000FC2                        _ADCON1 000FC1  
               lcd_repete_n@n 0004                        _ADCON2 000FC0              ___llmod@dividend 0001  
                      _ADRESH 000FC4                        _ADRESL 000FC3                        _CCPR1L 000FBE  
                      _CCPR2L 000FBB              __end_of___awtoft 21A2              __end_of___ftpack 1DF6  
            __end_of_adc_init 1E9C              __end_of_adc_read 224C              __end_of___lwtoft 2270  
              __CFG_VREGEN$ON 000000          __size_of_lcd_clock_e 0012              __end_of_lcd_busy 2132  
            __end_of_lcd_init 1F34                 lcd_printf@buf 0060              __end_of_lcd_putc 20F8  
                      ___ftge 1F34                     ??___ftadd 0016                     ??___ftdiv 0031  
                   ??___ftneg 0010                     ??___lldiv 0009                     ??___ftmul 0022  
                   ??___llmod 0009                     ??___fttol 0005              __end_of_s_digits 0812  
  pwm_setdc2@cycles_etat_haut 0010                        main@n1 00A3                        main@n2 00AB  
                      main@n3 00AD                        main@n4 00A5         ___ftmul@f3_as_product 0026  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8              __end_of_pwm_init 216A          __end_of_lcd_repete_n 22F2  
        __end_of_lcd_position 22B2                    __accesstop 0060       __end_of__initialization 2304  
             __CFG_PBADEN$OFF 000000                    ___ftadd@f1 0010                    ___ftadd@f2 0013  
                  ___ftge@ff1 0001                    ___ftge@ff2 0004                 ___rparam_used 000001  
 __size_of_lcd_write_cmd_data 002C                    ___ftdiv@f1 002B                    ___ftdiv@f2 002E  
                  ___ftdiv@f3 0035   __size_of_lcd_write_cmd_busy 0016                    ___ftneg@f1 000D  
                  ___awtoft@c 0009                    ___ftmul@f1 001C                    ___ftmul@f2 001F  
                  ___fttol@f1 0001                __pcstackCOMRAM 0001             main@debutDeCourse 00A7  
                  ___lwtoft@c 0009            __size_of_lcd_clear 0008                       ?___ftge 0001  
                     _CCP1CON 000FBD                       _CCP2CON 000FBA                     ?___awtoft 0009  
                   ?___ftpack 0001                     ?_adc_init 0001                     ?_adc_read 0001  
                   ?___lwtoft 0009      lcd_printf@have_precision 0095                    _lcd_printf 0838  
                   ?_lcd_busy 0001                     ?_lcd_init 0001                     ?_lcd_putc 0001  
           lcd_position@ligne 0004                       __Hparam 0000                       __Lparam 0000  
           __end_of_lcd_clear 2316                lcd_printf@cval 009A                lcd_printf@larg 0090  
              lcd_printf@sign 0088                lcd_printf@size 0094               __size_of___ftge 0090  
                     ___ftadd 18CE                       ___ftdiv 1C62                       ___ftneg 2270  
                     ___lldiv 1FC4                       ___ftmul 1B6E                       ___llmod 2046  
                     ___fttol 1A7A                     ?_pwm_init 0001                  __psmallconst 0800  
              lcd_putc@lettre 0006                       __pcinit 2304                    ??___awtoft 000C  
                  ??___ftpack 0006                       __ramtop 0800                    ??_adc_init 0001  
                  ??_adc_read 0003                       __ptext0 15AC                       __ptext1 21CE  
                     __ptext2 21F8                       __ptext3 2132                       __ptext4 0838  
                     __ptext5 22DE                       __ptext6 20AC                       __ptext7 22B2  
                     __ptext8 2294                       __ptext9 224C                    ??___lwtoft 000C  
                   _T0CONbits 000FD5                     _T1CONbits 000FCD                     _T2CONbits 000FCA  
       __size_of_lcd_repete_n 0014                     _T3CONbits 000FB1         __size_of_lcd_position 001E  
                  ??_lcd_busy 0001                    ??_lcd_init 0003                    ??_lcd_putc 0006  
        end_of_initialization 2304                 __Lmediumconst 0000               ___lldiv@divisor 0005  
             ___lldiv@counter 000D                       postdec2 000FDD                       postinc2 000FDE  
                  ??_pwm_init 0002                  _lcd_repete_n 22DE                  _lcd_position 2294  
                   _PORTDbits 000F83                main@vitesseMax 00AF                     _PORTEbits 000F84  
adc_init@numero_dernier_canal 0001                     _TRISCbits 000F94                     _TRISEbits 000F96  
         lcd_position@address 0005                   ?_lcd_printf 003A                    _pwm_setdc1 21F8  
                  _pwm_setdc2 21CE           lcd_position@colonne 0003  __size_of_lcd_write_data_busy 0016  
                 _CCP1CONbits 000FBD                   ___ftdiv@exp 0038                 ??_lcd_clock_e 0001  
                 _CCP2CONbits 000FBA                   ___ftmul@exp 0025                __end_of___ftge 1FC4  
        lcd_write_data_busy@c 0002           start_initialization 2304               main@finDeCourse 00A9  
  __end_of_lcd_write_cmd_data 21CE    __end_of_lcd_write_cmd_busy 22DE               ___llmod@divisor 0005  
             ___llmod@counter 0009                      ??___ftge 0007           __end_of_lcd_clock_e 2304  
         __size_of_lcd_printf 0D74             __size_of___awtoft 0038             __size_of___ftpack 00AE  
              pwm_init@period 0002             __size_of_adc_init 00A6             __size_of_adc_read 002A  
           __size_of___lwtoft 0024                 __pcstackBANK0 0060                   ?_pwm_setdc1 0010  
                 ?_pwm_setdc2 0010             __size_of_lcd_busy 003A             __size_of_lcd_init 0098  
           __size_of_lcd_putc 004C                     _main$1635 00B7                      ?___ftadd 0010  
                    ?___ftdiv 002B                      ?___ftneg 000D                      ?___lldiv 0001  
                    ?___ftmul 001C                      ?___llmod 0001                      ?___fttol 0001  
                   _lcd_clear 230E             __size_of_pwm_init 0038                   __smallconst 0800  
                 _lcd_clock_e 22F2                      _PIE1bits 000F9D                      _PIE2bits 000FA0  
                    _PIR1bits 000F9E                      _PIR2bits 000FA1           __size_of_pwm_setdc1 002A  
         __size_of_pwm_setdc2 002A                    ?_lcd_clear 0001           _lcd_write_data_busy 22B2  
                  _ADCON0bits 000FC2                  ??_lcd_printf 0044          ?_lcd_write_data_busy 0001  
         lcd_write_cmd_data@c 0001           lcd_write_cmd_busy@c 0002                      __Hrparam 0000  
                    __Lrparam 0000          adc_read@numero_canal 0005               lcd_printf@flags 009F  
             lcd_printf@width 00A1              __size_of___ftadd 01AC            __end_of_lcd_printf 15AC  
            __size_of___ftdiv 00E6              __size_of___ftneg 0024              __size_of___lldiv 0082  
            __size_of___ftmul 00F4              __size_of___llmod 0066              __size_of___fttol 00F4  
                    ___awtoft 216A                      ___ftpack 1D48          __CFG_FOSC$ECPLLIO_EC 000000  
                    _adc_init 1DF6                      _adc_read 2222                      ___lwtoft 224C  
                    __ptext10 2046                      __ptext11 1FC4                      __ptext20 22C8  
                    __ptext12 1A7A                      __ptext21 21A2                      __ptext13 2270  
                    __ptext22 20F8                      __ptext14 1B6E                      __ptext23 22F2  
                    __ptext15 1F34                      __ptext24 2222                      __ptext16 1C62  
                    __ptext25 1DF6                      __ptext17 18CE                      __ptext26 216A  
                    __ptext18 1E9C                      __ptext27 1D48                      __ptext19 230E  
                    _lcd_busy 20F8                      _lcd_init 1E9C                      _lcd_putc 20AC  
       ??_lcd_write_data_busy 0002                 __size_of_main 0322                      _s_digits 0801  
          _lcd_write_cmd_data 21A2                      _pwm_init 2132            _lcd_write_cmd_busy 22C8  
                 ??_lcd_clear 0003         __CFG_CPUDIV$OSC1_PLL2 000000           ?_lcd_write_cmd_data 0001  
         ?_lcd_write_cmd_busy 0001                    _INTCONbits 000FF2                  ??_pwm_setdc1 0012  
                ??_pwm_setdc2 0012           lcd_printf@digit_cnt 008F           lcd_printf@have_sign 008B  
            ___lldiv@dividend 0001          ??_lcd_write_cmd_data 0001          ??_lcd_write_cmd_busy 0002  
        lcd_printf@prefix_cnt 008C            __end_of_pwm_setdc1 2222            __end_of_pwm_setdc2 21F8  
            ___lldiv@quotient 0009           lcd_printf@ramstring 0081           lcd_printf@sign_char 0083  
         lcd_printf@precision 00A0           lcd_printf@space_cnt 0099             pwm_init@nb_canaux 0001  
                ?_lcd_clock_e 0001           lcd_printf@romstring 0084  
