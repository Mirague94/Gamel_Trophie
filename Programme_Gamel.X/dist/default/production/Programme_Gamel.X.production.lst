

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Dec 23 15:47:59 2019

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41  0000                     
    42                           ; Version 1.42
    43                           ; Generated 13/04/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4550 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	smallconst
    78  000800                     __psmallconst:
    79                           	opt stack 0
    80  000800  00                 	db	0
    81  000801                     _s_digits:
    82                           	opt stack 0
    83  000801  30                 	db	48
    84  000802  31                 	db	49
    85  000803  32                 	db	50
    86  000804  33                 	db	51
    87  000805  34                 	db	52
    88  000806  35                 	db	53
    89  000807  36                 	db	54
    90  000808  37                 	db	55
    91  000809  38                 	db	56
    92  00080A  39                 	db	57
    93  00080B  61                 	db	97
    94  00080C  62                 	db	98
    95  00080D  63                 	db	99
    96  00080E  64                 	db	100
    97  00080F  65                 	db	101
    98  000810  66                 	db	102
    99  000811  00                 	db	0
   100  000812                     __end_of_s_digits:
   101                           	opt stack 0
   102  0000                     _T3CONbits	set	4017
   103  0000                     _PIE2bits	set	4000
   104  0000                     _PIR2bits	set	4001
   105  0000                     _TMR3L	set	4018
   106  0000                     _TMR3H	set	4019
   107  0000                     _T3CON	set	4017
   108  0000                     _TMR2	set	4044
   109  0000                     _PIE1bits	set	3997
   110  0000                     _PIR1bits	set	3998
   111  0000                     _TMR1L	set	4046
   112  0000                     _TMR1H	set	4047
   113  0000                     _T1CONbits	set	4045
   114  0000                     _T1CON	set	4045
   115  0000                     _T0CONbits	set	4053
   116  0000                     _INTCONbits	set	4082
   117  0000                     _TMR0L	set	4054
   118  0000                     _TMR0H	set	4055
   119  0000                     _T0CON	set	4053
   120  0000                     _CCP2CONbits	set	4026
   121  0000                     _CCPR2L	set	4027
   122  0000                     _CCP1CONbits	set	4029
   123  0000                     _CCPR1L	set	4030
   124  0000                     _T2CONbits	set	4042
   125  0000                     _PR2	set	4043
   126  0000                     _CCP2CON	set	4026
   127  0000                     _TRISCbits	set	3988
   128  0000                     _CCP1CON	set	4029
   129  0000                     _T2CON	set	4042
   130  0000                     _PORTDbits	set	3971
   131  0000                     _PORTD	set	3971
   132  0000                     _TRISD	set	3989
   133  0000                     _ADRESL	set	4035
   134  0000                     _ADRESH	set	4036
   135  0000                     _ADCON0	set	4034
   136  0000                     _ADCON0bits	set	4034
   137  0000                     _ADCON2	set	4032
   138  0000                     _TRISE	set	3990
   139  0000                     _TRISA	set	3986
   140  0000                     _ADCON1	set	4033
   141  0000                     _PORTEbits	set	3972
   142  0000                     _TRISEbits	set	3990
   143  000812                     STR_1:
   144  000812  25                 	db	37
   145  000813  33                 	db	51	;'3'
   146  000814  64                 	db	100	;'d'
   147  000815  20                 	db	32
   148  000816  25                 	db	37
   149  000817  33                 	db	51	;'3'
   150  000818  64                 	db	100	;'d'
   151  000819  20                 	db	32
   152  00081A  25                 	db	37
   153  00081B  33                 	db	51	;'3'
   154  00081C  64                 	db	100	;'d'
   155  00081D  20                 	db	32
   156  00081E  25                 	db	37
   157  00081F  33                 	db	51	;'3'
   158  000820  64                 	db	100	;'d'
   159  000821  00                 	db	0
   160  000822                     STR_4:
   161  000822  4A                 	db	74	;'J'
   162  000823  61                 	db	97	;'a'
   163  000824  63                 	db	99	;'c'
   164  000825  6B                 	db	107	;'k'
   165  000826  25                 	db	37
   166  000827  64                 	db	100	;'d'
   167  000828  00                 	db	0
   168  000829                     STR_2:
   169  000829  46                 	db	70	;'F'
   170  00082A  44                 	db	68	;'D'
   171  00082B  43                 	db	67	;'C'
   172  00082C  25                 	db	37
   173  00082D  64                 	db	100	;'d'
   174  00082E  00                 	db	0
   175  00082F                     STR_3:
   176  00082F  25                 	db	37
   177  000830  32                 	db	50	;'2'
   178  000831  64                 	db	100	;'d'
   179  000832  00                 	db	0
   180  000833  25                 	db	37
   181  000834  53                 	db	83	;'S'
   182  000835  00                 	db	0
   183  0000                     
   184                           ; #config settings
   185  000836  00                 	db	0	; dummy byte at the end
   186  0000                     
   187                           	psect	cinit
   188  0026EA                     __pcinit:
   189                           	opt stack 0
   190  0026EA                     start_initialization:
   191                           	opt stack 0
   192  0026EA                     __initialization:
   193                           	opt stack 0
   194  0026EA                     end_of_initialization:
   195                           	opt stack 0
   196  0026EA                     __end_of__initialization:
   197                           	opt stack 0
   198  0026EA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   199  0026EC  6EF8               	movwf	tblptru,c
   200  0026EE  0100               	movlb	0
   201  0026F0  EFD6  F00A         	goto	_main	;jump to C main() function
   202                           tblptru	equ	0xFF8
   203                           
   204                           	psect	cstackBANK0
   205  000060                     __pcstackBANK0:
   206                           	opt stack 0
   207  000060                     lcd_printf@buf:
   208                           	opt stack 0
   209                           
   210                           ; 33 bytes @ 0x0
   211  000060                     	ds	33
   212  000081                     lcd_printf@ramstring:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x21
   216  000081                     	ds	2
   217  000083                     lcd_printf@sign_char:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x23
   221  000083                     	ds	1
   222  000084                     lcd_printf@romstring:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x24
   226  000084                     	ds	2
   227  000086                     lcd_printf@q:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x26
   231  000086                     	ds	2
   232  000088                     lcd_printf@sign:
   233                           	opt stack 0
   234                           
   235                           ; 1 bytes @ 0x28
   236  000088                     	ds	1
   237  000089                     lcd_printf@k:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x29
   241  000089                     	ds	2
   242  00008B                     lcd_printf@have_sign:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x2B
   246  00008B                     	ds	1
   247  00008C                     lcd_printf@prefix_cnt:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x2C
   251  00008C                     	ds	1
   252  00008D                     lcd_printf@i:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0x2D
   256  00008D                     	ds	1
   257  00008E                     lcd_printf@w:
   258                           	opt stack 0
   259                           
   260                           ; 1 bytes @ 0x2E
   261  00008E                     	ds	1
   262  00008F                     lcd_printf@digit_cnt:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0x2F
   266  00008F                     	ds	1
   267  000090                     lcd_printf@larg:
   268                           	opt stack 0
   269                           
   270                           ; 4 bytes @ 0x30
   271  000090                     	ds	4
   272  000094                     lcd_printf@size:
   273                           	opt stack 0
   274                           
   275                           ; 1 bytes @ 0x34
   276  000094                     	ds	1
   277  000095                     lcd_printf@have_precision:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x35
   281  000095                     	ds	1
   282  000096                     lcd_printf@x:
   283                           	opt stack 0
   284                           
   285                           ; 3 bytes @ 0x36
   286  000096                     	ds	3
   287  000099                     lcd_printf@space_cnt:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x39
   291  000099                     	ds	1
   292  00009A                     lcd_printf@cval:
   293                           	opt stack 0
   294                           
   295                           ; 1 bytes @ 0x3A
   296  00009A                     	ds	1
   297  00009B                     lcd_printf@n:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x3B
   301  00009B                     	ds	2
   302  00009D                     lcd_printf@ap:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x3D
   306  00009D                     	ds	2
   307  00009F                     lcd_printf@flags:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x3F
   311  00009F                     	ds	1
   312  0000A0                     lcd_printf@precision:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x40
   316  0000A0                     	ds	1
   317  0000A1                     lcd_printf@width:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x41
   321  0000A1                     	ds	1
   322  0000A2                     lcd_printf@c:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x42
   326  0000A2                     	ds	1
   327                           tblptru	equ	0xFF8
   328                           
   329                           	psect	cstackCOMRAM
   330  000001                     __pcstackCOMRAM:
   331                           	opt stack 0
   332  000001                     ?_adc_read:
   333                           	opt stack 0
   334  000001                     ?_ReadTimer0:
   335                           	opt stack 0
   336  000001                     ?___wmul:
   337                           	opt stack 0
   338  000001                     ?___ftpack:
   339                           	opt stack 0
   340  000001                     ?___fttol:
   341                           	opt stack 0
   342  000001                     ?___lldiv:
   343                           	opt stack 0
   344  000001                     ?___llmod:
   345                           	opt stack 0
   346  000001                     adc_init@numero_dernier_canal:
   347                           	opt stack 0
   348  000001                     lcd_write_cmd_data@c:
   349                           	opt stack 0
   350  000001                     pwm_init@nb_canaux:
   351                           	opt stack 0
   352  000001                     OpenTimer0@config:
   353                           	opt stack 0
   354  000001                     ___wmul@multiplier:
   355                           	opt stack 0
   356  000001                     ___ftpack@arg:
   357                           	opt stack 0
   358  000001                     ___ftge@ff1:
   359                           	opt stack 0
   360  000001                     ___fttol@f1:
   361                           	opt stack 0
   362  000001                     ___lldiv@dividend:
   363                           	opt stack 0
   364  000001                     ___llmod@dividend:
   365                           	opt stack 0
   366                           
   367                           ; 4 bytes @ 0x0
   368  000001                     	ds	1
   369  000002                     lcd_write_data_busy@c:
   370                           	opt stack 0
   371  000002                     lcd_write_cmd_busy@c:
   372                           	opt stack 0
   373  000002                     pwm_init@period:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x1
   377  000002                     	ds	1
   378  000003                     ??_lcd_init:
   379  000003                     ??_adc_read:
   380  000003                     lcd_position@colonne:
   381                           	opt stack 0
   382  000003                     lcd_repete_n@c:
   383                           	opt stack 0
   384  000003                     ReadTimer0@timer:
   385                           	opt stack 0
   386  000003                     ___wmul@multiplicand:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x2
   390  000003                     	ds	1
   391  000004                     lcd_position@ligne:
   392                           	opt stack 0
   393  000004                     lcd_repete_n@n:
   394                           	opt stack 0
   395  000004                     ___ftpack@exp:
   396                           	opt stack 0
   397  000004                     ___ftge@ff2:
   398                           	opt stack 0
   399                           
   400                           ; 3 bytes @ 0x3
   401  000004                     	ds	1
   402  000005                     ??___fttol:
   403  000005                     adc_read@numero_canal:
   404                           	opt stack 0
   405  000005                     lcd_position@address:
   406                           	opt stack 0
   407  000005                     ___ftpack@sign:
   408                           	opt stack 0
   409  000005                     ___wmul@product:
   410                           	opt stack 0
   411  000005                     ___lldiv@divisor:
   412                           	opt stack 0
   413  000005                     ___llmod@divisor:
   414                           	opt stack 0
   415                           
   416                           ; 4 bytes @ 0x4
   417  000005                     	ds	1
   418  000006                     ??___ftpack:
   419  000006                     lcd_putc@lettre:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x5
   423  000006                     	ds	1
   424  000007                     ??___ftge:
   425  000007                     pwm_setdc1@cycles_etat_haut:
   426                           	opt stack 0
   427  000007                     pwm_setdc2@cycles_etat_haut:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x6
   431  000007                     	ds	2
   432  000009                     ??_pwm_setdc1:
   433  000009                     ??_pwm_setdc2:
   434  000009                     ?___ftdiv:
   435                           	opt stack 0
   436  000009                     ?___ftmul:
   437                           	opt stack 0
   438  000009                     ?___lwtoft:
   439                           	opt stack 0
   440  000009                     ___llmod@counter:
   441                           	opt stack 0
   442  000009                     ___lwtoft@c:
   443                           	opt stack 0
   444  000009                     ___ftdiv@f1:
   445                           	opt stack 0
   446  000009                     ___ftmul@f1:
   447                           	opt stack 0
   448  000009                     ___lldiv@quotient:
   449                           	opt stack 0
   450                           
   451                           ; 4 bytes @ 0x8
   452  000009                     	ds	1
   453  00000A                     ___fttol@sign1:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x9
   457  00000A                     	ds	1
   458  00000B                     ___fttol@lval:
   459                           	opt stack 0
   460                           
   461                           ; 4 bytes @ 0xA
   462  00000B                     	ds	1
   463  00000C                     ?___ftneg:
   464                           	opt stack 0
   465  00000C                     ___ftdiv@f2:
   466                           	opt stack 0
   467  00000C                     ___ftmul@f2:
   468                           	opt stack 0
   469  00000C                     ___ftneg@f1:
   470                           	opt stack 0
   471                           
   472                           ; 3 bytes @ 0xB
   473  00000C                     	ds	1
   474  00000D                     ___lldiv@counter:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0xC
   478  00000D                     	ds	2
   479  00000F                     ??___ftdiv:
   480  00000F                     ??___ftmul:
   481  00000F                     ?___ftadd:
   482                           	opt stack 0
   483  00000F                     ___fttol@exp1:
   484                           	opt stack 0
   485  00000F                     ___ftadd@f1:
   486                           	opt stack 0
   487                           
   488                           ; 3 bytes @ 0xE
   489  00000F                     	ds	3
   490  000012                     ___ftdiv@cntr:
   491                           	opt stack 0
   492  000012                     ___ftmul@exp:
   493                           	opt stack 0
   494  000012                     ___ftadd@f2:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0x11
   498  000012                     	ds	1
   499  000013                     ___ftdiv@f3:
   500                           	opt stack 0
   501  000013                     ___ftmul@f3_as_product:
   502                           	opt stack 0
   503                           
   504                           ; 3 bytes @ 0x12
   505  000013                     	ds	2
   506  000015                     ??___ftadd:
   507                           
   508                           ; 1 bytes @ 0x14
   509  000015                     	ds	1
   510  000016                     ___ftdiv@exp:
   511                           	opt stack 0
   512  000016                     ___ftmul@cntr:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x15
   516  000016                     	ds	1
   517  000017                     ___ftdiv@sign:
   518                           	opt stack 0
   519  000017                     ___ftmul@sign:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x16
   523  000017                     	ds	1
   524  000018                     ___ftadd@sign:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x17
   528  000018                     	ds	1
   529  000019                     ___ftadd@exp2:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x18
   533  000019                     	ds	1
   534  00001A                     ___ftadd@exp1:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x19
   538  00001A                     	ds	1
   539  00001B                     ?_lcd_printf:
   540                           	opt stack 0
   541  00001B                     lcd_printf@f:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x1A
   545  00001B                     	ds	10
   546  000025                     ??_lcd_printf:
   547                           
   548                           ; 1 bytes @ 0x24
   549  000025                     	ds	7
   550  00002C                     ??_main:
   551                           
   552                           ; 1 bytes @ 0x2B
   553  00002C                     	ds	2
   554  00002E                     main@n1:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x2D
   558  00002E                     	ds	2
   559  000030                     main@n4:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x2F
   563  000030                     	ds	2
   564  000032                     main@debutDeCourse:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x31
   568  000032                     	ds	2
   569  000034                     main@finDeCourse:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x33
   573  000034                     	ds	2
   574  000036                     main@etat:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x35
   578  000036                     	ds	2
   579  000038                     main@n2:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x37
   583  000038                     	ds	2
   584  00003A                     main@n3:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x39
   588  00003A                     	ds	2
   589  00003C                     main@Vitesse:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x3B
   593  00003C                     	ds	2
   594                           tblptru	equ	0xFF8
   595                           
   596 ;;
   597 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   598 ;;
   599 ;; *************** function _main *****************
   600 ;; Defined at:
   601 ;;		line 14 in file "main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  Vitesse         2   59[COMRAM] int 
   606 ;;  n3              2   57[COMRAM] int 
   607 ;;  n2              2   55[COMRAM] int 
   608 ;;  etat            2   53[COMRAM] int 
   609 ;;  finDeCourse     2   51[COMRAM] int 
   610 ;;  debutDeCours    2   49[COMRAM] int 
   611 ;;  n4              2   47[COMRAM] int 
   612 ;;  n1              2   45[COMRAM] int 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   622 ;;      Params:         0       0       0       0       0       0       0       0       0
   623 ;;      Locals:        16       0       0       0       0       0       0       0       0
   624 ;;      Temps:          2       0       0       0       0       0       0       0       0
   625 ;;      Totals:        18       0       0       0       0       0       0       0       0
   626 ;;Total ram usage:       18 bytes
   627 ;; Hardware stack levels required when called:    6
   628 ;; This function calls:
   629 ;;		_OpenTimer0
   630 ;;		_ReadTimer0
   631 ;;		___wmul
   632 ;;		_adc_init
   633 ;;		_adc_read
   634 ;;		_lcd_init
   635 ;;		_lcd_position
   636 ;;		_lcd_printf
   637 ;;		_pwm_init
   638 ;;		_pwm_setdc1
   639 ;;		_pwm_setdc2
   640 ;; This function is called by:
   641 ;;		Startup code after reset
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text0
   646  0015AC                     __ptext0:
   647                           	opt stack 0
   648  0015AC                     _main:
   649                           	opt stack 25
   650                           
   651                           ;main.c: 16: int n1,n2,n3,n4;
   652                           ;main.c: 17: adc_init(5);
   653                           
   654                           ;incstack = 0
   655  0015AC  0E05               	movlw	5
   656  0015AE  ECDE  F010         	call	_adc_init
   657                           
   658                           ;main.c: 18: lcd_init();
   659  0015B2  EC31  F011         	call	_lcd_init	;wreg free
   660                           
   661                           ;main.c: 19: int finDeCourse=1, debutDeCourse;
   662  0015B6  0E00               	movlw	0
   663  0015B8  6E35               	movwf	main@finDeCourse+1,c
   664  0015BA  0E01               	movlw	1
   665  0015BC  6E34               	movwf	main@finDeCourse,c
   666                           
   667                           ;main.c: 20: int etat=0;
   668  0015BE  0E00               	movlw	0
   669  0015C0  6E37               	movwf	main@etat+1,c
   670  0015C2  0E00               	movlw	0
   671  0015C4  6E36               	movwf	main@etat,c
   672                           
   673                           ;main.c: 21: int Vitesse=1.5;
   674  0015C6  0E00               	movlw	0
   675  0015C8  6E3D               	movwf	main@Vitesse+1,c
   676  0015CA  0E01               	movlw	1
   677  0015CC  6E3C               	movwf	main@Vitesse,c
   678                           
   679                           ;main.c: 23: TRISEbits.TRISE1 = 1;
   680  0015CE  8296               	bsf	3990,1,c	;volatile
   681                           
   682                           ;main.c: 24: TRISEbits.TRISE2 = 1;
   683  0015D0  8496               	bsf	3990,2,c	;volatile
   684  0015D2                     l3578:
   685                           
   686                           ;main.c: 28: {
   687                           ;main.c: 29: n1=adc_read(1);
   688  0015D2  0E01               	movlw	1
   689  0015D4  ECD8  F012         	call	_adc_read
   690  0015D8  C001  F02E         	movff	?_adc_read,main@n1
   691  0015DC  C002  F02F         	movff	?_adc_read+1,main@n1+1
   692                           
   693                           ;main.c: 30: n2=adc_read(3);
   694  0015E0  0E03               	movlw	3
   695  0015E2  ECD8  F012         	call	_adc_read
   696  0015E6  C001  F038         	movff	?_adc_read,main@n2
   697  0015EA  C002  F039         	movff	?_adc_read+1,main@n2+1
   698                           
   699                           ;main.c: 31: n3=adc_read(4);
   700  0015EE  0E04               	movlw	4
   701  0015F0  ECD8  F012         	call	_adc_read
   702  0015F4  C001  F03A         	movff	?_adc_read,main@n3
   703  0015F8  C002  F03B         	movff	?_adc_read+1,main@n3+1
   704                           
   705                           ;main.c: 32: n4=adc_read(5);
   706  0015FC  0E05               	movlw	5
   707  0015FE  ECD8  F012         	call	_adc_read
   708  001602  C001  F030         	movff	?_adc_read,main@n4
   709  001606  C002  F031         	movff	?_adc_read+1,main@n4+1
   710                           
   711                           ;main.c: 34: debutDeCourse = PORTEbits.RE1;
   712  00160A  A284               	btfss	3972,1,c	;volatile
   713  00160C  D003               	goto	u3970
   714  00160E  6A2C               	clrf	??_main& (0+255),c
   715  001610  2A2C               	incf	??_main& (0+255),f,c
   716  001612  D001               	goto	u3978
   717  001614                     u3970:
   718  001614  6A2C               	clrf	??_main& (0+255),c
   719  001616                     u3978:
   720  001616  502C               	movf	??_main,w,c
   721  001618  6E32               	movwf	main@debutDeCourse,c
   722  00161A  6A33               	clrf	main@debutDeCourse+1,c
   723                           
   724                           ;main.c: 35: finDeCourse = PORTEbits.RE2 ;
   725  00161C  A484               	btfss	3972,2,c	;volatile
   726  00161E  D003               	goto	u3980
   727  001620  6A2C               	clrf	??_main& (0+255),c
   728  001622  2A2C               	incf	??_main& (0+255),f,c
   729  001624  D001               	goto	u3988
   730  001626                     u3980:
   731  001626  6A2C               	clrf	??_main& (0+255),c
   732  001628                     u3988:
   733  001628  502C               	movf	??_main,w,c
   734  00162A  6E34               	movwf	main@finDeCourse,c
   735  00162C  6A35               	clrf	main@finDeCourse+1,c
   736                           
   737                           ;main.c: 37: if (debutDeCourse == 1)
   738  00162E  0432               	decf	main@debutDeCourse,w,c
   739  001630  1033               	iorwf	main@debutDeCourse+1,w,c
   740  001632  A4D8               	btfss	status,2,c
   741  001634  D005               	goto	l3594
   742                           
   743                           ;main.c: 38: {
   744                           ;main.c: 39: pwm_init (150,2);
   745  001636  0E02               	movlw	2
   746  001638  6E01               	movwf	pwm_init@nb_canaux,c
   747  00163A  0E96               	movlw	150
   748  00163C  EC7C  F012         	call	_pwm_init
   749  001640                     l3594:
   750                           
   751                           ;main.c: 40: }
   752                           ;main.c: 42: if (finDeCourse == 0)
   753  001640  5034               	movf	main@finDeCourse,w,c
   754  001642  1035               	iorwf	main@finDeCourse+1,w,c
   755  001644  A4D8               	btfss	status,2,c
   756  001646  D004               	goto	l3598
   757                           
   758                           ;main.c: 43: {
   759                           ;main.c: 44: etat=2;
   760  001648  0E00               	movlw	0
   761  00164A  6E37               	movwf	main@etat+1,c
   762  00164C  0E02               	movlw	2
   763  00164E  6E36               	movwf	main@etat,c
   764  001650                     l3598:
   765                           
   766                           ;main.c: 45: }
   767                           ;main.c: 47: if ((n1<200)&& (n4>200))
   768  001650  BE2F               	btfsc	main@n1+1,7,c
   769  001652  D006               	goto	l3600
   770  001654  502F               	movf	main@n1+1,w,c
   771  001656  E103               	bnz	u4011
   772  001658  0EC8               	movlw	200
   773  00165A  5C2E               	subwf	main@n1,w,c
   774  00165C  B0D8               	btfsc	status,0,c
   775  00165E                     u4011:
   776  00165E  D2A1               	goto	l3718
   777  001660                     l3600:
   778  001660  BE31               	btfsc	main@n4+1,7,c
   779  001662  D29F               	goto	l3718
   780  001664  5031               	movf	main@n4+1,w,c
   781  001666  E104               	bnz	u4020
   782  001668  0EC9               	movlw	201
   783  00166A  5C30               	subwf	main@n4,w,c
   784  00166C  A0D8               	btfss	status,0,c
   785  00166E  D299               	goto	l3718
   786  001670                     u4020:
   787                           
   788                           ;main.c: 48: {
   789                           ;main.c: 49: OpenTimer0( 0b11111111 &
   790                           ;main.c: 50: 0b10111111 &
   791                           ;main.c: 51: 0b11011111 &
   792                           ;main.c: 52: 0b11110111);
   793  001670  0E97               	movlw	151
   794  001672  EC24  F013         	call	_OpenTimer0
   795                           
   796                           ;main.c: 53: }
   797                           ;main.c: 60: switch (etat)
   798  001676  D295               	goto	l3718
   799  001678                     l3604:
   800                           
   801                           ;main.c: 63: pwm_setdc1(150*Vitesse);
   802  001678  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
   803  00167C  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
   804  001680  0E00               	movlw	0
   805  001682  6E04               	movwf	___wmul@multiplicand+1,c
   806  001684  0E96               	movlw	150
   807  001686  6E03               	movwf	___wmul@multiplicand,c
   808  001688  ECED  F012         	call	___wmul	;wreg free
   809  00168C  C001  F007         	movff	?___wmul,pwm_setdc1@cycles_etat_haut
   810  001690  C002  F008         	movff	?___wmul+1,pwm_setdc1@cycles_etat_haut+1
   811  001694  ECC3  F012         	call	_pwm_setdc1	;wreg free
   812                           
   813                           ;main.c: 64: pwm_setdc2(150*Vitesse);
   814  001698  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
   815  00169C  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
   816  0016A0  0E00               	movlw	0
   817  0016A2  6E04               	movwf	___wmul@multiplicand+1,c
   818  0016A4  0E96               	movlw	150
   819  0016A6  6E03               	movwf	___wmul@multiplicand,c
   820  0016A8  ECED  F012         	call	___wmul	;wreg free
   821  0016AC  C001  F007         	movff	?___wmul,pwm_setdc2@cycles_etat_haut
   822  0016B0  C002  F008         	movff	?___wmul+1,pwm_setdc2@cycles_etat_haut+1
   823  0016B4  ECAE  F012         	call	_pwm_setdc2	;wreg free
   824                           
   825                           ;main.c: 65: if (ReadTimer0()>37500) etat=31;
   826  0016B8  EC6C  F013         	call	_ReadTimer0	;wreg free
   827  0016BC  0E7D               	movlw	125
   828  0016BE  5C01               	subwf	?_ReadTimer0,w,c
   829  0016C0  0E92               	movlw	146
   830  0016C2  5802               	subwfb	?_ReadTimer0+1,w,c
   831  0016C4  A0D8               	btfss	status,0,c
   832  0016C6  D004               	goto	l3610
   833  0016C8  0E00               	movlw	0
   834  0016CA  6E37               	movwf	main@etat+1,c
   835  0016CC  0E1F               	movlw	31
   836  0016CE  6E36               	movwf	main@etat,c
   837  0016D0                     l3610:
   838                           
   839                           ;main.c: 66: if ((n3 > 800) && (n2 > 800)) etat=2;
   840  0016D0  BE3B               	btfsc	main@n3+1,7,c
   841  0016D2  D011               	goto	l3616
   842  0016D4  0E21               	movlw	33
   843  0016D6  5C3A               	subwf	main@n3,w,c
   844  0016D8  0E03               	movlw	3
   845  0016DA  583B               	subwfb	main@n3+1,w,c
   846  0016DC  B0D8               	btfsc	status,0,c
   847  0016DE  BE39               	btfsc	main@n2+1,7,c
   848  0016E0  D00A               	goto	l3616
   849  0016E2  0E21               	movlw	33
   850  0016E4  5C38               	subwf	main@n2,w,c
   851  0016E6  0E03               	movlw	3
   852  0016E8  5839               	subwfb	main@n2+1,w,c
   853  0016EA  A0D8               	btfss	status,0,c
   854  0016EC  D004               	goto	l3616
   855  0016EE  0E00               	movlw	0
   856  0016F0  6E37               	movwf	main@etat+1,c
   857  0016F2  0E02               	movlw	2
   858  0016F4  D233               	goto	L19
   859  0016F6                     l3616:
   860                           
   861                           ;main.c: 67: else
   862                           ;main.c: 68: {
   863                           ;main.c: 69: if (n3 > 200) etat=21;
   864  0016F6  BE3B               	btfsc	main@n3+1,7,c
   865  0016F8  D00A               	goto	l3620
   866  0016FA  503B               	movf	main@n3+1,w,c
   867  0016FC  E104               	bnz	u4060
   868  0016FE  0EC9               	movlw	201
   869  001700  5C3A               	subwf	main@n3,w,c
   870  001702  A0D8               	btfss	status,0,c
   871  001704  D004               	goto	l3620
   872  001706                     u4060:
   873  001706  0E00               	movlw	0
   874  001708  6E37               	movwf	main@etat+1,c
   875  00170A  0E15               	movlw	21
   876  00170C  6E36               	movwf	main@etat,c
   877  00170E                     l3620:
   878                           
   879                           ;main.c: 70: if (n2 > 200) etat=11;
   880  00170E  BE39               	btfsc	main@n2+1,7,c
   881  001710  D278               	goto	l3720
   882  001712  5039               	movf	main@n2+1,w,c
   883  001714  E104               	bnz	u4070
   884  001716  0EC9               	movlw	201
   885  001718  5C38               	subwf	main@n2,w,c
   886  00171A  A0D8               	btfss	status,0,c
   887  00171C  D272               	goto	l3720
   888  00171E                     u4070:
   889  00171E  D084               	goto	l3642
   890  001720                     l3624:
   891                           
   892                           ;main.c: 74: pwm_setdc1(000*Vitesse);
   893  001720  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
   894  001724  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
   895  001728  0E00               	movlw	0
   896  00172A  6E04               	movwf	___wmul@multiplicand+1,c
   897  00172C  0E00               	movlw	0
   898  00172E  6E03               	movwf	___wmul@multiplicand,c
   899  001730  ECED  F012         	call	___wmul	;wreg free
   900  001734  C001  F007         	movff	?___wmul,pwm_setdc1@cycles_etat_haut
   901  001738  C002  F008         	movff	?___wmul+1,pwm_setdc1@cycles_etat_haut+1
   902  00173C  ECC3  F012         	call	_pwm_setdc1	;wreg free
   903                           
   904                           ;main.c: 75: pwm_setdc2(000*Vitesse);
   905  001740  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
   906  001744  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
   907  001748  0E00               	movlw	0
   908  00174A  6E04               	movwf	___wmul@multiplicand+1,c
   909  00174C  0E00               	movlw	0
   910  00174E  6E03               	movwf	___wmul@multiplicand,c
   911  001750  ECED  F012         	call	___wmul	;wreg free
   912  001754  C001  F007         	movff	?___wmul,pwm_setdc2@cycles_etat_haut
   913  001758  C002  F008         	movff	?___wmul+1,pwm_setdc2@cycles_etat_haut+1
   914  00175C  ECAE  F012         	call	_pwm_setdc2	;wreg free
   915  001760                     l42:
   916                           
   917                           ;main.c: 79: pwm_setdc1(150*Vitesse);
   918  001760  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
   919  001764  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
   920  001768  0E00               	movlw	0
   921  00176A  6E04               	movwf	___wmul@multiplicand+1,c
   922  00176C  0E96               	movlw	150
   923  00176E  6E03               	movwf	___wmul@multiplicand,c
   924  001770  ECED  F012         	call	___wmul	;wreg free
   925  001774  C001  F007         	movff	?___wmul,pwm_setdc1@cycles_etat_haut
   926  001778  C002  F008         	movff	?___wmul+1,pwm_setdc1@cycles_etat_haut+1
   927  00177C  ECC3  F012         	call	_pwm_setdc1	;wreg free
   928                           
   929                           ;main.c: 80: pwm_setdc2(120*Vitesse);
   930  001780  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
   931  001784  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
   932  001788  0E00               	movlw	0
   933  00178A  6E04               	movwf	___wmul@multiplicand+1,c
   934  00178C  0E78               	movlw	120
   935  00178E  6E03               	movwf	___wmul@multiplicand,c
   936  001790  ECED  F012         	call	___wmul	;wreg free
   937  001794  C001  F007         	movff	?___wmul,pwm_setdc2@cycles_etat_haut
   938  001798  C002  F008         	movff	?___wmul+1,pwm_setdc2@cycles_etat_haut+1
   939  00179C  ECAE  F012         	call	_pwm_setdc2	;wreg free
   940                           
   941                           ;main.c: 81: if (n2 > 300) etat=12;
   942  0017A0  BE39               	btfsc	main@n2+1,7,c
   943  0017A2  D00A               	goto	l3630
   944  0017A4  0E2D               	movlw	45
   945  0017A6  5C38               	subwf	main@n2,w,c
   946  0017A8  0E01               	movlw	1
   947  0017AA  5839               	subwfb	main@n2+1,w,c
   948  0017AC  A0D8               	btfss	status,0,c
   949  0017AE  D004               	goto	l3630
   950  0017B0                     l3628:
   951  0017B0  0E00               	movlw	0
   952  0017B2  6E37               	movwf	main@etat+1,c
   953  0017B4  0E0C               	movlw	12
   954  0017B6  D1D2               	goto	L19
   955  0017B8                     l3630:
   956                           
   957                           ;main.c: 82: else if (n2 < 200) etat=0;
   958  0017B8  BE39               	btfsc	main@n2+1,7,c
   959  0017BA  D103               	goto	l3678
   960  0017BC  5039               	movf	main@n2+1,w,c
   961  0017BE  E103               	bnz	u4091
   962  0017C0  0EC8               	movlw	200
   963  0017C2  5C38               	subwf	main@n2,w,c
   964  0017C4  D0FC               	goto	L20
   965  0017C6                     u4091:
   966  0017C6  D21D               	goto	l3720
   967  0017C8                     l3634:
   968                           
   969                           ;main.c: 85: pwm_setdc1(150*Vitesse);
   970  0017C8  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
   971  0017CC  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
   972  0017D0  0E00               	movlw	0
   973  0017D2  6E04               	movwf	___wmul@multiplicand+1,c
   974  0017D4  0E96               	movlw	150
   975  0017D6  6E03               	movwf	___wmul@multiplicand,c
   976  0017D8  ECED  F012         	call	___wmul	;wreg free
   977  0017DC  C001  F007         	movff	?___wmul,pwm_setdc1@cycles_etat_haut
   978  0017E0  C002  F008         	movff	?___wmul+1,pwm_setdc1@cycles_etat_haut+1
   979  0017E4  ECC3  F012         	call	_pwm_setdc1	;wreg free
   980                           
   981                           ;main.c: 86: pwm_setdc2(90*Vitesse);
   982  0017E8  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
   983  0017EC  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
   984  0017F0  0E00               	movlw	0
   985  0017F2  6E04               	movwf	___wmul@multiplicand+1,c
   986  0017F4  0E5A               	movlw	90
   987  0017F6  6E03               	movwf	___wmul@multiplicand,c
   988  0017F8  ECED  F012         	call	___wmul	;wreg free
   989  0017FC  C001  F007         	movff	?___wmul,pwm_setdc2@cycles_etat_haut
   990  001800  C002  F008         	movff	?___wmul+1,pwm_setdc2@cycles_etat_haut+1
   991  001804  ECAE  F012         	call	_pwm_setdc2	;wreg free
   992                           
   993                           ;main.c: 87: if (n2 > 400) etat=13;
   994  001808  BE39               	btfsc	main@n2+1,7,c
   995  00180A  D006               	goto	l3640
   996  00180C  0E91               	movlw	145
   997  00180E  5C38               	subwf	main@n2,w,c
   998  001810  0E01               	movlw	1
   999  001812  5839               	subwfb	main@n2+1,w,c
  1000  001814  B0D8               	btfsc	status,0,c
  1001  001816  D071               	goto	l3662
  1002  001818                     l3640:
  1003                           
  1004                           ;main.c: 88: else if (n2 < 300) etat=11;
  1005  001818  BE39               	btfsc	main@n2+1,7,c
  1006  00181A  D006               	goto	l3642
  1007  00181C  0E2C               	movlw	44
  1008  00181E  5C38               	subwf	main@n2,w,c
  1009  001820  0E01               	movlw	1
  1010  001822  5839               	subwfb	main@n2+1,w,c
  1011  001824  B0D8               	btfsc	status,0,c
  1012  001826  D1ED               	goto	l3720
  1013  001828                     l3642:
  1014  001828  0E00               	movlw	0
  1015  00182A  6E37               	movwf	main@etat+1,c
  1016  00182C  0E0B               	movlw	11
  1017  00182E  D196               	goto	L19
  1018  001830                     l3644:
  1019                           
  1020                           ;main.c: 91: pwm_setdc1(150*Vitesse);
  1021  001830  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1022  001834  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1023  001838  0E00               	movlw	0
  1024  00183A  6E04               	movwf	___wmul@multiplicand+1,c
  1025  00183C  0E96               	movlw	150
  1026  00183E  6E03               	movwf	___wmul@multiplicand,c
  1027  001840  ECED  F012         	call	___wmul	;wreg free
  1028  001844  C001  F007         	movff	?___wmul,pwm_setdc1@cycles_etat_haut
  1029  001848  C002  F008         	movff	?___wmul+1,pwm_setdc1@cycles_etat_haut+1
  1030  00184C  ECC3  F012         	call	_pwm_setdc1	;wreg free
  1031                           
  1032                           ;main.c: 92: pwm_setdc2(60*Vitesse);
  1033  001850  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1034  001854  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1035  001858  0E00               	movlw	0
  1036  00185A  6E04               	movwf	___wmul@multiplicand+1,c
  1037  00185C  0E3C               	movlw	60
  1038  00185E  6E03               	movwf	___wmul@multiplicand,c
  1039  001860  ECED  F012         	call	___wmul	;wreg free
  1040  001864  C001  F007         	movff	?___wmul,pwm_setdc2@cycles_etat_haut
  1041  001868  C002  F008         	movff	?___wmul+1,pwm_setdc2@cycles_etat_haut+1
  1042  00186C  ECAE  F012         	call	_pwm_setdc2	;wreg free
  1043                           
  1044                           ;main.c: 93: if (n2 > 500) etat=14;
  1045  001870  BE39               	btfsc	main@n2+1,7,c
  1046  001872  D006               	goto	l3650
  1047  001874  0EF5               	movlw	245
  1048  001876  5C38               	subwf	main@n2,w,c
  1049  001878  0E01               	movlw	1
  1050  00187A  5839               	subwfb	main@n2+1,w,c
  1051  00187C  B0D8               	btfsc	status,0,c
  1052  00187E  D069               	goto	l3668
  1053  001880                     l3650:
  1054                           
  1055                           ;main.c: 94: else if (n2 < 400) etat=12;
  1056  001880  BE39               	btfsc	main@n2+1,7,c
  1057  001882  D796               	goto	l3628
  1058  001884  0E90               	movlw	144
  1059  001886  5C38               	subwf	main@n2,w,c
  1060  001888  0E01               	movlw	1
  1061  00188A  5839               	subwfb	main@n2+1,w,c
  1062  00188C  B0D8               	btfsc	status,0,c
  1063  00188E  D1B9               	goto	l3720
  1064  001890  D78F               	goto	l3628
  1065  001892                     l3654:
  1066                           
  1067                           ;main.c: 97: pwm_setdc1(150*Vitesse);
  1068  001892  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1069  001896  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1070  00189A  0E00               	movlw	0
  1071  00189C  6E04               	movwf	___wmul@multiplicand+1,c
  1072  00189E  0E96               	movlw	150
  1073  0018A0  6E03               	movwf	___wmul@multiplicand,c
  1074  0018A2  ECED  F012         	call	___wmul	;wreg free
  1075  0018A6  C001  F007         	movff	?___wmul,pwm_setdc1@cycles_etat_haut
  1076  0018AA  C002  F008         	movff	?___wmul+1,pwm_setdc1@cycles_etat_haut+1
  1077  0018AE  ECC3  F012         	call	_pwm_setdc1	;wreg free
  1078                           
  1079                           ;main.c: 98: pwm_setdc2(30*Vitesse);
  1080  0018B2  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1081  0018B6  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1082  0018BA  0E00               	movlw	0
  1083  0018BC  6E04               	movwf	___wmul@multiplicand+1,c
  1084  0018BE  0E1E               	movlw	30
  1085  0018C0  6E03               	movwf	___wmul@multiplicand,c
  1086  0018C2  ECED  F012         	call	___wmul	;wreg free
  1087  0018C6  C001  F007         	movff	?___wmul,pwm_setdc2@cycles_etat_haut
  1088  0018CA  C002  F008         	movff	?___wmul+1,pwm_setdc2@cycles_etat_haut+1
  1089  0018CE  ECAE  F012         	call	_pwm_setdc2	;wreg free
  1090                           
  1091                           ;main.c: 99: if (n2 > 600) etat=15;
  1092  0018D2  BE39               	btfsc	main@n2+1,7,c
  1093  0018D4  D00A               	goto	l3660
  1094  0018D6  0E59               	movlw	89
  1095  0018D8  5C38               	subwf	main@n2,w,c
  1096  0018DA  0E02               	movlw	2
  1097  0018DC  5839               	subwfb	main@n2+1,w,c
  1098  0018DE  A0D8               	btfss	status,0,c
  1099  0018E0  D004               	goto	l3660
  1100  0018E2  0E00               	movlw	0
  1101  0018E4  6E37               	movwf	main@etat+1,c
  1102  0018E6  0E0F               	movlw	15
  1103  0018E8  D139               	goto	L19
  1104  0018EA                     l3660:
  1105                           
  1106                           ;main.c: 100: else if (n2 < 500) etat=13;
  1107  0018EA  BE39               	btfsc	main@n2+1,7,c
  1108  0018EC  D006               	goto	l3662
  1109  0018EE  0EF4               	movlw	244
  1110  0018F0  5C38               	subwf	main@n2,w,c
  1111  0018F2  0E01               	movlw	1
  1112  0018F4  5839               	subwfb	main@n2+1,w,c
  1113  0018F6  B0D8               	btfsc	status,0,c
  1114  0018F8  D184               	goto	l3720
  1115  0018FA                     l3662:
  1116  0018FA  0E00               	movlw	0
  1117  0018FC  6E37               	movwf	main@etat+1,c
  1118  0018FE  0E0D               	movlw	13
  1119  001900  D12D               	goto	L19
  1120  001902                     l3664:
  1121                           
  1122                           ;main.c: 103: pwm_setdc1(150*Vitesse);
  1123  001902  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1124  001906  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1125  00190A  0E00               	movlw	0
  1126  00190C  6E04               	movwf	___wmul@multiplicand+1,c
  1127  00190E  0E96               	movlw	150
  1128  001910  6E03               	movwf	___wmul@multiplicand,c
  1129  001912  ECED  F012         	call	___wmul	;wreg free
  1130  001916  C001  F007         	movff	?___wmul,pwm_setdc1@cycles_etat_haut
  1131  00191A  C002  F008         	movff	?___wmul+1,pwm_setdc1@cycles_etat_haut+1
  1132  00191E  ECC3  F012         	call	_pwm_setdc1	;wreg free
  1133                           
  1134                           ;main.c: 104: pwm_setdc2(00*Vitesse);
  1135  001922  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1136  001926  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1137  00192A  0E00               	movlw	0
  1138  00192C  6E04               	movwf	___wmul@multiplicand+1,c
  1139  00192E  0E00               	movlw	0
  1140  001930  6E03               	movwf	___wmul@multiplicand,c
  1141  001932  ECED  F012         	call	___wmul	;wreg free
  1142  001936  C001  F007         	movff	?___wmul,pwm_setdc2@cycles_etat_haut
  1143  00193A  C002  F008         	movff	?___wmul+1,pwm_setdc2@cycles_etat_haut+1
  1144  00193E  ECAE  F012         	call	_pwm_setdc2	;wreg free
  1145                           
  1146                           ;main.c: 105: if (n2 < 600) etat=14;
  1147  001942  BE39               	btfsc	main@n2+1,7,c
  1148  001944  D006               	goto	l3668
  1149  001946  0E58               	movlw	88
  1150  001948  5C38               	subwf	main@n2,w,c
  1151  00194A  0E02               	movlw	2
  1152  00194C  5839               	subwfb	main@n2+1,w,c
  1153  00194E  B0D8               	btfsc	status,0,c
  1154  001950  D158               	goto	l3720
  1155  001952                     l3668:
  1156  001952  0E00               	movlw	0
  1157  001954  6E37               	movwf	main@etat+1,c
  1158  001956  0E0E               	movlw	14
  1159  001958  D101               	goto	L19
  1160  00195A                     l3670:
  1161                           
  1162                           ;main.c: 110: pwm_setdc1(120*Vitesse);
  1163  00195A  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1164  00195E  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1165  001962  0E00               	movlw	0
  1166  001964  6E04               	movwf	___wmul@multiplicand+1,c
  1167  001966  0E78               	movlw	120
  1168  001968  6E03               	movwf	___wmul@multiplicand,c
  1169  00196A  ECED  F012         	call	___wmul	;wreg free
  1170  00196E  C001  F007         	movff	?___wmul,pwm_setdc1@cycles_etat_haut
  1171  001972  C002  F008         	movff	?___wmul+1,pwm_setdc1@cycles_etat_haut+1
  1172  001976  ECC3  F012         	call	_pwm_setdc1	;wreg free
  1173                           
  1174                           ;main.c: 111: pwm_setdc2(150*Vitesse);
  1175  00197A  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1176  00197E  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1177  001982  0E00               	movlw	0
  1178  001984  6E04               	movwf	___wmul@multiplicand+1,c
  1179  001986  0E96               	movlw	150
  1180  001988  6E03               	movwf	___wmul@multiplicand,c
  1181  00198A  ECED  F012         	call	___wmul	;wreg free
  1182  00198E  C001  F007         	movff	?___wmul,pwm_setdc2@cycles_etat_haut
  1183  001992  C002  F008         	movff	?___wmul+1,pwm_setdc2@cycles_etat_haut+1
  1184  001996  ECAE  F012         	call	_pwm_setdc2	;wreg free
  1185                           
  1186                           ;main.c: 112: if (n3 > 300) etat=22;
  1187  00199A  BE3B               	btfsc	main@n3+1,7,c
  1188  00199C  D00A               	goto	l3676
  1189  00199E  0E2D               	movlw	45
  1190  0019A0  5C3A               	subwf	main@n3,w,c
  1191  0019A2  0E01               	movlw	1
  1192  0019A4  583B               	subwfb	main@n3+1,w,c
  1193  0019A6  A0D8               	btfss	status,0,c
  1194  0019A8  D004               	goto	l3676
  1195  0019AA                     l3674:
  1196  0019AA  0E00               	movlw	0
  1197  0019AC  6E37               	movwf	main@etat+1,c
  1198  0019AE  0E16               	movlw	22
  1199  0019B0  D0D5               	goto	L19
  1200  0019B2                     l3676:
  1201                           
  1202                           ;main.c: 113: else if (n3 < 200) etat=0;
  1203  0019B2  BE3B               	btfsc	main@n3+1,7,c
  1204  0019B4  D006               	goto	l3678
  1205  0019B6  503B               	movf	main@n3+1,w,c
  1206  0019B8  E103               	bnz	u4181
  1207  0019BA  0EC8               	movlw	200
  1208  0019BC  5C3A               	subwf	main@n3,w,c
  1209  0019BE                     L20:
  1210  0019BE  B0D8               	btfsc	status,0,c
  1211  0019C0                     u4181:
  1212  0019C0  D120               	goto	l3720
  1213  0019C2                     l3678:
  1214  0019C2  0E00               	movlw	0
  1215  0019C4  6E37               	movwf	main@etat+1,c
  1216  0019C6  0E00               	movlw	0
  1217  0019C8  D0C9               	goto	L19
  1218  0019CA                     l3680:
  1219                           
  1220                           ;main.c: 116: pwm_setdc1(90*Vitesse);
  1221  0019CA  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1222  0019CE  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1223  0019D2  0E00               	movlw	0
  1224  0019D4  6E04               	movwf	___wmul@multiplicand+1,c
  1225  0019D6  0E5A               	movlw	90
  1226  0019D8  6E03               	movwf	___wmul@multiplicand,c
  1227  0019DA  ECED  F012         	call	___wmul	;wreg free
  1228  0019DE  C001  F007         	movff	?___wmul,pwm_setdc1@cycles_etat_haut
  1229  0019E2  C002  F008         	movff	?___wmul+1,pwm_setdc1@cycles_etat_haut+1
  1230  0019E6  ECC3  F012         	call	_pwm_setdc1	;wreg free
  1231                           
  1232                           ;main.c: 117: pwm_setdc2(150*Vitesse);
  1233  0019EA  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1234  0019EE  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1235  0019F2  0E00               	movlw	0
  1236  0019F4  6E04               	movwf	___wmul@multiplicand+1,c
  1237  0019F6  0E96               	movlw	150
  1238  0019F8  6E03               	movwf	___wmul@multiplicand,c
  1239  0019FA  ECED  F012         	call	___wmul	;wreg free
  1240  0019FE  C001  F007         	movff	?___wmul,pwm_setdc2@cycles_etat_haut
  1241  001A02  C002  F008         	movff	?___wmul+1,pwm_setdc2@cycles_etat_haut+1
  1242  001A06  ECAE  F012         	call	_pwm_setdc2	;wreg free
  1243                           
  1244                           ;main.c: 118: if (n3 > 400) etat=23;
  1245  001A0A  BE3B               	btfsc	main@n3+1,7,c
  1246  001A0C  D00A               	goto	l3686
  1247  001A0E  0E91               	movlw	145
  1248  001A10  5C3A               	subwf	main@n3,w,c
  1249  001A12  0E01               	movlw	1
  1250  001A14  583B               	subwfb	main@n3+1,w,c
  1251  001A16  A0D8               	btfss	status,0,c
  1252  001A18  D004               	goto	l3686
  1253  001A1A                     l3684:
  1254  001A1A  0E00               	movlw	0
  1255  001A1C  6E37               	movwf	main@etat+1,c
  1256  001A1E  0E17               	movlw	23
  1257  001A20  D09D               	goto	L19
  1258  001A22                     l3686:
  1259                           
  1260                           ;main.c: 119: else if (n3 < 300) etat=21;
  1261  001A22  BE3B               	btfsc	main@n3+1,7,c
  1262  001A24  D006               	goto	l3688
  1263  001A26  0E2C               	movlw	44
  1264  001A28  5C3A               	subwf	main@n3,w,c
  1265  001A2A  0E01               	movlw	1
  1266  001A2C  583B               	subwfb	main@n3+1,w,c
  1267  001A2E  B0D8               	btfsc	status,0,c
  1268  001A30  D0E8               	goto	l3720
  1269  001A32                     l3688:
  1270  001A32  0E00               	movlw	0
  1271  001A34  6E37               	movwf	main@etat+1,c
  1272  001A36  0E15               	movlw	21
  1273  001A38  D091               	goto	L19
  1274  001A3A                     l3690:
  1275                           
  1276                           ;main.c: 122: pwm_setdc1(60*Vitesse);
  1277  001A3A  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1278  001A3E  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1279  001A42  0E00               	movlw	0
  1280  001A44  6E04               	movwf	___wmul@multiplicand+1,c
  1281  001A46  0E3C               	movlw	60
  1282  001A48  6E03               	movwf	___wmul@multiplicand,c
  1283  001A4A  ECED  F012         	call	___wmul	;wreg free
  1284  001A4E  C001  F007         	movff	?___wmul,pwm_setdc1@cycles_etat_haut
  1285  001A52  C002  F008         	movff	?___wmul+1,pwm_setdc1@cycles_etat_haut+1
  1286  001A56  ECC3  F012         	call	_pwm_setdc1	;wreg free
  1287                           
  1288                           ;main.c: 123: pwm_setdc2(150*Vitesse);
  1289  001A5A  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1290  001A5E  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1291  001A62  0E00               	movlw	0
  1292  001A64  6E04               	movwf	___wmul@multiplicand+1,c
  1293  001A66  0E96               	movlw	150
  1294  001A68  6E03               	movwf	___wmul@multiplicand,c
  1295  001A6A  ECED  F012         	call	___wmul	;wreg free
  1296  001A6E  C001  F007         	movff	?___wmul,pwm_setdc2@cycles_etat_haut
  1297  001A72  C002  F008         	movff	?___wmul+1,pwm_setdc2@cycles_etat_haut+1
  1298  001A76  ECAE  F012         	call	_pwm_setdc2	;wreg free
  1299                           
  1300                           ;main.c: 124: if (n3 > 500) etat=24;
  1301  001A7A  BE3B               	btfsc	main@n3+1,7,c
  1302  001A7C  D006               	goto	l3696
  1303  001A7E  0EF5               	movlw	245
  1304  001A80  5C3A               	subwf	main@n3,w,c
  1305  001A82  0E01               	movlw	1
  1306  001A84  583B               	subwfb	main@n3+1,w,c
  1307  001A86  B0D8               	btfsc	status,0,c
  1308  001A88  D066               	goto	l3714
  1309  001A8A                     l3696:
  1310                           
  1311                           ;main.c: 125: else if (n3 < 400) etat=22;
  1312  001A8A  BE3B               	btfsc	main@n3+1,7,c
  1313  001A8C  D78E               	goto	l3674
  1314  001A8E  0E90               	movlw	144
  1315  001A90  5C3A               	subwf	main@n3,w,c
  1316  001A92  0E01               	movlw	1
  1317  001A94  583B               	subwfb	main@n3+1,w,c
  1318  001A96  B0D8               	btfsc	status,0,c
  1319  001A98  D0B4               	goto	l3720
  1320  001A9A  D787               	goto	l3674
  1321  001A9C                     l3700:
  1322                           
  1323                           ;main.c: 128: pwm_setdc1(30*Vitesse);
  1324  001A9C  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1325  001AA0  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1326  001AA4  0E00               	movlw	0
  1327  001AA6  6E04               	movwf	___wmul@multiplicand+1,c
  1328  001AA8  0E1E               	movlw	30
  1329  001AAA  6E03               	movwf	___wmul@multiplicand,c
  1330  001AAC  ECED  F012         	call	___wmul	;wreg free
  1331  001AB0  C001  F007         	movff	?___wmul,pwm_setdc1@cycles_etat_haut
  1332  001AB4  C002  F008         	movff	?___wmul+1,pwm_setdc1@cycles_etat_haut+1
  1333  001AB8  ECC3  F012         	call	_pwm_setdc1	;wreg free
  1334                           
  1335                           ;main.c: 129: pwm_setdc2(150*Vitesse);
  1336  001ABC  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1337  001AC0  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1338  001AC4  0E00               	movlw	0
  1339  001AC6  6E04               	movwf	___wmul@multiplicand+1,c
  1340  001AC8  0E96               	movlw	150
  1341  001ACA  6E03               	movwf	___wmul@multiplicand,c
  1342  001ACC  ECED  F012         	call	___wmul	;wreg free
  1343  001AD0  C001  F007         	movff	?___wmul,pwm_setdc2@cycles_etat_haut
  1344  001AD4  C002  F008         	movff	?___wmul+1,pwm_setdc2@cycles_etat_haut+1
  1345  001AD8  ECAE  F012         	call	_pwm_setdc2	;wreg free
  1346                           
  1347                           ;main.c: 130: if (n3 > 600) etat=25;
  1348  001ADC  BE3B               	btfsc	main@n3+1,7,c
  1349  001ADE  D00A               	goto	l3706
  1350  001AE0  0E59               	movlw	89
  1351  001AE2  5C3A               	subwf	main@n3,w,c
  1352  001AE4  0E02               	movlw	2
  1353  001AE6  583B               	subwfb	main@n3+1,w,c
  1354  001AE8  A0D8               	btfss	status,0,c
  1355  001AEA  D004               	goto	l3706
  1356  001AEC  0E00               	movlw	0
  1357  001AEE  6E37               	movwf	main@etat+1,c
  1358  001AF0  0E19               	movlw	25
  1359  001AF2  D034               	goto	L19
  1360  001AF4                     l3706:
  1361                           
  1362                           ;main.c: 131: else if (n3 < 500) etat=23;
  1363  001AF4  BE3B               	btfsc	main@n3+1,7,c
  1364  001AF6  D791               	goto	l3684
  1365  001AF8  0EF4               	movlw	244
  1366  001AFA  5C3A               	subwf	main@n3,w,c
  1367  001AFC  0E01               	movlw	1
  1368  001AFE  583B               	subwfb	main@n3+1,w,c
  1369  001B00  B0D8               	btfsc	status,0,c
  1370  001B02  D07F               	goto	l3720
  1371  001B04  D78A               	goto	l3684
  1372  001B06                     l3710:
  1373                           
  1374                           ;main.c: 134: pwm_setdc1(000*Vitesse);
  1375  001B06  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1376  001B0A  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1377  001B0E  0E00               	movlw	0
  1378  001B10  6E04               	movwf	___wmul@multiplicand+1,c
  1379  001B12  0E00               	movlw	0
  1380  001B14  6E03               	movwf	___wmul@multiplicand,c
  1381  001B16  ECED  F012         	call	___wmul	;wreg free
  1382  001B1A  C001  F007         	movff	?___wmul,pwm_setdc1@cycles_etat_haut
  1383  001B1E  C002  F008         	movff	?___wmul+1,pwm_setdc1@cycles_etat_haut+1
  1384  001B22  ECC3  F012         	call	_pwm_setdc1	;wreg free
  1385                           
  1386                           ;main.c: 135: pwm_setdc2(150*Vitesse);
  1387  001B26  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1388  001B2A  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1389  001B2E  0E00               	movlw	0
  1390  001B30  6E04               	movwf	___wmul@multiplicand+1,c
  1391  001B32  0E96               	movlw	150
  1392  001B34  6E03               	movwf	___wmul@multiplicand,c
  1393  001B36  ECED  F012         	call	___wmul	;wreg free
  1394  001B3A  C001  F007         	movff	?___wmul,pwm_setdc2@cycles_etat_haut
  1395  001B3E  C002  F008         	movff	?___wmul+1,pwm_setdc2@cycles_etat_haut+1
  1396  001B42  ECAE  F012         	call	_pwm_setdc2	;wreg free
  1397                           
  1398                           ;main.c: 136: if (n3 < 600) etat=24;
  1399  001B46  BE3B               	btfsc	main@n3+1,7,c
  1400  001B48  D006               	goto	l3714
  1401  001B4A  0E58               	movlw	88
  1402  001B4C  5C3A               	subwf	main@n3,w,c
  1403  001B4E  0E02               	movlw	2
  1404  001B50  583B               	subwfb	main@n3+1,w,c
  1405  001B52  B0D8               	btfsc	status,0,c
  1406  001B54  D056               	goto	l3720
  1407  001B56                     l3714:
  1408  001B56  0E00               	movlw	0
  1409  001B58  6E37               	movwf	main@etat+1,c
  1410  001B5A  0E18               	movlw	24
  1411  001B5C                     L19:
  1412  001B5C  6E36               	movwf	main@etat,c
  1413                           
  1414                           ;main.c: 137: break;
  1415  001B5E  D051               	goto	l3720
  1416  001B60                     l3716:
  1417                           
  1418                           ;main.c: 141: pwm_setdc1(000*Vitesse);
  1419  001B60  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1420  001B64  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1421  001B68  0E00               	movlw	0
  1422  001B6A  6E04               	movwf	___wmul@multiplicand+1,c
  1423  001B6C  0E00               	movlw	0
  1424  001B6E  6E03               	movwf	___wmul@multiplicand,c
  1425  001B70  ECED  F012         	call	___wmul	;wreg free
  1426  001B74  C001  F007         	movff	?___wmul,pwm_setdc1@cycles_etat_haut
  1427  001B78  C002  F008         	movff	?___wmul+1,pwm_setdc1@cycles_etat_haut+1
  1428  001B7C  ECC3  F012         	call	_pwm_setdc1	;wreg free
  1429                           
  1430                           ;main.c: 142: pwm_setdc2(000*Vitesse);
  1431  001B80  C03C  F001         	movff	main@Vitesse,___wmul@multiplier
  1432  001B84  C03D  F002         	movff	main@Vitesse+1,___wmul@multiplier+1
  1433  001B88  0E00               	movlw	0
  1434  001B8A  6E04               	movwf	___wmul@multiplicand+1,c
  1435  001B8C  0E00               	movlw	0
  1436  001B8E  6E03               	movwf	___wmul@multiplicand,c
  1437  001B90  ECED  F012         	call	___wmul	;wreg free
  1438  001B94  C001  F007         	movff	?___wmul,pwm_setdc2@cycles_etat_haut
  1439  001B98  C002  F008         	movff	?___wmul+1,pwm_setdc2@cycles_etat_haut+1
  1440  001B9C  ECAE  F012         	call	_pwm_setdc2	;wreg free
  1441                           
  1442                           ;main.c: 143: }
  1443  001BA0  D030               	goto	l3720
  1444  001BA2                     l3718:
  1445  001BA2  C036  F02C         	movff	main@etat,??_main
  1446  001BA6  C037  F02D         	movff	main@etat+1,??_main+1
  1447                           
  1448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1449                           ; Switch size 1, requested type "space"
  1450                           ; Number of cases is 1, Range of values is 0 to 0
  1451                           ; switch strategies available:
  1452                           ; Name         Instructions Cycles
  1453                           ; simple_byte            4     3 (average)
  1454                           ;	Chosen strategy is simple_byte
  1455  001BAA  502D               	movf	??_main+1,w,c
  1456  001BAC  0A00               	xorlw	0	; case 0
  1457  001BAE  A4D8               	btfss	status,2,c
  1458  001BB0  D028               	goto	l3720
  1459                           
  1460                           ; Switch size 1, requested type "space"
  1461                           ; Number of cases is 13, Range of values is 0 to 31
  1462                           ; switch strategies available:
  1463                           ; Name         Instructions Cycles
  1464                           ; simple_byte           40    21 (average)
  1465                           ;	Chosen strategy is simple_byte
  1466  001BB2  502C               	movf	??_main,w,c
  1467  001BB4  0A00               	xorlw	0	; case 0
  1468  001BB6  B4D8               	btfsc	status,2,c
  1469  001BB8  D55F               	goto	l3604
  1470  001BBA  0A02               	xorlw	2	; case 2
  1471  001BBC  B4D8               	btfsc	status,2,c
  1472  001BBE  D5B0               	goto	l3624
  1473  001BC0  0A09               	xorlw	9	; case 11
  1474  001BC2  B4D8               	btfsc	status,2,c
  1475  001BC4  D5CD               	goto	l42
  1476  001BC6  0A07               	xorlw	7	; case 12
  1477  001BC8  B4D8               	btfsc	status,2,c
  1478  001BCA  D5FE               	goto	l3634
  1479  001BCC  0A01               	xorlw	1	; case 13
  1480  001BCE  B4D8               	btfsc	status,2,c
  1481  001BD0  D62F               	goto	l3644
  1482  001BD2  0A03               	xorlw	3	; case 14
  1483  001BD4  B4D8               	btfsc	status,2,c
  1484  001BD6  D65D               	goto	l3654
  1485  001BD8  0A01               	xorlw	1	; case 15
  1486  001BDA  B4D8               	btfsc	status,2,c
  1487  001BDC  D692               	goto	l3664
  1488  001BDE  0A1A               	xorlw	26	; case 21
  1489  001BE0  B4D8               	btfsc	status,2,c
  1490  001BE2  D6BB               	goto	l3670
  1491  001BE4  0A03               	xorlw	3	; case 22
  1492  001BE6  B4D8               	btfsc	status,2,c
  1493  001BE8  D6F0               	goto	l3680
  1494  001BEA  0A01               	xorlw	1	; case 23
  1495  001BEC  B4D8               	btfsc	status,2,c
  1496  001BEE  D725               	goto	l3690
  1497  001BF0  0A0F               	xorlw	15	; case 24
  1498  001BF2  B4D8               	btfsc	status,2,c
  1499  001BF4  D753               	goto	l3700
  1500  001BF6  0A01               	xorlw	1	; case 25
  1501  001BF8  B4D8               	btfsc	status,2,c
  1502  001BFA  D785               	goto	l3710
  1503  001BFC  0A06               	xorlw	6	; case 31
  1504  001BFE  B4D8               	btfsc	status,2,c
  1505  001C00  D7AF               	goto	l3716
  1506  001C02                     l3720:
  1507                           
  1508                           ;main.c: 147: lcd_position(0,0);
  1509  001C02  0E00               	movlw	0
  1510  001C04  6E03               	movwf	lcd_position@colonne,c
  1511  001C06  0E00               	movlw	0
  1512  001C08  EC34  F013         	call	_lcd_position
  1513                           
  1514                           ;main.c: 148: lcd_printf("%3d %3d %3d %3d",n1,n2,n3,n4);
  1515  001C0C  0E12               	movlw	low STR_1
  1516  001C0E  6E1B               	movwf	lcd_printf@f,c
  1517  001C10  0E08               	movlw	high STR_1
  1518  001C12  6E1C               	movwf	lcd_printf@f+1,c
  1519  001C14  C02E  F01D         	movff	main@n1,?_lcd_printf+2
  1520  001C18  C02F  F01E         	movff	main@n1+1,?_lcd_printf+3
  1521  001C1C  C038  F01F         	movff	main@n2,?_lcd_printf+4
  1522  001C20  C039  F020         	movff	main@n2+1,?_lcd_printf+5
  1523  001C24  C03A  F021         	movff	main@n3,?_lcd_printf+6
  1524  001C28  C03B  F022         	movff	main@n3+1,?_lcd_printf+7
  1525  001C2C  C030  F023         	movff	main@n4,?_lcd_printf+8
  1526  001C30  C031  F024         	movff	main@n4+1,?_lcd_printf+9
  1527  001C34  EC1C  F004         	call	_lcd_printf	;wreg free
  1528                           
  1529                           ;main.c: 149: lcd_position(1,0);
  1530  001C38  0E00               	movlw	0
  1531  001C3A  6E03               	movwf	lcd_position@colonne,c
  1532  001C3C  0E01               	movlw	1
  1533  001C3E  EC34  F013         	call	_lcd_position
  1534                           
  1535                           ;main.c: 150: lcd_printf("FDC%d",finDeCourse);
  1536  001C42  0E29               	movlw	low STR_2
  1537  001C44  6E1B               	movwf	lcd_printf@f,c
  1538  001C46  0E08               	movlw	high STR_2
  1539  001C48  6E1C               	movwf	lcd_printf@f+1,c
  1540  001C4A  C034  F01D         	movff	main@finDeCourse,?_lcd_printf+2
  1541  001C4E  C035  F01E         	movff	main@finDeCourse+1,?_lcd_printf+3
  1542  001C52  EC1C  F004         	call	_lcd_printf	;wreg free
  1543                           
  1544                           ;main.c: 151: lcd_position(1,6);
  1545  001C56  0E06               	movlw	6
  1546  001C58  6E03               	movwf	lcd_position@colonne,c
  1547  001C5A  0E01               	movlw	1
  1548  001C5C  EC34  F013         	call	_lcd_position
  1549                           
  1550                           ;main.c: 152: lcd_printf("%2d",etat);
  1551  001C60  0E2F               	movlw	low STR_3
  1552  001C62  6E1B               	movwf	lcd_printf@f,c
  1553  001C64  0E08               	movlw	high STR_3
  1554  001C66  6E1C               	movwf	lcd_printf@f+1,c
  1555  001C68  C036  F01D         	movff	main@etat,?_lcd_printf+2
  1556  001C6C  C037  F01E         	movff	main@etat+1,?_lcd_printf+3
  1557  001C70  EC1C  F004         	call	_lcd_printf	;wreg free
  1558                           
  1559                           ;main.c: 153: lcd_position(1,9);
  1560  001C74  0E09               	movlw	9
  1561  001C76  6E03               	movwf	lcd_position@colonne,c
  1562  001C78  0E01               	movlw	1
  1563  001C7A  EC34  F013         	call	_lcd_position
  1564                           
  1565                           ;main.c: 154: lcd_printf("Jack%d",debutDeCourse);
  1566  001C7E  0E22               	movlw	low STR_4
  1567  001C80  6E1B               	movwf	lcd_printf@f,c
  1568  001C82  0E08               	movlw	high STR_4
  1569  001C84  6E1C               	movwf	lcd_printf@f+1,c
  1570  001C86  C032  F01D         	movff	main@debutDeCourse,?_lcd_printf+2
  1571  001C8A  C033  F01E         	movff	main@debutDeCourse+1,?_lcd_printf+3
  1572  001C8E  EC1C  F004         	call	_lcd_printf	;wreg free
  1573  001C92  D49F               	goto	l3578
  1574  001C94                     __end_of_main:
  1575                           	opt stack 0
  1576                           tblptru	equ	0xFF8
  1577                           status	equ	0xFD8
  1578                           
  1579 ;; *************** function _pwm_setdc2 *****************
  1580 ;; Defined at:
  1581 ;;		line 102 in file "iut_pwm.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  cycles_etat_    2    6[COMRAM] unsigned int 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1595 ;;      Params:         2       0       0       0       0       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1597 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1598 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1599 ;;Total ram usage:        4 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text1
  1609  00255C                     __ptext1:
  1610                           	opt stack 0
  1611  00255C                     _pwm_setdc2:
  1612                           	opt stack 30
  1613                           
  1614                           ;iut_pwm.c: 103: CCPR2L = cycles_etat_haut >> 2;
  1615                           
  1616                           ;incstack = 0
  1617  00255C  C007  F009         	movff	pwm_setdc2@cycles_etat_haut,??_pwm_setdc2
  1618  002560  C008  F00A         	movff	pwm_setdc2@cycles_etat_haut+1,??_pwm_setdc2+1
  1619  002564  90D8               	bcf	status,0,c
  1620  002566  320A               	rrcf	??_pwm_setdc2+1,f,c
  1621  002568  3209               	rrcf	??_pwm_setdc2,f,c
  1622  00256A  90D8               	bcf	status,0,c
  1623  00256C  320A               	rrcf	??_pwm_setdc2+1,f,c
  1624  00256E  3209               	rrcf	??_pwm_setdc2,f,c
  1625  002570  5009               	movf	??_pwm_setdc2,w,c
  1626  002572  6EBB               	movwf	4027,c	;volatile
  1627                           
  1628                           ;iut_pwm.c: 104: CCP2CONbits.DC2B = cycles_etat_haut;
  1629  002574  C007  F009         	movff	pwm_setdc2@cycles_etat_haut,??_pwm_setdc2
  1630  002578  3A09               	swapf	??_pwm_setdc2,f,c
  1631  00257A  50BA               	movf	4026,w,c	;volatile
  1632  00257C  1809               	xorwf	??_pwm_setdc2,w,c
  1633  00257E  0BCF               	andlw	-49
  1634  002580  1809               	xorwf	??_pwm_setdc2,w,c
  1635  002582  6EBA               	movwf	4026,c	;volatile
  1636  002584  0012               	return		;funcret
  1637  002586                     __end_of_pwm_setdc2:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           status	equ	0xFD8
  1641                           
  1642 ;; *************** function _pwm_setdc1 *****************
  1643 ;; Defined at:
  1644 ;;		line 87 in file "iut_pwm.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  cycles_etat_    2    6[COMRAM] unsigned int 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1658 ;;      Params:         2       0       0       0       0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1660 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1661 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1662 ;;Total ram usage:        4 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text2
  1672  002586                     __ptext2:
  1673                           	opt stack 0
  1674  002586                     _pwm_setdc1:
  1675                           	opt stack 30
  1676                           
  1677                           ;iut_pwm.c: 88: CCPR1L = cycles_etat_haut >> 2;
  1678                           
  1679                           ;incstack = 0
  1680  002586  C007  F009         	movff	pwm_setdc1@cycles_etat_haut,??_pwm_setdc1
  1681  00258A  C008  F00A         	movff	pwm_setdc1@cycles_etat_haut+1,??_pwm_setdc1+1
  1682  00258E  90D8               	bcf	status,0,c
  1683  002590  320A               	rrcf	??_pwm_setdc1+1,f,c
  1684  002592  3209               	rrcf	??_pwm_setdc1,f,c
  1685  002594  90D8               	bcf	status,0,c
  1686  002596  320A               	rrcf	??_pwm_setdc1+1,f,c
  1687  002598  3209               	rrcf	??_pwm_setdc1,f,c
  1688  00259A  5009               	movf	??_pwm_setdc1,w,c
  1689  00259C  6EBE               	movwf	4030,c	;volatile
  1690                           
  1691                           ;iut_pwm.c: 89: CCP1CONbits.DC1B = cycles_etat_haut;
  1692  00259E  C007  F009         	movff	pwm_setdc1@cycles_etat_haut,??_pwm_setdc1
  1693  0025A2  3A09               	swapf	??_pwm_setdc1,f,c
  1694  0025A4  50BD               	movf	4029,w,c	;volatile
  1695  0025A6  1809               	xorwf	??_pwm_setdc1,w,c
  1696  0025A8  0BCF               	andlw	-49
  1697  0025AA  1809               	xorwf	??_pwm_setdc1,w,c
  1698  0025AC  6EBD               	movwf	4029,c	;volatile
  1699  0025AE  0012               	return		;funcret
  1700  0025B0                     __end_of_pwm_setdc1:
  1701                           	opt stack 0
  1702                           tblptru	equ	0xFF8
  1703                           status	equ	0xFD8
  1704                           
  1705 ;; *************** function _pwm_init *****************
  1706 ;; Defined at:
  1707 ;;		line 51 in file "iut_pwm.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  period          1    wreg     unsigned char 
  1710 ;;  nb_canaux       1    0[COMRAM] unsigned char 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  period          1    1[COMRAM] unsigned char 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1722 ;;      Params:         1       0       0       0       0       0       0       0       0
  1723 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1725 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1726 ;;Total ram usage:        2 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text3
  1736  0024F8                     __ptext3:
  1737                           	opt stack 0
  1738  0024F8                     _pwm_init:
  1739                           	opt stack 30
  1740                           
  1741                           ;incstack = 0
  1742                           ;pwm_init@period stored from wreg
  1743  0024F8  6E02               	movwf	pwm_init@period,c
  1744                           
  1745                           ;iut_pwm.c: 52: T2CON = 1;
  1746  0024FA  0E01               	movlw	1
  1747  0024FC  6ECA               	movwf	4042,c	;volatile
  1748                           
  1749                           ;iut_pwm.c: 53: if (nb_canaux >= 1) {
  1750  0024FE  5001               	movf	pwm_init@nb_canaux,w,c
  1751  002500  B4D8               	btfsc	status,2,c
  1752  002502  D004               	goto	l2984
  1753                           
  1754                           ;iut_pwm.c: 54: CCP1CON = 0b00001100;
  1755  002504  0E0C               	movlw	12
  1756  002506  6EBD               	movwf	4029,c	;volatile
  1757                           
  1758                           ;iut_pwm.c: 55: TRISCbits.TRISC2 = 0;
  1759  002508  9494               	bcf	3988,2,c	;volatile
  1760                           
  1761                           ;iut_pwm.c: 56: } else {
  1762  00250A  D002               	goto	l2986
  1763  00250C                     l2984:
  1764                           
  1765                           ;iut_pwm.c: 57: CCP1CON = 0;
  1766  00250C  0E00               	movlw	0
  1767  00250E  6EBD               	movwf	4029,c	;volatile
  1768  002510                     l2986:
  1769                           
  1770                           ;iut_pwm.c: 58: }
  1771                           ;iut_pwm.c: 59: if (nb_canaux >= 2) {
  1772  002510  0E01               	movlw	1
  1773  002512  6401               	cpfsgt	pwm_init@nb_canaux,c
  1774  002514  D004               	goto	l2992
  1775                           
  1776                           ;iut_pwm.c: 60: CCP2CON = 0b00001100;
  1777  002516  0E0C               	movlw	12
  1778  002518  6EBA               	movwf	4026,c	;volatile
  1779                           
  1780                           ;iut_pwm.c: 61: TRISCbits.TRISC1 = 0;
  1781  00251A  9294               	bcf	3988,1,c	;volatile
  1782                           
  1783                           ;iut_pwm.c: 62: } else {
  1784  00251C  D002               	goto	l2994
  1785  00251E                     l2992:
  1786                           
  1787                           ;iut_pwm.c: 63: CCP2CON = 0;
  1788  00251E  0E00               	movlw	0
  1789  002520  6EBA               	movwf	4026,c	;volatile
  1790  002522                     l2994:
  1791                           
  1792                           ;iut_pwm.c: 64: }
  1793                           ;iut_pwm.c: 65: PR2 = period;
  1794  002522  C002  FFCB         	movff	pwm_init@period,4043	;volatile
  1795                           
  1796                           ;iut_pwm.c: 66: if (nb_canaux > 0) {
  1797  002526  5001               	movf	pwm_init@nb_canaux,w,c
  1798  002528  B4D8               	btfsc	status,2,c
  1799  00252A  0012               	return	
  1800                           
  1801                           ;iut_pwm.c: 67: T2CONbits.TMR2ON = 1;
  1802  00252C  84CA               	bsf	4042,2,c	;volatile
  1803  00252E  0012               	return	
  1804  002530                     __end_of_pwm_init:
  1805                           	opt stack 0
  1806                           tblptru	equ	0xFF8
  1807                           status	equ	0xFD8
  1808                           
  1809 ;; *************** function _lcd_printf *****************
  1810 ;; Defined at:
  1811 ;;		line 220 in file "iut_lcd.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  f               2   26[COMRAM] PTR const unsigned char 
  1814 ;;		 -> STR_6(3), STR_5(3), STR_4(7), STR_3(4), 
  1815 ;;		 -> STR_2(6), STR_1(16), 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  x               3   54[BANK0 ] float 
  1818 ;;  k               2   41[BANK0 ] unsigned int 
  1819 ;;  w               1   46[BANK0 ] unsigned char 
  1820 ;;  i               1   45[BANK0 ] unsigned char 
  1821 ;;  have_sign       1   43[BANK0 ] unsigned char 
  1822 ;;  sign            1   40[BANK0 ] unsigned char 
  1823 ;;  buf            33    0[BANK0 ] unsigned char [33]
  1824 ;;  q               2   38[BANK0 ] PTR unsigned char 
  1825 ;;		 -> lcd_printf@buf(33), 
  1826 ;;  digit_cnt       1   47[BANK0 ] unsigned char 
  1827 ;;  prefix_cnt      1   44[BANK0 ] unsigned char 
  1828 ;;  sign_char       1   35[BANK0 ] unsigned char 
  1829 ;;  larg            4   48[BANK0 ] unsigned long 
  1830 ;;  n               2   59[BANK0 ] int 
  1831 ;;  romstring       2   36[BANK0 ] PTR far unsigned char 
  1832 ;;  ramstring       2   33[BANK0 ] PTR unsigned char 
  1833 ;;  width           1   65[BANK0 ] unsigned char 
  1834 ;;  precision       1   64[BANK0 ] unsigned char 
  1835 ;;  flags           1   63[BANK0 ] unsigned char 
  1836 ;;  cval            1   58[BANK0 ] unsigned char 
  1837 ;;  space_cnt       1   57[BANK0 ] unsigned char 
  1838 ;;  have_precisi    1   53[BANK0 ] unsigned char 
  1839 ;;  size            1   52[BANK0 ] unsigned char 
  1840 ;;  ap              2   61[BANK0 ] PTR void [1]
  1841 ;;		 -> ?_lcd_printf(1), 
  1842 ;;  c               1   66[BANK0 ] unsigned char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1852 ;;      Params:        10       0       0       0       0       0       0       0       0
  1853 ;;      Locals:         0      67       0       0       0       0       0       0       0
  1854 ;;      Temps:          7       0       0       0       0       0       0       0       0
  1855 ;;      Totals:        17      67       0       0       0       0       0       0       0
  1856 ;;Total ram usage:       84 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    5
  1859 ;; This function calls:
  1860 ;;		___ftadd
  1861 ;;		___ftdiv
  1862 ;;		___ftge
  1863 ;;		___ftmul
  1864 ;;		___ftneg
  1865 ;;		___fttol
  1866 ;;		___lldiv
  1867 ;;		___llmod
  1868 ;;		___lwtoft
  1869 ;;		_lcd_putc
  1870 ;;		_lcd_repete_n
  1871 ;;		_lcd_write_data_busy
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;;		_lcd_puti
  1875 ;;		_lcd_putrs
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text4
  1880  000838                     __ptext4:
  1881                           	opt stack 0
  1882  000838                     _lcd_printf:
  1883                           	opt stack 25
  1884                           
  1885                           ;iut_lcd.c: 221: va_list ap;
  1886                           ;iut_lcd.c: 222: unsigned char c;
  1887                           ;iut_lcd.c: 225: *ap = __va_start();
  1888                           
  1889                           ;incstack = 0
  1890  000838  0E1D               	movlw	low (?_lcd_printf+2)
  1891  00083A  0100               	movlb	0	; () banked
  1892  00083C  6F9D               	movwf	lcd_printf@ap& (0+255),b
  1893  00083E  0E00               	movlw	high (?_lcd_printf+2)
  1894  000840  0100               	movlb	0	; () banked
  1895  000842  6F9E               	movwf	(lcd_printf@ap+1)& (0+255),b
  1896  000844  EFC8  F00A         	goto	L21
  1897  000848                     l3008:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;iut_lcd.c: 227: if (c == '%') {
  1901  000848  0E25               	movlw	37
  1902  00084A  0100               	movlb	0	; () banked
  1903  00084C  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  1904  00084E  A4D8               	btfss	status,2,c
  1905  000850  EFC2  F00A         	goto	l3554
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;iut_lcd.c: 228: unsigned char flags = 0;
  1909  000854  0E00               	movlw	0
  1910  000856  0100               	movlb	0	; () banked
  1911  000858  6F9F               	movwf	lcd_printf@flags& (0+255),b
  1912                           
  1913                           ;iut_lcd.c: 229: unsigned char width = 0;
  1914  00085A  0E00               	movlw	0
  1915  00085C  0100               	movlb	0	; () banked
  1916  00085E  6FA1               	movwf	lcd_printf@width& (0+255),b
  1917                           
  1918                           ;iut_lcd.c: 230: unsigned char precision = 0;
  1919  000860  0E00               	movlw	0
  1920  000862  0100               	movlb	0	; () banked
  1921  000864  6FA0               	movwf	lcd_printf@precision& (0+255),b
  1922                           
  1923                           ;iut_lcd.c: 231: unsigned char have_precision = 0;
  1924  000866  0E00               	movlw	0
  1925  000868  0100               	movlb	0	; () banked
  1926  00086A  6F95               	movwf	lcd_printf@have_precision& (0+255),b
  1927                           
  1928                           ;iut_lcd.c: 232: unsigned char size = 0;
  1929  00086C  0E00               	movlw	0
  1930  00086E  0100               	movlb	0	; () banked
  1931  000870  6F94               	movwf	lcd_printf@size& (0+255),b
  1932  000872  D020               	goto	l3028
  1933  000874                     l3014:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;iut_lcd.c: 278: flags |= 0x1;
  1937  000874  0100               	movlb	0	; () banked
  1938  000876  819F               	bsf	lcd_printf@flags& (0+255),0,b
  1939                           
  1940                           ;iut_lcd.c: 279: break;
  1941  000878  D01D               	goto	l3028
  1942  00087A                     l3016:
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;iut_lcd.c: 281: flags |= 0x2;
  1946  00087A  0100               	movlb	0	; () banked
  1947  00087C  839F               	bsf	lcd_printf@flags& (0+255),1,b
  1948                           
  1949                           ;iut_lcd.c: 282: break;
  1950  00087E  D01A               	goto	l3028
  1951  000880                     l3018:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;iut_lcd.c: 284: flags |= 0x4;
  1955  000880  0100               	movlb	0	; () banked
  1956  000882  859F               	bsf	lcd_printf@flags& (0+255),2,b
  1957                           
  1958                           ;iut_lcd.c: 285: break;
  1959  000884  D017               	goto	l3028
  1960  000886                     l3020:
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;iut_lcd.c: 287: flags |= 0x8;
  1964  000886  0100               	movlb	0	; () banked
  1965  000888  879F               	bsf	lcd_printf@flags& (0+255),3,b
  1966                           
  1967                           ;iut_lcd.c: 288: break;
  1968  00088A  D014               	goto	l3028
  1969  00088C                     l3022:
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;iut_lcd.c: 290: flags |= 0x10;
  1973  00088C  0100               	movlb	0	; () banked
  1974  00088E  899F               	bsf	lcd_printf@flags& (0+255),4,b
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;iut_lcd.c: 292: }
  1978                           
  1979                           ;iut_lcd.c: 291: break;
  1980  000890  D011               	goto	l3028
  1981  000892                     l3026:
  1982                           
  1983                           ; BSR set to: 0
  1984  000892  0100               	movlb	0	; () banked
  1985  000894  51A2               	movf	lcd_printf@c& (0+255),w,b
  1986                           
  1987                           ; Switch size 1, requested type "space"
  1988                           ; Number of cases is 5, Range of values is 32 to 48
  1989                           ; switch strategies available:
  1990                           ; Name         Instructions Cycles
  1991                           ; simple_byte           16     9 (average)
  1992                           ;	Chosen strategy is simple_byte
  1993  000896  0A20               	xorlw	32	; case 32
  1994  000898  B4D8               	btfsc	status,2,c
  1995  00089A  D7F2               	goto	l3018
  1996  00089C  0A03               	xorlw	3	; case 35
  1997  00089E  B4D8               	btfsc	status,2,c
  1998  0008A0  D7F2               	goto	l3020
  1999  0008A2  0A08               	xorlw	8	; case 43
  2000  0008A4  B4D8               	btfsc	status,2,c
  2001  0008A6  D7E9               	goto	l3016
  2002  0008A8  0A06               	xorlw	6	; case 45
  2003  0008AA  B4D8               	btfsc	status,2,c
  2004  0008AC  D7E3               	goto	l3014
  2005  0008AE  0A1D               	xorlw	29	; case 48
  2006  0008B0  B4D8               	btfsc	status,2,c
  2007  0008B2  D7EC               	goto	l3022
  2008  0008B4                     l3028:
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;iut_lcd.c: 293: c = *++f;
  2012  0008B4  4A1B               	infsnz	lcd_printf@f,f,c
  2013  0008B6  2A1C               	incf	lcd_printf@f+1,f,c
  2014  0008B8  C01B  FFF6         	movff	lcd_printf@f,tblptrl
  2015  0008BC  C01C  FFF7         	movff	lcd_printf@f+1,tblptrh
  2016  0008C0                     	if	0	;tblptru may be non-zero
  2017  0008C0                     	endif
  2018  0008C0                     	if	0	;tblptru may be non-zero
  2019  0008C0                     	endif
  2020  0008C0  0008               	tblrd		*
  2021  0008C2  CFF5 F0A2          	movff	tablat,lcd_printf@c
  2022                           
  2023                           ; BSR set to: 0
  2024                           
  2025                           ; BSR set to: 0
  2026  0008C6  0E2D               	movlw	45
  2027  0008C8  0100               	movlb	0	; () banked
  2028  0008CA  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2029  0008CC  B4D8               	btfsc	status,2,c
  2030  0008CE  D7E1               	goto	l3026
  2031                           
  2032                           ; BSR set to: 0
  2033  0008D0  0E2B               	movlw	43
  2034  0008D2  0100               	movlb	0	; () banked
  2035  0008D4  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2036  0008D6  B4D8               	btfsc	status,2,c
  2037  0008D8  D7DC               	goto	l3026
  2038                           
  2039                           ; BSR set to: 0
  2040  0008DA  0E20               	movlw	32
  2041  0008DC  0100               	movlb	0	; () banked
  2042  0008DE  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2043  0008E0  B4D8               	btfsc	status,2,c
  2044  0008E2  D7D7               	goto	l3026
  2045                           
  2046                           ; BSR set to: 0
  2047  0008E4  0E23               	movlw	35
  2048  0008E6  0100               	movlb	0	; () banked
  2049  0008E8  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2050  0008EA  B4D8               	btfsc	status,2,c
  2051  0008EC  D7D2               	goto	l3026
  2052                           
  2053                           ; BSR set to: 0
  2054  0008EE  0E30               	movlw	48
  2055  0008F0  0100               	movlb	0	; () banked
  2056  0008F2  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2057  0008F4  B4D8               	btfsc	status,2,c
  2058  0008F6  D7CD               	goto	l3026
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;iut_lcd.c: 294: }
  2062                           ;iut_lcd.c: 296: if (c == '*') {
  2063                           
  2064                           ; BSR set to: 0
  2065  0008F8  0E2A               	movlw	42
  2066  0008FA  0100               	movlb	0	; () banked
  2067  0008FC  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2068  0008FE  A4D8               	btfss	status,2,c
  2069  000900  D024               	goto	l3054
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;iut_lcd.c: 297: n = (*(int *)__va_arg((*(int **)ap), (int)0));
  2073  000902  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2074  000906  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2075  00090A  CFDE F09B          	movff	postinc2,lcd_printf@n
  2076  00090E  CFDD F09C          	movff	postdec2,lcd_printf@n+1
  2077                           
  2078                           ; BSR set to: 0
  2079  000912  0E02               	movlw	2
  2080  000914  0100               	movlb	0	; () banked
  2081  000916  279D               	addwf	lcd_printf@ap& (0+255),f,b
  2082  000918  0E00               	movlw	0
  2083  00091A  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;iut_lcd.c: 298: if (n < 0) {
  2087  00091C  0100               	movlb	0	; () banked
  2088  00091E  AF9C               	btfss	(lcd_printf@n+1)& (0+255),7,b
  2089  000920  D008               	goto	l184
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;iut_lcd.c: 299: flags |= 0x1;
  2093  000922  0100               	movlb	0	; () banked
  2094  000924  819F               	bsf	lcd_printf@flags& (0+255),0,b
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;iut_lcd.c: 300: width = -n;
  2098  000926  0100               	movlb	0	; () banked
  2099  000928  519B               	movf	lcd_printf@n& (0+255),w,b
  2100  00092A  0800               	sublw	0
  2101  00092C  0100               	movlb	0	; () banked
  2102  00092E  6FA1               	movwf	lcd_printf@width& (0+255),b
  2103                           
  2104                           ;iut_lcd.c: 301: } else
  2105  000930  D002               	goto	l3052
  2106  000932                     l184:
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;iut_lcd.c: 302: width = n;
  2110  000932  C09B  F0A1         	movff	lcd_printf@n,lcd_printf@width
  2111  000936                     l3052:
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;iut_lcd.c: 303: c = *++f;
  2115  000936  4A1B               	infsnz	lcd_printf@f,f,c
  2116  000938  2A1C               	incf	lcd_printf@f+1,f,c
  2117  00093A  C01B  FFF6         	movff	lcd_printf@f,tblptrl
  2118  00093E  C01C  FFF7         	movff	lcd_printf@f+1,tblptrh
  2119  000942                     	if	0	;tblptru may be non-zero
  2120  000942                     	endif
  2121  000942                     	if	0	;tblptru may be non-zero
  2122  000942                     	endif
  2123  000942  0008               	tblrd		*
  2124  000944  CFF5 F0A2          	movff	tablat,lcd_printf@c
  2125                           
  2126                           ;iut_lcd.c: 304: } else {
  2127  000948  D020               	goto	l186
  2128  00094A                     l3054:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;iut_lcd.c: 305: cval = 0;
  2132  00094A  0E00               	movlw	0
  2133  00094C  0100               	movlb	0	; () banked
  2134  00094E  6F9A               	movwf	lcd_printf@cval& (0+255),b
  2135                           
  2136                           ;iut_lcd.c: 306: while ((c >= '0') && (c <= '9')) {
  2137  000950  D012               	goto	l3060
  2138  000952                     l3056:
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;iut_lcd.c: 307: cval = cval * 10 + c - '0';
  2142  000952  0100               	movlb	0	; () banked
  2143  000954  519A               	movf	lcd_printf@cval& (0+255),w,b
  2144  000956  0D0A               	mullw	10
  2145  000958  50F3               	movf	prodl,w,c
  2146  00095A  0100               	movlb	0	; () banked
  2147  00095C  25A2               	addwf	lcd_printf@c& (0+255),w,b
  2148  00095E  0FD0               	addlw	208
  2149  000960  0100               	movlb	0	; () banked
  2150  000962  6F9A               	movwf	lcd_printf@cval& (0+255),b
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;iut_lcd.c: 308: c = *++f;
  2154  000964  4A1B               	infsnz	lcd_printf@f,f,c
  2155  000966  2A1C               	incf	lcd_printf@f+1,f,c
  2156  000968  C01B  FFF6         	movff	lcd_printf@f,tblptrl
  2157  00096C  C01C  FFF7         	movff	lcd_printf@f+1,tblptrh
  2158  000970                     	if	0	;tblptru may be non-zero
  2159  000970                     	endif
  2160  000970                     	if	0	;tblptru may be non-zero
  2161  000970                     	endif
  2162  000970  0008               	tblrd		*
  2163  000972  CFF5 F0A2          	movff	tablat,lcd_printf@c
  2164  000976                     l3060:
  2165                           
  2166                           ; BSR set to: 0
  2167  000976  0E2F               	movlw	47
  2168  000978  0100               	movlb	0	; () banked
  2169  00097A  65A2               	cpfsgt	lcd_printf@c& (0+255),b
  2170  00097C  D004               	goto	l191
  2171                           
  2172                           ; BSR set to: 0
  2173  00097E  0E39               	movlw	57
  2174  000980  0100               	movlb	0	; () banked
  2175  000982  65A2               	cpfsgt	lcd_printf@c& (0+255),b
  2176  000984  D7E6               	goto	l3056
  2177  000986                     l191:
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;iut_lcd.c: 309: }
  2181                           ;iut_lcd.c: 310: width = cval;
  2182  000986  C09A  F0A1         	movff	lcd_printf@cval,lcd_printf@width
  2183  00098A                     l186:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;iut_lcd.c: 311: }
  2187                           ;iut_lcd.c: 314: if (flags & 0x1)
  2188  00098A  0100               	movlb	0	; () banked
  2189  00098C  A19F               	btfss	lcd_printf@flags& (0+255),0,b
  2190  00098E  D002               	goto	l3066
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;iut_lcd.c: 315: flags &= ~0x10;
  2194  000990  0100               	movlb	0	; () banked
  2195  000992  999F               	bcf	lcd_printf@flags& (0+255),4,b
  2196  000994                     l3066:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;iut_lcd.c: 318: if (c == '.') {
  2200  000994  0E2E               	movlw	46
  2201  000996  0100               	movlb	0	; () banked
  2202  000998  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2203  00099A  A4D8               	btfss	status,2,c
  2204  00099C  D050               	goto	l3096
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;iut_lcd.c: 319: c = *++f;
  2208  00099E  4A1B               	infsnz	lcd_printf@f,f,c
  2209  0009A0  2A1C               	incf	lcd_printf@f+1,f,c
  2210  0009A2  C01B  FFF6         	movff	lcd_printf@f,tblptrl
  2211  0009A6  C01C  FFF7         	movff	lcd_printf@f+1,tblptrh
  2212  0009AA                     	if	0	;tblptru may be non-zero
  2213  0009AA                     	endif
  2214  0009AA                     	if	0	;tblptru may be non-zero
  2215  0009AA                     	endif
  2216  0009AA  0008               	tblrd		*
  2217  0009AC  CFF5 F0A2          	movff	tablat,lcd_printf@c
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;iut_lcd.c: 320: if (c == '*') {
  2221  0009B0  0E2A               	movlw	42
  2222  0009B2  0100               	movlb	0	; () banked
  2223  0009B4  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2224  0009B6  A4D8               	btfss	status,2,c
  2225  0009B8  D01F               	goto	l3084
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;iut_lcd.c: 321: n = (*(int *)__va_arg((*(int **)ap), (int)0));
  2229  0009BA  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2230  0009BE  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2231  0009C2  CFDE F09B          	movff	postinc2,lcd_printf@n
  2232  0009C6  CFDD F09C          	movff	postdec2,lcd_printf@n+1
  2233                           
  2234                           ; BSR set to: 0
  2235  0009CA  0E02               	movlw	2
  2236  0009CC  0100               	movlb	0	; () banked
  2237  0009CE  279D               	addwf	lcd_printf@ap& (0+255),f,b
  2238  0009D0  0E00               	movlw	0
  2239  0009D2  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;iut_lcd.c: 322: if (n >= 0) {
  2243  0009D4  0100               	movlb	0	; () banked
  2244  0009D6  BF9C               	btfsc	(lcd_printf@n+1)& (0+255),7,b
  2245  0009D8  D005               	goto	l3082
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;iut_lcd.c: 323: precision = n;
  2249  0009DA  C09B  F0A0         	movff	lcd_printf@n,lcd_printf@precision
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;iut_lcd.c: 324: have_precision = 1;
  2253  0009DE  0E01               	movlw	1
  2254  0009E0  0100               	movlb	0	; () banked
  2255  0009E2  6F95               	movwf	lcd_printf@have_precision& (0+255),b
  2256  0009E4                     l3082:
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;iut_lcd.c: 325: }
  2260                           ;iut_lcd.c: 326: c = *++f;
  2261  0009E4  4A1B               	infsnz	lcd_printf@f,f,c
  2262  0009E6  2A1C               	incf	lcd_printf@f+1,f,c
  2263  0009E8  C01B  FFF6         	movff	lcd_printf@f,tblptrl
  2264  0009EC  C01C  FFF7         	movff	lcd_printf@f+1,tblptrh
  2265  0009F0                     	if	0	;tblptru may be non-zero
  2266  0009F0                     	endif
  2267  0009F0                     	if	0	;tblptru may be non-zero
  2268  0009F0                     	endif
  2269  0009F0  0008               	tblrd		*
  2270  0009F2  CFF5 F0A2          	movff	tablat,lcd_printf@c
  2271                           
  2272                           ;iut_lcd.c: 327: } else {
  2273  0009F6  D023               	goto	l3096
  2274  0009F8                     l3084:
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;iut_lcd.c: 328: cval = 0;
  2278  0009F8  0E00               	movlw	0
  2279  0009FA  0100               	movlb	0	; () banked
  2280  0009FC  6F9A               	movwf	lcd_printf@cval& (0+255),b
  2281                           
  2282                           ;iut_lcd.c: 329: while ((c >= '0') && (c <= '9')) {
  2283  0009FE  D012               	goto	l3090
  2284  000A00                     l3086:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;iut_lcd.c: 330: cval = cval * 10 + c - '0';
  2288  000A00  0100               	movlb	0	; () banked
  2289  000A02  519A               	movf	lcd_printf@cval& (0+255),w,b
  2290  000A04  0D0A               	mullw	10
  2291  000A06  50F3               	movf	prodl,w,c
  2292  000A08  0100               	movlb	0	; () banked
  2293  000A0A  25A2               	addwf	lcd_printf@c& (0+255),w,b
  2294  000A0C  0FD0               	addlw	208
  2295  000A0E  0100               	movlb	0	; () banked
  2296  000A10  6F9A               	movwf	lcd_printf@cval& (0+255),b
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;iut_lcd.c: 331: c = *++f;
  2300  000A12  4A1B               	infsnz	lcd_printf@f,f,c
  2301  000A14  2A1C               	incf	lcd_printf@f+1,f,c
  2302  000A16  C01B  FFF6         	movff	lcd_printf@f,tblptrl
  2303  000A1A  C01C  FFF7         	movff	lcd_printf@f+1,tblptrh
  2304  000A1E                     	if	0	;tblptru may be non-zero
  2305  000A1E                     	endif
  2306  000A1E                     	if	0	;tblptru may be non-zero
  2307  000A1E                     	endif
  2308  000A1E  0008               	tblrd		*
  2309  000A20  CFF5 F0A2          	movff	tablat,lcd_printf@c
  2310  000A24                     l3090:
  2311                           
  2312                           ; BSR set to: 0
  2313  000A24  0E2F               	movlw	47
  2314  000A26  0100               	movlb	0	; () banked
  2315  000A28  65A2               	cpfsgt	lcd_printf@c& (0+255),b
  2316  000A2A  D004               	goto	l201
  2317                           
  2318                           ; BSR set to: 0
  2319  000A2C  0E39               	movlw	57
  2320  000A2E  0100               	movlb	0	; () banked
  2321  000A30  65A2               	cpfsgt	lcd_printf@c& (0+255),b
  2322  000A32  D7E6               	goto	l3086
  2323  000A34                     l201:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;iut_lcd.c: 332: }
  2327                           ;iut_lcd.c: 333: precision = cval;
  2328  000A34  C09A  F0A0         	movff	lcd_printf@cval,lcd_printf@precision
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;iut_lcd.c: 334: have_precision = 1;
  2332  000A38  0E01               	movlw	1
  2333  000A3A  0100               	movlb	0	; () banked
  2334  000A3C  6F95               	movwf	lcd_printf@have_precision& (0+255),b
  2335  000A3E                     l3096:
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;iut_lcd.c: 335: }
  2339                           ;iut_lcd.c: 336: }
  2340                           ;iut_lcd.c: 340: if (c == 'h') {
  2341  000A3E  0E68               	movlw	104
  2342  000A40  0100               	movlb	0	; () banked
  2343  000A42  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2344  000A44  A4D8               	btfss	status,2,c
  2345  000A46  D011               	goto	l3106
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;iut_lcd.c: 341: c = *++f;
  2349  000A48  4A1B               	infsnz	lcd_printf@f,f,c
  2350  000A4A  2A1C               	incf	lcd_printf@f+1,f,c
  2351  000A4C  C01B  FFF6         	movff	lcd_printf@f,tblptrl
  2352  000A50  C01C  FFF7         	movff	lcd_printf@f+1,tblptrh
  2353  000A54                     	if	0	;tblptru may be non-zero
  2354  000A54                     	endif
  2355  000A54                     	if	0	;tblptru may be non-zero
  2356  000A54                     	endif
  2357  000A54  0008               	tblrd		*
  2358  000A56  CFF5 F0A2          	movff	tablat,lcd_printf@c
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;iut_lcd.c: 344: if (c == 'h') {
  2362  000A5A  0E68               	movlw	104
  2363  000A5C  0100               	movlb	0	; () banked
  2364  000A5E  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2365  000A60  A4D8               	btfss	status,2,c
  2366  000A62  EF86  F00A         	goto	l3552
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;iut_lcd.c: 345: size = 3;
  2370  000A66  0E03               	movlw	3
  2371  000A68  D032               	goto	L22
  2372  000A6A                     l3106:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;iut_lcd.c: 350: else if (c == 't' || c == 'z')
  2376  000A6A  0E74               	movlw	116
  2377  000A6C  0100               	movlb	0	; () banked
  2378  000A6E  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2379  000A70  B4D8               	btfsc	status,2,c
  2380  000A72  D016               	goto	l3120
  2381                           
  2382                           ; BSR set to: 0
  2383  000A74  0E7A               	movlw	122
  2384  000A76  0100               	movlb	0	; () banked
  2385  000A78  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2386  000A7A  B4D8               	btfsc	status,2,c
  2387  000A7C  D011               	goto	l3120
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;iut_lcd.c: 354: else if (c == 'H' || c == 'T' || c == 'Z') {
  2391                           
  2392                           ; BSR set to: 0
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;iut_lcd.c: 351: c = *++f;
  2396                           
  2397                           ; BSR set to: 0
  2398  000A7E  0E48               	movlw	72
  2399  000A80  0100               	movlb	0	; () banked
  2400  000A82  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2401  000A84  B4D8               	btfsc	status,2,c
  2402  000A86  D00A               	goto	l3118
  2403                           
  2404                           ; BSR set to: 0
  2405  000A88  0E54               	movlw	84
  2406  000A8A  0100               	movlb	0	; () banked
  2407  000A8C  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2408  000A8E  B4D8               	btfsc	status,2,c
  2409  000A90  D005               	goto	l3118
  2410                           
  2411                           ; BSR set to: 0
  2412  000A92  0E5A               	movlw	90
  2413  000A94  0100               	movlb	0	; () banked
  2414  000A96  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2415  000A98  A4D8               	btfss	status,2,c
  2416  000A9A  D00D               	goto	l3122
  2417  000A9C                     l3118:
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;iut_lcd.c: 355: size = 2;
  2421  000A9C  0E02               	movlw	2
  2422  000A9E  D017               	goto	L22
  2423  000AA0                     l3120:
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;iut_lcd.c: 356: c = *++f;
  2427  000AA0  4A1B               	infsnz	lcd_printf@f,f,c
  2428  000AA2  2A1C               	incf	lcd_printf@f+1,f,c
  2429  000AA4  C01B  FFF6         	movff	lcd_printf@f,tblptrl
  2430  000AA8  C01C  FFF7         	movff	lcd_printf@f+1,tblptrh
  2431  000AAC                     	if	0	;tblptru may be non-zero
  2432  000AAC                     	endif
  2433  000AAC                     	if	0	;tblptru may be non-zero
  2434  000AAC                     	endif
  2435  000AAC  0008               	tblrd		*
  2436  000AAE  CFF5 F0A2          	movff	tablat,lcd_printf@c
  2437                           
  2438                           ;iut_lcd.c: 357: }
  2439  000AB2  EF86  F00A         	goto	l3552
  2440  000AB6                     l3122:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;iut_lcd.c: 360: else if (c == 'l' || c == 'j') {
  2444  000AB6  0E6C               	movlw	108
  2445  000AB8  0100               	movlb	0	; () banked
  2446  000ABA  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2447  000ABC  B4D8               	btfsc	status,2,c
  2448  000ABE  D006               	goto	l3126
  2449                           
  2450                           ; BSR set to: 0
  2451  000AC0  0E6A               	movlw	106
  2452  000AC2  0100               	movlb	0	; () banked
  2453  000AC4  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  2454  000AC6  A4D8               	btfss	status,2,c
  2455  000AC8  EF86  F00A         	goto	l3552
  2456  000ACC                     l3126:
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;iut_lcd.c: 361: size = 1;
  2460  000ACC  0E01               	movlw	1
  2461  000ACE                     L22:
  2462  000ACE  0100               	movlb	0	; () banked
  2463  000AD0  6F94               	movwf	lcd_printf@size& (0+255),b
  2464  000AD2  D7E6               	goto	l3120
  2465  000AD4                     l3130:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;iut_lcd.c: 373: --f;
  2469  000AD4  061B               	decf	lcd_printf@f,f,c
  2470  000AD6  A0D8               	btfss	status,0,c
  2471  000AD8  061C               	decf	lcd_printf@f+1,f,c
  2472  000ADA                     l3132:
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;iut_lcd.c: 376: lcd_write_data_busy('%');
  2476  000ADA  0E25               	movlw	37
  2477  000ADC  EC43  F013         	call	_lcd_write_data_busy
  2478                           
  2479                           ;iut_lcd.c: 378: break;
  2480  000AE0  EFC6  F00A         	goto	l3556
  2481  000AE4                     l3134:
  2482                           
  2483                           ;iut_lcd.c: 380: space_cnt = 0;
  2484  000AE4  0E00               	movlw	0
  2485  000AE6  0100               	movlb	0	; () banked
  2486  000AE8  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;iut_lcd.c: 381: if (width > 1) {
  2490  000AEA  0E01               	movlw	1
  2491  000AEC  0100               	movlb	0	; () banked
  2492  000AEE  65A1               	cpfsgt	lcd_printf@width& (0+255),b
  2493  000AF0  D004               	goto	l3140
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;iut_lcd.c: 382: space_cnt = width - 1;
  2497  000AF2  0100               	movlb	0	; () banked
  2498  000AF4  05A1               	decf	lcd_printf@width& (0+255),w,b
  2499  000AF6  0100               	movlb	0	; () banked
  2500  000AF8  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  2501  000AFA                     l3140:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;iut_lcd.c: 384: }
  2505                           ;iut_lcd.c: 385: if (space_cnt && !(flags & 0x1)) {
  2506  000AFA  0100               	movlb	0	; () banked
  2507  000AFC  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  2508  000AFE  0100               	movlb	0	; () banked
  2509  000B00  B4D8               	btfsc	status,2,c
  2510  000B02  D00C               	goto	l3148
  2511                           
  2512                           ; BSR set to: 0
  2513  000B04  0100               	movlb	0	; () banked
  2514  000B06  B19F               	btfsc	lcd_printf@flags& (0+255),0,b
  2515  000B08  D009               	goto	l3148
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;iut_lcd.c: 386: lcd_repete_n(space_cnt, ' ');
  2519  000B0A  0E20               	movlw	32
  2520  000B0C  6E03               	movwf	lcd_repete_n@c,c
  2521  000B0E  0100               	movlb	0	; () banked
  2522  000B10  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  2523  000B12  EC59  F013         	call	_lcd_repete_n
  2524                           
  2525                           ;iut_lcd.c: 387: space_cnt = 0;
  2526  000B16  0E00               	movlw	0
  2527  000B18  0100               	movlb	0	; () banked
  2528  000B1A  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  2529  000B1C                     l3148:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;iut_lcd.c: 388: }
  2533                           ;iut_lcd.c: 389: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  2534  000B1C  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2535  000B20  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2536  000B24  50DF               	movf	indf2,w,c
  2537  000B26  0100               	movlb	0	; () banked
  2538  000B28  6FA2               	movwf	lcd_printf@c& (0+255),b
  2539                           
  2540                           ; BSR set to: 0
  2541  000B2A  0E02               	movlw	2
  2542  000B2C  0100               	movlb	0	; () banked
  2543  000B2E  279D               	addwf	lcd_printf@ap& (0+255),f,b
  2544  000B30  0E00               	movlw	0
  2545  000B32  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;iut_lcd.c: 390: lcd_putc(c);
  2549  000B34  0100               	movlb	0	; () banked
  2550  000B36  51A2               	movf	lcd_printf@c& (0+255),w,b
  2551  000B38  EC39  F012         	call	_lcd_putc
  2552                           
  2553                           ;iut_lcd.c: 392: lcd_repete_n(space_cnt, ' ');
  2554  000B3C  0E20               	movlw	32
  2555  000B3E  6E03               	movwf	lcd_repete_n@c,c
  2556  000B40  0100               	movlb	0	; () banked
  2557  000B42  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  2558  000B44  EC59  F013         	call	_lcd_repete_n
  2559                           
  2560                           ;iut_lcd.c: 393: break;
  2561  000B48  EFC6  F00A         	goto	l3556
  2562  000B4C                     l3156:
  2563                           
  2564                           ;iut_lcd.c: 395: if (size == 2)
  2565  000B4C  0E02               	movlw	2
  2566  000B4E  0100               	movlb	0	; () banked
  2567  000B50  1994               	xorwf	lcd_printf@size& (0+255),w,b
  2568  000B52  A4D8               	btfss	status,2,c
  2569  000B54  D007               	goto	l3162
  2570  000B56  D006               	goto	l3162
  2571  000B58                     l3160:
  2572                           
  2573                           ; BSR set to: 0
  2574  000B58  0E02               	movlw	2
  2575  000B5A  0100               	movlb	0	; () banked
  2576  000B5C  279D               	addwf	lcd_printf@ap& (0+255),f,b
  2577  000B5E  0E00               	movlw	0
  2578  000B60  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  2579  000B62  D009               	goto	l3166
  2580  000B64                     l3162:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;iut_lcd.c: 397: else
  2584                           ;iut_lcd.c: 398: romstring = (far char*) (*(near char * *)__va_arg((*(near char * **)ap)
      +                          , (near char *)0));
  2585  000B64  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2586  000B68  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2587  000B6C  CFDE F084          	movff	postinc2,lcd_printf@romstring
  2588  000B70  CFDD F085          	movff	postdec2,lcd_printf@romstring+1
  2589  000B74  D7F1               	goto	l3160
  2590  000B76                     l3166:
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;iut_lcd.c: 399: for (n = 0; romstring[n] != 0; n++);
  2594  000B76  0E00               	movlw	0
  2595  000B78  0100               	movlb	0	; () banked
  2596  000B7A  6F9C               	movwf	(lcd_printf@n+1)& (0+255),b
  2597  000B7C  0E00               	movlw	0
  2598  000B7E  6F9B               	movwf	lcd_printf@n& (0+255),b
  2599  000B80  D003               	goto	l3170
  2600  000B82                     l3168:
  2601                           
  2602                           ; BSR set to: 0
  2603  000B82  0100               	movlb	0	; () banked
  2604  000B84  4B9B               	infsnz	lcd_printf@n& (0+255),f,b
  2605  000B86  2B9C               	incf	(lcd_printf@n+1)& (0+255),f,b
  2606  000B88                     l3170:
  2607                           
  2608                           ; BSR set to: 0
  2609  000B88  0100               	movlb	0	; () banked
  2610  000B8A  519B               	movf	lcd_printf@n& (0+255),w,b
  2611  000B8C  0100               	movlb	0	; () banked
  2612  000B8E  2584               	addwf	lcd_printf@romstring& (0+255),w,b
  2613  000B90  6ED9               	movwf	fsr2l,c
  2614  000B92  0100               	movlb	0	; () banked
  2615  000B94  519C               	movf	(lcd_printf@n+1)& (0+255),w,b
  2616  000B96  0100               	movlb	0	; () banked
  2617  000B98  2185               	addwfc	(lcd_printf@romstring+1)& (0+255),w,b
  2618  000B9A  6EDA               	movwf	fsr2h,c
  2619  000B9C  50DF               	movf	indf2,w,c
  2620  000B9E  A4D8               	btfss	status,2,c
  2621  000BA0  D7F0               	goto	l3168
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;iut_lcd.c: 402: if (have_precision && precision < (unsigned char) n)
  2625                           
  2626                           ; BSR set to: 0
  2627  000BA2  0100               	movlb	0	; () banked
  2628  000BA4  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  2629  000BA6  0100               	movlb	0	; () banked
  2630  000BA8  B4D8               	btfsc	status,2,c
  2631  000BAA  D00A               	goto	l3178
  2632                           
  2633                           ; BSR set to: 0
  2634  000BAC  0100               	movlb	0	; () banked
  2635  000BAE  519B               	movf	lcd_printf@n& (0+255),w,b
  2636  000BB0  0100               	movlb	0	; () banked
  2637  000BB2  5DA0               	subwf	lcd_printf@precision& (0+255),w,b
  2638  000BB4  B0D8               	btfsc	status,0,c
  2639  000BB6  D004               	goto	l3178
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;iut_lcd.c: 403: n = precision;
  2643  000BB8  C0A0  F09B         	movff	lcd_printf@precision,lcd_printf@n
  2644  000BBC  0100               	movlb	0	; () banked
  2645  000BBE  6B9C               	clrf	(lcd_printf@n+1)& (0+255),b
  2646  000BC0                     l3178:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;iut_lcd.c: 404: if (width < (unsigned char) n)
  2650  000BC0  0100               	movlb	0	; () banked
  2651  000BC2  519B               	movf	lcd_printf@n& (0+255),w,b
  2652  000BC4  0100               	movlb	0	; () banked
  2653  000BC6  5DA1               	subwf	lcd_printf@width& (0+255),w,b
  2654  000BC8  A0D8               	btfss	status,0,c
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;iut_lcd.c: 405: width = n;
  2658  000BCA  C09B  F0A1         	movff	lcd_printf@n,lcd_printf@width
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;iut_lcd.c: 406: space_cnt = width - (unsigned char) n;
  2662                           
  2663                           ; BSR set to: 0
  2664  000BCE  0100               	movlb	0	; () banked
  2665  000BD0  519B               	movf	lcd_printf@n& (0+255),w,b
  2666  000BD2  0800               	sublw	0
  2667  000BD4  0100               	movlb	0	; () banked
  2668  000BD6  25A1               	addwf	lcd_printf@width& (0+255),w,b
  2669  000BD8  0100               	movlb	0	; () banked
  2670  000BDA  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;iut_lcd.c: 413: if (have_precision && precision < width)
  2674  000BDC  0100               	movlb	0	; () banked
  2675  000BDE  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  2676  000BE0  0100               	movlb	0	; () banked
  2677  000BE2  B4D8               	btfsc	status,2,c
  2678  000BE4  D007               	goto	l231
  2679                           
  2680                           ; BSR set to: 0
  2681  000BE6  0100               	movlb	0	; () banked
  2682  000BE8  51A1               	movf	lcd_printf@width& (0+255),w,b
  2683  000BEA  0100               	movlb	0	; () banked
  2684  000BEC  5DA0               	subwf	lcd_printf@precision& (0+255),w,b
  2685  000BEE  A0D8               	btfss	status,0,c
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;iut_lcd.c: 414: width = precision;
  2689  000BF0  C0A0  F0A1         	movff	lcd_printf@precision,lcd_printf@width
  2690  000BF4                     l231:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;iut_lcd.c: 417: if (!(flags & 0x1)) {
  2694  000BF4  0100               	movlb	0	; () banked
  2695  000BF6  B19F               	btfsc	lcd_printf@flags& (0+255),0,b
  2696  000BF8  D009               	goto	l3194
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;iut_lcd.c: 418: lcd_repete_n(space_cnt, ' ');
  2700  000BFA  0E20               	movlw	32
  2701  000BFC  6E03               	movwf	lcd_repete_n@c,c
  2702  000BFE  0100               	movlb	0	; () banked
  2703  000C00  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  2704  000C02  EC59  F013         	call	_lcd_repete_n
  2705                           
  2706                           ;iut_lcd.c: 419: space_cnt = 0;
  2707  000C06  0E00               	movlw	0
  2708  000C08  0100               	movlb	0	; () banked
  2709  000C0A  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  2710  000C0C                     l3194:
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;iut_lcd.c: 420: }
  2714                           ;iut_lcd.c: 421: cval = 0;
  2715  000C0C  0E00               	movlw	0
  2716  000C0E  0100               	movlb	0	; () banked
  2717  000C10  6F9A               	movwf	lcd_printf@cval& (0+255),b
  2718  000C12  D009               	goto	L23
  2719  000C14                     l3198:
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;iut_lcd.c: 423: lcd_putc(c);
  2723  000C14  0100               	movlb	0	; () banked
  2724  000C16  51A2               	movf	lcd_printf@c& (0+255),w,b
  2725  000C18  EC39  F012         	call	_lcd_putc
  2726                           
  2727                           ;iut_lcd.c: 425: ++cval;
  2728  000C1C  0100               	movlb	0	; () banked
  2729  000C1E  2B9A               	incf	lcd_printf@cval& (0+255),f,b
  2730                           
  2731                           ; BSR set to: 0
  2732  000C20  0100               	movlb	0	; () banked
  2733  000C22  4B84               	infsnz	lcd_printf@romstring& (0+255),f,b
  2734  000C24  2B85               	incf	(lcd_printf@romstring+1)& (0+255),f,b
  2735  000C26                     L23:
  2736  000C26  C084  FFD9         	movff	lcd_printf@romstring,fsr2l
  2737  000C2A  C085  FFDA         	movff	lcd_printf@romstring+1,fsr2h
  2738  000C2E  50DF               	movf	indf2,w,c
  2739  000C30  0100               	movlb	0	; () banked
  2740  000C32  6FA2               	movwf	lcd_printf@c& (0+255),b
  2741                           
  2742                           ; BSR set to: 0
  2743                           
  2744                           ; BSR set to: 0
  2745  000C34  0100               	movlb	0	; () banked
  2746  000C36  51A2               	movf	lcd_printf@c& (0+255),w,b
  2747  000C38  0100               	movlb	0	; () banked
  2748  000C3A  B4D8               	btfsc	status,2,c
  2749  000C3C  D006               	goto	l3208
  2750                           
  2751                           ; BSR set to: 0
  2752  000C3E  0100               	movlb	0	; () banked
  2753  000C40  51A1               	movf	lcd_printf@width& (0+255),w,b
  2754  000C42  0100               	movlb	0	; () banked
  2755  000C44  5D9A               	subwf	lcd_printf@cval& (0+255),w,b
  2756  000C46  A0D8               	btfss	status,0,c
  2757  000C48  D7E5               	goto	l3198
  2758  000C4A                     l3208:
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;iut_lcd.c: 426: }
  2762                           ;iut_lcd.c: 430: lcd_repete_n(space_cnt, ' ');
  2763  000C4A  0E20               	movlw	32
  2764  000C4C  6E03               	movwf	lcd_repete_n@c,c
  2765  000C4E  0100               	movlb	0	; () banked
  2766  000C50  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  2767  000C52  EC59  F013         	call	_lcd_repete_n
  2768                           
  2769                           ;iut_lcd.c: 431: break;
  2770  000C56  EFC6  F00A         	goto	l3556
  2771  000C5A                     l3210:
  2772                           
  2773                           ;iut_lcd.c: 433: ramstring = (*(char * *)__va_arg((*(char * **)ap), (char *)0));
  2774  000C5A  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2775  000C5E  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2776  000C62  CFDE F081          	movff	postinc2,lcd_printf@ramstring
  2777  000C66  CFDD F082          	movff	postdec2,lcd_printf@ramstring+1
  2778  000C6A  0E02               	movlw	2
  2779  000C6C  0100               	movlb	0	; () banked
  2780  000C6E  279D               	addwf	lcd_printf@ap& (0+255),f,b
  2781  000C70  0E00               	movlw	0
  2782  000C72  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;iut_lcd.c: 434: for (n = 0; ramstring[n] != 0; n++);
  2786  000C74  0E00               	movlw	0
  2787  000C76  0100               	movlb	0	; () banked
  2788  000C78  6F9C               	movwf	(lcd_printf@n+1)& (0+255),b
  2789  000C7A  0E00               	movlw	0
  2790  000C7C  6F9B               	movwf	lcd_printf@n& (0+255),b
  2791  000C7E  D003               	goto	l3218
  2792  000C80                     l3216:
  2793                           
  2794                           ; BSR set to: 0
  2795  000C80  0100               	movlb	0	; () banked
  2796  000C82  4B9B               	infsnz	lcd_printf@n& (0+255),f,b
  2797  000C84  2B9C               	incf	(lcd_printf@n+1)& (0+255),f,b
  2798  000C86                     l3218:
  2799                           
  2800                           ; BSR set to: 0
  2801  000C86  0100               	movlb	0	; () banked
  2802  000C88  519B               	movf	lcd_printf@n& (0+255),w,b
  2803  000C8A  0100               	movlb	0	; () banked
  2804  000C8C  2581               	addwf	lcd_printf@ramstring& (0+255),w,b
  2805  000C8E  6ED9               	movwf	fsr2l,c
  2806  000C90  0100               	movlb	0	; () banked
  2807  000C92  519C               	movf	(lcd_printf@n+1)& (0+255),w,b
  2808  000C94  0100               	movlb	0	; () banked
  2809  000C96  2182               	addwfc	(lcd_printf@ramstring+1)& (0+255),w,b
  2810  000C98  6EDA               	movwf	fsr2h,c
  2811  000C9A  50DF               	movf	indf2,w,c
  2812  000C9C  A4D8               	btfss	status,2,c
  2813  000C9E  D7F0               	goto	l3216
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;iut_lcd.c: 437: if (have_precision && precision < (unsigned char) n)
  2817                           
  2818                           ; BSR set to: 0
  2819  000CA0  0100               	movlb	0	; () banked
  2820  000CA2  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  2821  000CA4  0100               	movlb	0	; () banked
  2822  000CA6  B4D8               	btfsc	status,2,c
  2823  000CA8  D00A               	goto	l3226
  2824                           
  2825                           ; BSR set to: 0
  2826  000CAA  0100               	movlb	0	; () banked
  2827  000CAC  519B               	movf	lcd_printf@n& (0+255),w,b
  2828  000CAE  0100               	movlb	0	; () banked
  2829  000CB0  5DA0               	subwf	lcd_printf@precision& (0+255),w,b
  2830  000CB2  B0D8               	btfsc	status,0,c
  2831  000CB4  D004               	goto	l3226
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;iut_lcd.c: 438: n = precision;
  2835  000CB6  C0A0  F09B         	movff	lcd_printf@precision,lcd_printf@n
  2836  000CBA  0100               	movlb	0	; () banked
  2837  000CBC  6B9C               	clrf	(lcd_printf@n+1)& (0+255),b
  2838  000CBE                     l3226:
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;iut_lcd.c: 439: if (width < (unsigned char) n)
  2842  000CBE  0100               	movlb	0	; () banked
  2843  000CC0  519B               	movf	lcd_printf@n& (0+255),w,b
  2844  000CC2  0100               	movlb	0	; () banked
  2845  000CC4  5DA1               	subwf	lcd_printf@width& (0+255),w,b
  2846  000CC6  A0D8               	btfss	status,0,c
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;iut_lcd.c: 440: width = n;
  2850  000CC8  C09B  F0A1         	movff	lcd_printf@n,lcd_printf@width
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;iut_lcd.c: 441: space_cnt = width - (unsigned char) n;
  2854                           
  2855                           ; BSR set to: 0
  2856  000CCC  0100               	movlb	0	; () banked
  2857  000CCE  519B               	movf	lcd_printf@n& (0+255),w,b
  2858  000CD0  0800               	sublw	0
  2859  000CD2  0100               	movlb	0	; () banked
  2860  000CD4  25A1               	addwf	lcd_printf@width& (0+255),w,b
  2861  000CD6  0100               	movlb	0	; () banked
  2862  000CD8  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;iut_lcd.c: 448: if (have_precision && precision < width)
  2866  000CDA  0100               	movlb	0	; () banked
  2867  000CDC  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  2868  000CDE  0100               	movlb	0	; () banked
  2869  000CE0  B4D8               	btfsc	status,2,c
  2870  000CE2  D007               	goto	l244
  2871                           
  2872                           ; BSR set to: 0
  2873  000CE4  0100               	movlb	0	; () banked
  2874  000CE6  51A1               	movf	lcd_printf@width& (0+255),w,b
  2875  000CE8  0100               	movlb	0	; () banked
  2876  000CEA  5DA0               	subwf	lcd_printf@precision& (0+255),w,b
  2877  000CEC  A0D8               	btfss	status,0,c
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;iut_lcd.c: 449: width = precision;
  2881  000CEE  C0A0  F0A1         	movff	lcd_printf@precision,lcd_printf@width
  2882  000CF2                     l244:
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;iut_lcd.c: 452: if (!(flags & 0x1)) {
  2886  000CF2  0100               	movlb	0	; () banked
  2887  000CF4  B19F               	btfsc	lcd_printf@flags& (0+255),0,b
  2888  000CF6  D009               	goto	l3242
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;iut_lcd.c: 453: lcd_repete_n(space_cnt, ' ');
  2892  000CF8  0E20               	movlw	32
  2893  000CFA  6E03               	movwf	lcd_repete_n@c,c
  2894  000CFC  0100               	movlb	0	; () banked
  2895  000CFE  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  2896  000D00  EC59  F013         	call	_lcd_repete_n
  2897                           
  2898                           ;iut_lcd.c: 454: space_cnt = 0;
  2899  000D04  0E00               	movlw	0
  2900  000D06  0100               	movlb	0	; () banked
  2901  000D08  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  2902  000D0A                     l3242:
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;iut_lcd.c: 455: }
  2906                           ;iut_lcd.c: 456: cval = 0;
  2907  000D0A  0E00               	movlw	0
  2908  000D0C  0100               	movlb	0	; () banked
  2909  000D0E  6F9A               	movwf	lcd_printf@cval& (0+255),b
  2910  000D10  D009               	goto	L24
  2911  000D12                     l3246:
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;iut_lcd.c: 458: lcd_putc(c);
  2915  000D12  0100               	movlb	0	; () banked
  2916  000D14  51A2               	movf	lcd_printf@c& (0+255),w,b
  2917  000D16  EC39  F012         	call	_lcd_putc
  2918                           
  2919                           ;iut_lcd.c: 460: ++cval;
  2920  000D1A  0100               	movlb	0	; () banked
  2921  000D1C  2B9A               	incf	lcd_printf@cval& (0+255),f,b
  2922                           
  2923                           ; BSR set to: 0
  2924  000D1E  0100               	movlb	0	; () banked
  2925  000D20  4B81               	infsnz	lcd_printf@ramstring& (0+255),f,b
  2926  000D22  2B82               	incf	(lcd_printf@ramstring+1)& (0+255),f,b
  2927  000D24                     L24:
  2928  000D24  C081  FFD9         	movff	lcd_printf@ramstring,fsr2l
  2929  000D28  C082  FFDA         	movff	lcd_printf@ramstring+1,fsr2h
  2930  000D2C  50DF               	movf	indf2,w,c
  2931  000D2E  0100               	movlb	0	; () banked
  2932  000D30  6FA2               	movwf	lcd_printf@c& (0+255),b
  2933                           
  2934                           ; BSR set to: 0
  2935                           
  2936                           ; BSR set to: 0
  2937  000D32  0100               	movlb	0	; () banked
  2938  000D34  51A2               	movf	lcd_printf@c& (0+255),w,b
  2939  000D36  0100               	movlb	0	; () banked
  2940  000D38  B4D8               	btfsc	status,2,c
  2941  000D3A  D006               	goto	l3256
  2942                           
  2943                           ; BSR set to: 0
  2944  000D3C  0100               	movlb	0	; () banked
  2945  000D3E  51A1               	movf	lcd_printf@width& (0+255),w,b
  2946  000D40  0100               	movlb	0	; () banked
  2947  000D42  5D9A               	subwf	lcd_printf@cval& (0+255),w,b
  2948  000D44  A0D8               	btfss	status,0,c
  2949  000D46  D7E5               	goto	l3246
  2950  000D48                     l3256:
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;iut_lcd.c: 461: }
  2954                           ;iut_lcd.c: 465: lcd_repete_n(space_cnt, ' ');
  2955  000D48  0E20               	movlw	32
  2956  000D4A  6E03               	movwf	lcd_repete_n@c,c
  2957  000D4C  0100               	movlb	0	; () banked
  2958  000D4E  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  2959  000D50  EC59  F013         	call	_lcd_repete_n
  2960                           
  2961                           ;iut_lcd.c: 466: break;
  2962  000D54  EFC6  F00A         	goto	l3556
  2963  000D58                     l3258:
  2964                           
  2965                           ;iut_lcd.c: 468: case 'i':
  2966                           ;iut_lcd.c: 469: flags |= 0x80;
  2967  000D58  0100               	movlb	0	; () banked
  2968  000D5A  8F9F               	bsf	lcd_printf@flags& (0+255),7,b
  2969  000D5C                     l3260:
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;iut_lcd.c: 472: case 'u':
  2973                           ;iut_lcd.c: 473: case 'x':
  2974                           ;iut_lcd.c: 474: case 'X':
  2975                           ;iut_lcd.c: 475: case 'b':
  2976                           ;iut_lcd.c: 476: case 'B':
  2977                           ;iut_lcd.c: 483: if (size == 1) {
  2978  000D5C  0100               	movlb	0	; () banked
  2979  000D5E  0594               	decf	lcd_printf@size& (0+255),w,b
  2980  000D60  A4D8               	btfss	status,2,c
  2981  000D62  D00E               	goto	l3268
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;iut_lcd.c: 484: larg = (*(long int *)__va_arg((*(long int **)ap), (long int)0));
  2985  000D64  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  2986  000D68  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  2987  000D6C  CFDE F090          	movff	postinc2,lcd_printf@larg
  2988  000D70  CFDE F091          	movff	postinc2,lcd_printf@larg+1
  2989  000D74  CFDE F092          	movff	postinc2,lcd_printf@larg+2
  2990  000D78  CFDE F093          	movff	postinc2,lcd_printf@larg+3
  2991                           
  2992                           ; BSR set to: 0
  2993  000D7C  0E04               	movlw	4
  2994  000D7E  D016               	goto	L25
  2995  000D80                     l3268:
  2996                           
  2997                           ; BSR set to: 0
  2998  000D80  0E03               	movlw	3
  2999  000D82  0100               	movlb	0	; () banked
  3000  000D84  1994               	xorwf	lcd_printf@size& (0+255),w,b
  3001  000D86  A4D8               	btfss	status,2,c
  3002  000D88  D021               	goto	l3280
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;iut_lcd.c: 487: if (flags & 0x80)
  3006  000D8A  0100               	movlb	0	; () banked
  3007  000D8C  AF9F               	btfss	lcd_printf@flags& (0+255),7,b
  3008  000D8E  D013               	goto	l3276
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;iut_lcd.c: 488: larg = (signed char) (*(int *)__va_arg((*(int **)ap), (int)0));
  3012  000D90  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  3013  000D94  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  3014  000D98  50DF               	movf	indf2,w,c
  3015  000D9A  0100               	movlb	0	; () banked
  3016  000D9C  6F90               	movwf	lcd_printf@larg& (0+255),b
  3017  000D9E  0E00               	movlw	0
  3018  000DA0  BF90               	btfsc	lcd_printf@larg& (0+255),7,b
  3019  000DA2  0EFF               	movlw	-1
  3020  000DA4  6F91               	movwf	(lcd_printf@larg+1)& (0+255),b
  3021  000DA6  6F92               	movwf	(lcd_printf@larg+2)& (0+255),b
  3022  000DA8  6F93               	movwf	(lcd_printf@larg+3)& (0+255),b
  3023  000DAA  D06A               	goto	l3298
  3024  000DAC                     L25:
  3025  000DAC  0100               	movlb	0	; () banked
  3026  000DAE  279D               	addwf	lcd_printf@ap& (0+255),f,b
  3027  000DB0  0E00               	movlw	0
  3028  000DB2  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  3029  000DB4  D067               	goto	l3300
  3030  000DB6                     l3276:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;iut_lcd.c: 489: else
  3034                           ;iut_lcd.c: 490: larg = (unsigned char) (*(unsigned int *)__va_arg((*(unsigned int **)ap
      +                          ), (unsigned int)0));
  3035  000DB6  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  3036  000DBA  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  3037  000DBE  50DF               	movf	indf2,w,c
  3038  000DC0  6E25               	movwf	??_lcd_printf& (0+255),c
  3039  000DC2  5025               	movf	??_lcd_printf,w,c
  3040  000DC4  0100               	movlb	0	; () banked
  3041  000DC6  6F90               	movwf	lcd_printf@larg& (0+255),b
  3042  000DC8  6B91               	clrf	(lcd_printf@larg+1)& (0+255),b
  3043  000DCA  D058               	goto	L42
  3044  000DCC                     l3280:
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;iut_lcd.c: 495: case 'P':
  3048                           ;iut_lcd.c: 496: if (size == 2) {
  3049  000DCC  0E02               	movlw	2
  3050  000DCE  0100               	movlb	0	; () banked
  3051  000DD0  1994               	xorwf	lcd_printf@size& (0+255),w,b
  3052  000DD2  A4D8               	btfss	status,2,c
  3053  000DD4  D036               	goto	l267
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;iut_lcd.c: 497: if (flags & 0x80)
  3057  000DD6  0100               	movlb	0	; () banked
  3058  000DD8  AF9F               	btfss	lcd_printf@flags& (0+255),7,b
  3059  000DDA  D01C               	goto	l3288
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;iut_lcd.c: 498: larg = (*(short long int *)__va_arg((*(short long int **)ap), (short lo
      +                          ng int)0));
  3063  000DDC  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  3064  000DE0  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  3065  000DE4  CFDE F025          	movff	postinc2,??_lcd_printf
  3066  000DE8  CFDE F026          	movff	postinc2,??_lcd_printf+1
  3067  000DEC  CFDE F027          	movff	postinc2,??_lcd_printf+2
  3068  000DF0  C025  F028         	movff	??_lcd_printf,??_lcd_printf+3
  3069  000DF4  C026  F029         	movff	??_lcd_printf+1,??_lcd_printf+4
  3070  000DF8  C027  F02A         	movff	??_lcd_printf+2,??_lcd_printf+5
  3071  000DFC  6A2B               	clrf	(??_lcd_printf+6)& (0+255),c
  3072  000DFE  BE2A               	btfsc	(??_lcd_printf+5)& (0+255),7,c
  3073  000E00  682B               	setf	(??_lcd_printf+6)& (0+255),c
  3074  000E02  C028  F090         	movff	??_lcd_printf+3,lcd_printf@larg
  3075  000E06  C029  F091         	movff	??_lcd_printf+4,lcd_printf@larg+1
  3076  000E0A  C02A  F092         	movff	??_lcd_printf+5,lcd_printf@larg+2
  3077  000E0E  C02B  F093         	movff	??_lcd_printf+6,lcd_printf@larg+3
  3078  000E12  D015               	goto	l3290
  3079  000E14                     l3288:
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;iut_lcd.c: 499: else
  3083                           ;iut_lcd.c: 500: larg = (*(unsigned short long int *)__va_arg((*(unsigned short long int
      +                           **)ap), (unsigned short long int)0));
  3084  000E14  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  3085  000E18  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  3086  000E1C  CFDE F025          	movff	postinc2,??_lcd_printf
  3087  000E20  CFDE F026          	movff	postinc2,??_lcd_printf+1
  3088  000E24  CFDE F027          	movff	postinc2,??_lcd_printf+2
  3089  000E28  5025               	movf	??_lcd_printf,w,c
  3090  000E2A  0100               	movlb	0	; () banked
  3091  000E2C  6F90               	movwf	lcd_printf@larg& (0+255),b
  3092  000E2E  5026               	movf	??_lcd_printf+1,w,c
  3093  000E30  0100               	movlb	0	; () banked
  3094  000E32  6F91               	movwf	(lcd_printf@larg+1)& (0+255),b
  3095  000E34  5027               	movf	??_lcd_printf+2,w,c
  3096  000E36  0100               	movlb	0	; () banked
  3097  000E38  6F92               	movwf	(lcd_printf@larg+2)& (0+255),b
  3098  000E3A  0100               	movlb	0	; () banked
  3099  000E3C  6B93               	clrf	(lcd_printf@larg+3)& (0+255),b
  3100  000E3E                     l3290:
  3101                           
  3102                           ; BSR set to: 0
  3103  000E3E  0E03               	movlw	3
  3104  000E40  D7B5               	goto	L25
  3105  000E42                     l267:
  3106                           
  3107                           ; BSR set to: 0
  3108  000E42  0100               	movlb	0	; () banked
  3109  000E44  AF9F               	btfss	lcd_printf@flags& (0+255),7,b
  3110  000E46  D00D               	goto	l3296
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;iut_lcd.c: 502: larg = (*(int *)__va_arg((*(int **)ap), (int)0));
  3114  000E48  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  3115  000E4C  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  3116  000E50  CFDE F090          	movff	postinc2,lcd_printf@larg
  3117  000E54  CFDD F091          	movff	postdec2,lcd_printf@larg+1
  3118  000E58  0100               	movlb	0	; () banked
  3119  000E5A  0E00               	movlw	0
  3120  000E5C  BF91               	btfsc	(lcd_printf@larg+1)& (0+255),7,b
  3121  000E5E  0EFF               	movlw	-1
  3122  000E60  D7A2               	goto	L33
  3123  000E62                     l3296:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;iut_lcd.c: 503: else
  3127                           ;iut_lcd.c: 504: larg = (*(unsigned int *)__va_arg((*(unsigned int **)ap), (unsigned int
      +                          )0));
  3128  000E62  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  3129  000E66  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  3130  000E6A  CFDE F025          	movff	postinc2,??_lcd_printf
  3131  000E6E  CFDD F026          	movff	postdec2,??_lcd_printf+1
  3132  000E72  C025  F090         	movff	??_lcd_printf,lcd_printf@larg
  3133  000E76  C026  F091         	movff	??_lcd_printf+1,lcd_printf@larg+1
  3134  000E7A  0100               	movlb	0	; () banked
  3135  000E7C                     L42:
  3136  000E7C  6B92               	clrf	(lcd_printf@larg+2)& (0+255),b
  3137  000E7E  6B93               	clrf	(lcd_printf@larg+3)& (0+255),b
  3138  000E80                     l3298:
  3139                           
  3140                           ; BSR set to: 0
  3141  000E80  0E02               	movlw	2
  3142  000E82  D794               	goto	L25
  3143  000E84                     l3300:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;iut_lcd.c: 507: if (!have_precision)
  3147  000E84  0100               	movlb	0	; () banked
  3148  000E86  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  3149  000E88  0100               	movlb	0	; () banked
  3150  000E8A  A4D8               	btfss	status,2,c
  3151  000E8C  D003               	goto	l273
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;iut_lcd.c: 508: precision = 1;
  3155  000E8E  0E01               	movlw	1
  3156  000E90  0100               	movlb	0	; () banked
  3157  000E92  6FA0               	movwf	lcd_printf@precision& (0+255),b
  3158  000E94                     l273:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;iut_lcd.c: 510: {
  3162                           ;iut_lcd.c: 511: unsigned char digit_cnt = 0;
  3163  000E94  0E00               	movlw	0
  3164  000E96  0100               	movlb	0	; () banked
  3165  000E98  6F8F               	movwf	lcd_printf@digit_cnt& (0+255),b
  3166                           
  3167                           ;iut_lcd.c: 512: unsigned char prefix_cnt = 0;
  3168  000E9A  0E00               	movlw	0
  3169  000E9C  0100               	movlb	0	; () banked
  3170  000E9E  6F8C               	movwf	lcd_printf@prefix_cnt& (0+255),b
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;iut_lcd.c: 513: unsigned char sign_char;
  3174                           ;iut_lcd.c: 516: char buf[33];
  3175                           ;iut_lcd.c: 518: char *q = &buf[31];
  3176  000EA0  0E7F               	movlw	low (lcd_printf@buf+31)
  3177  000EA2  0100               	movlb	0	; () banked
  3178  000EA4  6F86               	movwf	lcd_printf@q& (0+255),b
  3179  000EA6  0E00               	movlw	high (lcd_printf@buf+31)
  3180  000EA8  0100               	movlb	0	; () banked
  3181  000EAA  6F87               	movwf	(lcd_printf@q+1)& (0+255),b
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;iut_lcd.c: 520: buf[32] = '\0';
  3185  000EAC  0E00               	movlw	0
  3186  000EAE  0100               	movlb	0	; () banked
  3187  000EB0  6F80               	movwf	(lcd_printf@buf+32)& (0+255),b
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;iut_lcd.c: 522: space_cnt = 0;
  3191  000EB2  0E00               	movlw	0
  3192  000EB4  0100               	movlb	0	; () banked
  3193  000EB6  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;iut_lcd.c: 523: size = 10;
  3197  000EB8  0E0A               	movlw	10
  3198  000EBA  0100               	movlb	0	; () banked
  3199  000EBC  6F94               	movwf	lcd_printf@size& (0+255),b
  3200                           
  3201                           ;iut_lcd.c: 525: switch (c) {
  3202  000EBE  D00B               	goto	l3322
  3203  000EC0                     l3312:
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;iut_lcd.c: 527: case 'B':
  3207                           ;iut_lcd.c: 528: size = 2;
  3208  000EC0  0E02               	movlw	2
  3209  000EC2  D006               	goto	L27
  3210  000EC4                     l3314:
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;iut_lcd.c: 531: size = 8;
  3214  000EC4  0E08               	movlw	8
  3215  000EC6  D004               	goto	L27
  3216  000EC8                     l3316:
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;iut_lcd.c: 534: case 'P':
  3220                           ;iut_lcd.c: 537: c += 'x' - 'p';
  3221  000EC8  0E08               	movlw	8
  3222  000ECA  0100               	movlb	0	; () banked
  3223  000ECC  27A2               	addwf	lcd_printf@c& (0+255),f,b
  3224  000ECE                     l3318:
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;iut_lcd.c: 540: case 'X':
  3228                           ;iut_lcd.c: 541: size = 16;
  3229  000ECE  0E10               	movlw	16
  3230  000ED0                     L27:
  3231  000ED0  0100               	movlb	0	; () banked
  3232  000ED2  6F94               	movwf	lcd_printf@size& (0+255),b
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;iut_lcd.c: 543: }
  3236                           
  3237                           ;iut_lcd.c: 542: break;
  3238  000ED4  D017               	goto	l277
  3239  000ED6                     l3322:
  3240                           
  3241                           ; BSR set to: 0
  3242  000ED6  0100               	movlb	0	; () banked
  3243  000ED8  51A2               	movf	lcd_printf@c& (0+255),w,b
  3244                           
  3245                           ; Switch size 1, requested type "space"
  3246                           ; Number of cases is 7, Range of values is 66 to 120
  3247                           ; switch strategies available:
  3248                           ; Name         Instructions Cycles
  3249                           ; simple_byte           22    12 (average)
  3250                           ;	Chosen strategy is simple_byte
  3251  000EDA  0A42               	xorlw	66	; case 66
  3252  000EDC  B4D8               	btfsc	status,2,c
  3253  000EDE  D7F0               	goto	l3312
  3254  000EE0  0A12               	xorlw	18	; case 80
  3255  000EE2  B4D8               	btfsc	status,2,c
  3256  000EE4  D7F1               	goto	l3316
  3257  000EE6  0A08               	xorlw	8	; case 88
  3258  000EE8  B4D8               	btfsc	status,2,c
  3259  000EEA  D7F1               	goto	l3318
  3260  000EEC  0A3A               	xorlw	58	; case 98
  3261  000EEE  B4D8               	btfsc	status,2,c
  3262  000EF0  D7E7               	goto	l3312
  3263  000EF2  0A0D               	xorlw	13	; case 111
  3264  000EF4  B4D8               	btfsc	status,2,c
  3265  000EF6  D7E6               	goto	l3314
  3266  000EF8  0A1F               	xorlw	31	; case 112
  3267  000EFA  B4D8               	btfsc	status,2,c
  3268  000EFC  D7E5               	goto	l3316
  3269  000EFE  0A08               	xorlw	8	; case 120
  3270  000F00  B4D8               	btfsc	status,2,c
  3271  000F02  D7E5               	goto	l3318
  3272  000F04                     l277:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;iut_lcd.c: 547: if (!(flags & 0x80))
  3276  000F04  0100               	movlb	0	; () banked
  3277  000F06  BF9F               	btfsc	lcd_printf@flags& (0+255),7,b
  3278  000F08  D003               	goto	l3326
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;iut_lcd.c: 548: flags &= ~(0x2 | 0x4);
  3282  000F0A  0EF9               	movlw	249
  3283  000F0C  0100               	movlb	0	; () banked
  3284  000F0E  179F               	andwf	lcd_printf@flags& (0+255),f,b
  3285  000F10                     l3326:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;iut_lcd.c: 558: if (flags & 0x80 && ((long) larg < 0)) {
  3289  000F10  0100               	movlb	0	; () banked
  3290  000F12  AF9F               	btfss	lcd_printf@flags& (0+255),7,b
  3291  000F14  D011               	goto	l284
  3292                           
  3293                           ; BSR set to: 0
  3294  000F16  0100               	movlb	0	; () banked
  3295  000F18  AF93               	btfss	(lcd_printf@larg+3)& (0+255),7,b
  3296  000F1A  D00E               	goto	l284
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;iut_lcd.c: 559: larg = -(long) larg;
  3300  000F1C  0100               	movlb	0	; () banked
  3301  000F1E  1F93               	comf	(lcd_printf@larg+3)& (0+255),f,b
  3302  000F20  1F92               	comf	(lcd_printf@larg+2)& (0+255),f,b
  3303  000F22  1F91               	comf	(lcd_printf@larg+1)& (0+255),f,b
  3304  000F24  6D90               	negf	lcd_printf@larg& (0+255),b
  3305  000F26  0E00               	movlw	0
  3306  000F28  2391               	addwfc	(lcd_printf@larg+1)& (0+255),f,b
  3307  000F2A  2392               	addwfc	(lcd_printf@larg+2)& (0+255),f,b
  3308  000F2C  2393               	addwfc	(lcd_printf@larg+3)& (0+255),f,b
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;iut_lcd.c: 560: sign_char = '-';
  3312  000F2E  0E2D               	movlw	45
  3313  000F30  D00C               	goto	L32
  3314  000F32                     l3334:
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;iut_lcd.c: 561: ++digit_cnt;
  3318  000F32  0100               	movlb	0	; () banked
  3319  000F34  2B8F               	incf	lcd_printf@digit_cnt& (0+255),f,b
  3320                           
  3321                           ;iut_lcd.c: 562: } else if (flags & 0x2) {
  3322  000F36  D00F               	goto	l285
  3323  000F38                     l284:
  3324                           
  3325                           ; BSR set to: 0
  3326  000F38  0100               	movlb	0	; () banked
  3327  000F3A  A39F               	btfss	lcd_printf@flags& (0+255),1,b
  3328  000F3C  D002               	goto	l286
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;iut_lcd.c: 563: sign_char = '+';
  3332  000F3E  0E2B               	movlw	43
  3333  000F40  D004               	goto	L32
  3334  000F42                     l286:
  3335                           
  3336                           ; BSR set to: 0
  3337  000F42  0100               	movlb	0	; () banked
  3338  000F44  A59F               	btfss	lcd_printf@flags& (0+255),2,b
  3339  000F46  D004               	goto	l3344
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;iut_lcd.c: 566: sign_char = ' ';
  3343  000F48  0E20               	movlw	32
  3344  000F4A                     L32:
  3345  000F4A  0100               	movlb	0	; () banked
  3346  000F4C  6F83               	movwf	lcd_printf@sign_char& (0+255),b
  3347  000F4E  D7F1               	goto	l3334
  3348  000F50                     l3344:
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;iut_lcd.c: 569: sign_char = '\0';
  3352  000F50  0E00               	movlw	0
  3353  000F52  0100               	movlb	0	; () banked
  3354  000F54  6F83               	movwf	lcd_printf@sign_char& (0+255),b
  3355  000F56                     l285:
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;iut_lcd.c: 573: if (precision || larg) {
  3359  000F56  0100               	movlb	0	; () banked
  3360  000F58  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3361  000F5A  0100               	movlb	0	; () banked
  3362  000F5C  A4D8               	btfss	status,2,c
  3363  000F5E  D00A               	goto	l3348
  3364                           
  3365                           ; BSR set to: 0
  3366  000F60  0100               	movlb	0	; () banked
  3367  000F62  5190               	movf	lcd_printf@larg& (0+255),w,b
  3368  000F64  0100               	movlb	0	; () banked
  3369  000F66  1191               	iorwf	(lcd_printf@larg+1)& (0+255),w,b
  3370  000F68  0100               	movlb	0	; () banked
  3371  000F6A  1192               	iorwf	(lcd_printf@larg+2)& (0+255),w,b
  3372  000F6C  0100               	movlb	0	; () banked
  3373  000F6E  1193               	iorwf	(lcd_printf@larg+3)& (0+255),w,b
  3374  000F70  B4D8               	btfsc	status,2,c
  3375  000F72  D07E               	goto	l3382
  3376  000F74                     l3348:
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;iut_lcd.c: 575: cval = s_digits[larg % size];
  3380  000F74  C090  F001         	movff	lcd_printf@larg,___llmod@dividend
  3381  000F78  C091  F002         	movff	lcd_printf@larg+1,___llmod@dividend+1
  3382  000F7C  C092  F003         	movff	lcd_printf@larg+2,___llmod@dividend+2
  3383  000F80  C093  F004         	movff	lcd_printf@larg+3,___llmod@dividend+3
  3384  000F84  0100               	movlb	0	; () banked
  3385  000F86  5194               	movf	lcd_printf@size& (0+255),w,b
  3386  000F88  6E05               	movwf	___llmod@divisor,c
  3387  000F8A  6A06               	clrf	___llmod@divisor+1,c
  3388  000F8C  6A07               	clrf	___llmod@divisor+2,c
  3389  000F8E  6A08               	clrf	___llmod@divisor+3,c
  3390  000F90  EC06  F012         	call	___llmod	;wreg free
  3391  000F94  0E01               	movlw	low _s_digits
  3392  000F96  2401               	addwf	?___llmod,w,c
  3393  000F98  6EF6               	movwf	tblptrl,c
  3394  000F9A  0E08               	movlw	high _s_digits
  3395  000F9C  2002               	addwfc	?___llmod+1,w,c
  3396  000F9E  6EF7               	movwf	tblptrh,c
  3397  000FA0                     	if	0	;There are less than 3 active tblptr bytes
  3398  000FA0                     	endif
  3399  000FA0  0008               	tblrd		*
  3400  000FA2  CFF5 F09A          	movff	tablat,lcd_printf@cval
  3401                           
  3402                           ;iut_lcd.c: 576: if (c == 'X' && cval >= 'a')
  3403  000FA6  0E58               	movlw	88
  3404  000FA8  0100               	movlb	0	; () banked
  3405  000FAA  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  3406  000FAC  A4D8               	btfss	status,2,c
  3407  000FAE  D007               	goto	l3356
  3408                           
  3409                           ; BSR set to: 0
  3410  000FB0  0E60               	movlw	96
  3411  000FB2  0100               	movlb	0	; () banked
  3412  000FB4  659A               	cpfsgt	lcd_printf@cval& (0+255),b
  3413  000FB6  D003               	goto	l3356
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;iut_lcd.c: 577: cval -= 'a' - 'A';
  3417  000FB8  0E20               	movlw	32
  3418  000FBA  0100               	movlb	0	; () banked
  3419  000FBC  5F9A               	subwf	lcd_printf@cval& (0+255),f,b
  3420  000FBE                     l3356:
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;iut_lcd.c: 578: larg /= size;
  3424  000FBE  C090  F001         	movff	lcd_printf@larg,___lldiv@dividend
  3425  000FC2  C091  F002         	movff	lcd_printf@larg+1,___lldiv@dividend+1
  3426  000FC6  C092  F003         	movff	lcd_printf@larg+2,___lldiv@dividend+2
  3427  000FCA  C093  F004         	movff	lcd_printf@larg+3,___lldiv@dividend+3
  3428  000FCE  0100               	movlb	0	; () banked
  3429  000FD0  5194               	movf	lcd_printf@size& (0+255),w,b
  3430  000FD2  6E05               	movwf	___lldiv@divisor,c
  3431  000FD4  6A06               	clrf	___lldiv@divisor+1,c
  3432  000FD6  6A07               	clrf	___lldiv@divisor+2,c
  3433  000FD8  6A08               	clrf	___lldiv@divisor+3,c
  3434  000FDA  ECC5  F011         	call	___lldiv	;wreg free
  3435  000FDE  C001  F090         	movff	?___lldiv,lcd_printf@larg
  3436  000FE2  C002  F091         	movff	?___lldiv+1,lcd_printf@larg+1
  3437  000FE6  C003  F092         	movff	?___lldiv+2,lcd_printf@larg+2
  3438  000FEA  C004  F093         	movff	?___lldiv+3,lcd_printf@larg+3
  3439                           
  3440                           ;iut_lcd.c: 579: *q-- = cval;
  3441  000FEE  C086  FFD9         	movff	lcd_printf@q,fsr2l
  3442  000FF2  C087  FFDA         	movff	lcd_printf@q+1,fsr2h
  3443  000FF6  C09A  FFDF         	movff	lcd_printf@cval,indf2
  3444  000FFA  0100               	movlb	0	; () banked
  3445  000FFC  0786               	decf	lcd_printf@q& (0+255),f,b
  3446  000FFE  A0D8               	btfss	status,0,c
  3447  001000  0787               	decf	(lcd_printf@q+1)& (0+255),f,b
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;iut_lcd.c: 580: ++digit_cnt;
  3451  001002  0100               	movlb	0	; () banked
  3452  001004  2B8F               	incf	lcd_printf@digit_cnt& (0+255),f,b
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;iut_lcd.c: 581: } while (larg);
  3456  001006  0100               	movlb	0	; () banked
  3457  001008  5190               	movf	lcd_printf@larg& (0+255),w,b
  3458  00100A  0100               	movlb	0	; () banked
  3459  00100C  1191               	iorwf	(lcd_printf@larg+1)& (0+255),w,b
  3460  00100E  0100               	movlb	0	; () banked
  3461  001010  1192               	iorwf	(lcd_printf@larg+2)& (0+255),w,b
  3462  001012  0100               	movlb	0	; () banked
  3463  001014  1193               	iorwf	(lcd_printf@larg+3)& (0+255),w,b
  3464  001016  A4D8               	btfss	status,2,c
  3465  001018  D7AD               	goto	l3348
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;iut_lcd.c: 585: if (flags & 0x8) {
  3469  00101A  0100               	movlb	0	; () banked
  3470  00101C  A79F               	btfss	lcd_printf@flags& (0+255),3,b
  3471  00101E  D02B               	goto	l3384
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;iut_lcd.c: 586: if (c == 'o') {
  3475  001020  0E6F               	movlw	111
  3476  001022  0100               	movlb	0	; () banked
  3477  001024  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  3478  001026  A4D8               	btfss	status,2,c
  3479  001028  D00B               	goto	l3372
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;iut_lcd.c: 590: if (precision <= digit_cnt)
  3483  00102A  0100               	movlb	0	; () banked
  3484  00102C  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3485  00102E  0100               	movlb	0	; () banked
  3486  001030  5D8F               	subwf	lcd_printf@digit_cnt& (0+255),w,b
  3487  001032  A0D8               	btfss	status,0,c
  3488  001034  D020               	goto	l3384
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;iut_lcd.c: 591: precision = digit_cnt + 1;
  3492  001036  0100               	movlb	0	; () banked
  3493  001038  298F               	incf	lcd_printf@digit_cnt& (0+255),w,b
  3494  00103A  0100               	movlb	0	; () banked
  3495  00103C  6FA0               	movwf	lcd_printf@precision& (0+255),b
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;iut_lcd.c: 592: } else if (c == 'x'
  3499  00103E  D01B               	goto	l3384
  3500  001040                     l3372:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;iut_lcd.c: 593: || c == 'X' || c == 'b' || c == 'B')
  3504  001040  0E78               	movlw	120
  3505  001042  0100               	movlb	0	; () banked
  3506  001044  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  3507  001046  B4D8               	btfsc	status,2,c
  3508  001048  D00F               	goto	l3380
  3509                           
  3510                           ; BSR set to: 0
  3511  00104A  0E58               	movlw	88
  3512  00104C  0100               	movlb	0	; () banked
  3513  00104E  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  3514  001050  B4D8               	btfsc	status,2,c
  3515  001052  D00A               	goto	l3380
  3516                           
  3517                           ; BSR set to: 0
  3518  001054  0E62               	movlw	98
  3519  001056  0100               	movlb	0	; () banked
  3520  001058  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  3521  00105A  B4D8               	btfsc	status,2,c
  3522  00105C  D005               	goto	l3380
  3523                           
  3524                           ; BSR set to: 0
  3525  00105E  0E42               	movlw	66
  3526  001060  0100               	movlb	0	; () banked
  3527  001062  19A2               	xorwf	lcd_printf@c& (0+255),w,b
  3528  001064  A4D8               	btfss	status,2,c
  3529  001066  D007               	goto	l3384
  3530  001068                     l3380:
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;iut_lcd.c: 594: prefix_cnt = 2;
  3534  001068  0E02               	movlw	2
  3535  00106A  0100               	movlb	0	; () banked
  3536  00106C  6F8C               	movwf	lcd_printf@prefix_cnt& (0+255),b
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;iut_lcd.c: 595: }
  3540                           ;iut_lcd.c: 596: } else
  3541                           
  3542                           ; BSR set to: 0
  3543                           
  3544                           ; BSR set to: 0
  3545  00106E  D003               	goto	l3384
  3546  001070                     l3382:
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;iut_lcd.c: 597: digit_cnt = 0;
  3550  001070  0E00               	movlw	0
  3551  001072  0100               	movlb	0	; () banked
  3552  001074  6F8F               	movwf	lcd_printf@digit_cnt& (0+255),b
  3553  001076                     l3384:
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;iut_lcd.c: 608: if ((flags & 0x10) && (width > precision)
  3557                           ;iut_lcd.c: 609: && !have_precision)
  3558  001076  0100               	movlb	0	; () banked
  3559  001078  A99F               	btfss	lcd_printf@flags& (0+255),4,b
  3560  00107A  D00C               	goto	l3392
  3561                           
  3562                           ; BSR set to: 0
  3563  00107C  0100               	movlb	0	; () banked
  3564  00107E  51A1               	movf	lcd_printf@width& (0+255),w,b
  3565  001080  0100               	movlb	0	; () banked
  3566  001082  5DA0               	subwf	lcd_printf@precision& (0+255),w,b
  3567  001084  B0D8               	btfsc	status,0,c
  3568  001086  D006               	goto	l3392
  3569                           
  3570                           ; BSR set to: 0
  3571  001088  0100               	movlb	0	; () banked
  3572  00108A  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  3573  00108C  0100               	movlb	0	; () banked
  3574  00108E  B4D8               	btfsc	status,2,c
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;iut_lcd.c: 610: precision = width;
  3578  001090  C0A1  F0A0         	movff	lcd_printf@width,lcd_printf@precision
  3579  001094                     l3392:
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;iut_lcd.c: 613: if (precision > digit_cnt)
  3583  001094  0100               	movlb	0	; () banked
  3584  001096  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3585  001098  0100               	movlb	0	; () banked
  3586  00109A  5D8F               	subwf	lcd_printf@digit_cnt& (0+255),w,b
  3587  00109C  B0D8               	btfsc	status,0,c
  3588  00109E  D005               	goto	l3396
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;iut_lcd.c: 614: precision -= digit_cnt;
  3592  0010A0  0100               	movlb	0	; () banked
  3593  0010A2  518F               	movf	lcd_printf@digit_cnt& (0+255),w,b
  3594  0010A4  0100               	movlb	0	; () banked
  3595  0010A6  5FA0               	subwf	lcd_printf@precision& (0+255),f,b
  3596  0010A8  D003               	goto	l3398
  3597  0010AA                     l3396:
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;iut_lcd.c: 615: else
  3601                           ;iut_lcd.c: 616: precision = 0;
  3602  0010AA  0E00               	movlw	0
  3603  0010AC  0100               	movlb	0	; () banked
  3604  0010AE  6FA0               	movwf	lcd_printf@precision& (0+255),b
  3605  0010B0                     l3398:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;iut_lcd.c: 622: if (width > precision + digit_cnt + prefix_cnt)
  3609  0010B0  0100               	movlb	0	; () banked
  3610  0010B2  51A1               	movf	lcd_printf@width& (0+255),w,b
  3611  0010B4  6E25               	movwf	??_lcd_printf& (0+255),c
  3612  0010B6  6A26               	clrf	(??_lcd_printf+1)& (0+255),c
  3613  0010B8  0100               	movlb	0	; () banked
  3614  0010BA  518F               	movf	lcd_printf@digit_cnt& (0+255),w,b
  3615  0010BC  C0A0  F027         	movff	lcd_printf@precision,??_lcd_printf+2
  3616  0010C0  6A28               	clrf	(??_lcd_printf+3)& (0+255),c
  3617  0010C2  2627               	addwf	??_lcd_printf+2,f,c
  3618  0010C4  0E00               	movlw	0
  3619  0010C6  2228               	addwfc	??_lcd_printf+3,f,c
  3620  0010C8  0100               	movlb	0	; () banked
  3621  0010CA  518C               	movf	lcd_printf@prefix_cnt& (0+255),w,b
  3622  0010CC  2627               	addwf	??_lcd_printf+2,f,c
  3623  0010CE  0E00               	movlw	0
  3624  0010D0  2228               	addwfc	??_lcd_printf+3,f,c
  3625  0010D2  5025               	movf	??_lcd_printf,w,c
  3626  0010D4  5C27               	subwf	??_lcd_printf+2,w,c
  3627  0010D6  5028               	movf	??_lcd_printf+3,w,c
  3628  0010D8  0A80               	xorlw	128
  3629  0010DA  6E29               	movwf	(??_lcd_printf+4)& (0+255),c
  3630  0010DC  5026               	movf	??_lcd_printf+1,w,c
  3631  0010DE  0A80               	xorlw	128
  3632  0010E0  5829               	subwfb	(??_lcd_printf+4)& (0+255),w,c
  3633  0010E2  B0D8               	btfsc	status,0,c
  3634  0010E4  D00B               	goto	l3402
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;iut_lcd.c: 623: space_cnt =
  3638                           ;iut_lcd.c: 624: width - precision - digit_cnt - prefix_cnt;
  3639  0010E6  0100               	movlb	0	; () banked
  3640  0010E8  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3641  0010EA  0100               	movlb	0	; () banked
  3642  0010EC  258F               	addwf	lcd_printf@digit_cnt& (0+255),w,b
  3643  0010EE  0100               	movlb	0	; () banked
  3644  0010F0  258C               	addwf	lcd_printf@prefix_cnt& (0+255),w,b
  3645  0010F2  0800               	sublw	0
  3646  0010F4  0100               	movlb	0	; () banked
  3647  0010F6  25A1               	addwf	lcd_printf@width& (0+255),w,b
  3648  0010F8  0100               	movlb	0	; () banked
  3649  0010FA  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  3650  0010FC                     l3402:
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;iut_lcd.c: 629: if (!(flags & 0x1) && space_cnt) {
  3654  0010FC  0100               	movlb	0	; () banked
  3655  0010FE  B19F               	btfsc	lcd_printf@flags& (0+255),0,b
  3656  001100  D00E               	goto	l3410
  3657                           
  3658                           ; BSR set to: 0
  3659  001102  0100               	movlb	0	; () banked
  3660  001104  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  3661  001106  0100               	movlb	0	; () banked
  3662  001108  B4D8               	btfsc	status,2,c
  3663  00110A  D009               	goto	l3410
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;iut_lcd.c: 630: lcd_repete_n(space_cnt, ' ');
  3667  00110C  0E20               	movlw	32
  3668  00110E  6E03               	movwf	lcd_repete_n@c,c
  3669  001110  0100               	movlb	0	; () banked
  3670  001112  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  3671  001114  EC59  F013         	call	_lcd_repete_n
  3672                           
  3673                           ;iut_lcd.c: 632: space_cnt = 0;
  3674  001118  0E00               	movlw	0
  3675  00111A  0100               	movlb	0	; () banked
  3676  00111C  6F99               	movwf	lcd_printf@space_cnt& (0+255),b
  3677  00111E                     l3410:
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;iut_lcd.c: 633: }
  3681                           ;iut_lcd.c: 636: if (sign_char) {
  3682  00111E  0100               	movlb	0	; () banked
  3683  001120  5183               	movf	lcd_printf@sign_char& (0+255),w,b
  3684  001122  0100               	movlb	0	; () banked
  3685  001124  B4D8               	btfsc	status,2,c
  3686  001126  D004               	goto	l3414
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;iut_lcd.c: 637: lcd_write_data_busy(sign_char);
  3690  001128  0100               	movlb	0	; () banked
  3691  00112A  5183               	movf	lcd_printf@sign_char& (0+255),w,b
  3692  00112C  EC43  F013         	call	_lcd_write_data_busy
  3693  001130                     l3414:
  3694                           
  3695                           ;iut_lcd.c: 638: }
  3696                           ;iut_lcd.c: 640: if (prefix_cnt) {
  3697  001130  0100               	movlb	0	; () banked
  3698  001132  518C               	movf	lcd_printf@prefix_cnt& (0+255),w,b
  3699  001134  0100               	movlb	0	; () banked
  3700  001136  B4D8               	btfsc	status,2,c
  3701  001138  D007               	goto	l3418
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;iut_lcd.c: 641: lcd_write_data_busy('0');
  3705  00113A  0E30               	movlw	48
  3706  00113C  EC43  F013         	call	_lcd_write_data_busy
  3707                           
  3708                           ;iut_lcd.c: 642: lcd_write_data_busy(c);
  3709  001140  0100               	movlb	0	; () banked
  3710  001142  51A2               	movf	lcd_printf@c& (0+255),w,b
  3711  001144  EC43  F013         	call	_lcd_write_data_busy
  3712  001148                     l3418:
  3713                           
  3714                           ;iut_lcd.c: 643: }
  3715                           ;iut_lcd.c: 647: if (precision > prefix_cnt)
  3716  001148  0100               	movlb	0	; () banked
  3717  00114A  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3718  00114C  0100               	movlb	0	; () banked
  3719  00114E  5D8C               	subwf	lcd_printf@prefix_cnt& (0+255),w,b
  3720  001150  B0D8               	btfsc	status,0,c
  3721  001152  D004               	goto	l3422
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;iut_lcd.c: 648: precision -= prefix_cnt;
  3725  001154  0100               	movlb	0	; () banked
  3726  001156  518C               	movf	lcd_printf@prefix_cnt& (0+255),w,b
  3727  001158  0100               	movlb	0	; () banked
  3728  00115A  5FA0               	subwf	lcd_printf@precision& (0+255),f,b
  3729  00115C                     l3422:
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;iut_lcd.c: 649: lcd_repete_n(precision, '0');
  3733  00115C  0E30               	movlw	48
  3734  00115E  6E03               	movwf	lcd_repete_n@c,c
  3735  001160  0100               	movlb	0	; () banked
  3736  001162  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3737  001164  EC59  F013         	call	_lcd_repete_n
  3738  001168  D004               	goto	l3428
  3739  00116A                     l3426:
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;iut_lcd.c: 652: lcd_write_data_busy(cval);
  3743  00116A  0100               	movlb	0	; () banked
  3744  00116C  519A               	movf	lcd_printf@cval& (0+255),w,b
  3745  00116E  EC43  F013         	call	_lcd_write_data_busy
  3746  001172                     l3428:
  3747  001172  0100               	movlb	0	; () banked
  3748  001174  4B86               	infsnz	lcd_printf@q& (0+255),f,b
  3749  001176  2B87               	incf	(lcd_printf@q+1)& (0+255),f,b
  3750  001178  C086  FFD9         	movff	lcd_printf@q,fsr2l
  3751  00117C  C087  FFDA         	movff	lcd_printf@q+1,fsr2h
  3752  001180  50DF               	movf	indf2,w,c
  3753  001182  0100               	movlb	0	; () banked
  3754  001184  6F9A               	movwf	lcd_printf@cval& (0+255),b
  3755                           
  3756                           ; BSR set to: 0
  3757                           
  3758                           ; BSR set to: 0
  3759  001186  0100               	movlb	0	; () banked
  3760  001188  519A               	movf	lcd_printf@cval& (0+255),w,b
  3761  00118A  0100               	movlb	0	; () banked
  3762  00118C  A4D8               	btfss	status,2,c
  3763  00118E  D7ED               	goto	l3426
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;iut_lcd.c: 653: }
  3767                           ;iut_lcd.c: 656: lcd_repete_n(space_cnt, ' ');
  3768                           
  3769                           ; BSR set to: 0
  3770  001190  0E20               	movlw	32
  3771  001192  6E03               	movwf	lcd_repete_n@c,c
  3772  001194  0100               	movlb	0	; () banked
  3773  001196  5199               	movf	lcd_printf@space_cnt& (0+255),w,b
  3774  001198  EC59  F013         	call	_lcd_repete_n
  3775                           
  3776                           ;iut_lcd.c: 659: }
  3777                           ;iut_lcd.c: 660: break;
  3778  00119C  D1F7               	goto	l3556
  3779  00119E                     l3434:
  3780                           
  3781                           ;iut_lcd.c: 662: {
  3782                           ;iut_lcd.c: 663: float x;
  3783                           ;iut_lcd.c: 664: unsigned char i, w;
  3784                           ;iut_lcd.c: 665: unsigned int k;
  3785                           ;iut_lcd.c: 666: unsigned char sign, have_sign = 0;
  3786  00119E  0E00               	movlw	0
  3787  0011A0  0100               	movlb	0	; () banked
  3788  0011A2  6F8B               	movwf	lcd_printf@have_sign& (0+255),b
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;iut_lcd.c: 667: x = (*(float *)__va_arg((*(float **)ap), (float)0));
  3792  0011A4  C09D  FFD9         	movff	lcd_printf@ap,fsr2l
  3793  0011A8  C09E  FFDA         	movff	lcd_printf@ap+1,fsr2h
  3794  0011AC  CFDE F096          	movff	postinc2,lcd_printf@x
  3795  0011B0  CFDE F097          	movff	postinc2,lcd_printf@x+1
  3796  0011B4  CFDD F098          	movff	postdec2,lcd_printf@x+2
  3797                           
  3798                           ; BSR set to: 0
  3799  0011B8  0E03               	movlw	3
  3800  0011BA  0100               	movlb	0	; () banked
  3801  0011BC  279D               	addwf	lcd_printf@ap& (0+255),f,b
  3802  0011BE  0E00               	movlw	0
  3803  0011C0  239E               	addwfc	(lcd_printf@ap+1)& (0+255),f,b
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;iut_lcd.c: 668: if (x < 0.0) {
  3807  0011C2  0100               	movlb	0	; () banked
  3808  0011C4  AF98               	btfss	(lcd_printf@x+2)& (0+255),7,b
  3809  0011C6  D012               	goto	l316
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;iut_lcd.c: 669: sign = '-';
  3813  0011C8  0E2D               	movlw	45
  3814  0011CA  0100               	movlb	0	; () banked
  3815  0011CC  6F88               	movwf	lcd_printf@sign& (0+255),b
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;iut_lcd.c: 670: x = -x;
  3819  0011CE  C096  F00C         	movff	lcd_printf@x,___ftneg@f1
  3820  0011D2  C097  F00D         	movff	lcd_printf@x+1,___ftneg@f1+1
  3821  0011D6  C098  F00E         	movff	lcd_printf@x+2,___ftneg@f1+2
  3822  0011DA  EC12  F013         	call	___ftneg	;wreg free
  3823  0011DE  C00C  F096         	movff	?___ftneg,lcd_printf@x
  3824  0011E2  C00D  F097         	movff	?___ftneg+1,lcd_printf@x+1
  3825  0011E6  C00E  F098         	movff	?___ftneg+2,lcd_printf@x+2
  3826  0011EA  D005               	goto	L29
  3827  0011EC                     l316:
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;iut_lcd.c: 673: if (flags & 0x2) {
  3831  0011EC  0100               	movlb	0	; () banked
  3832  0011EE  A39F               	btfss	lcd_printf@flags& (0+255),1,b
  3833  0011F0  D006               	goto	l318
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;iut_lcd.c: 674: sign = '+';
  3837  0011F2  0E2B               	movlw	43
  3838  0011F4  D008               	goto	L30
  3839  0011F6                     L29:
  3840                           
  3841                           ;iut_lcd.c: 675: have_sign = 1;
  3842  0011F6  0E01               	movlw	1
  3843  0011F8  0100               	movlb	0	; () banked
  3844  0011FA  6F8B               	movwf	lcd_printf@have_sign& (0+255),b
  3845                           
  3846                           ;iut_lcd.c: 676: } else if (flags & 0x4) {
  3847  0011FC  D007               	goto	l317
  3848  0011FE                     l318:
  3849                           
  3850                           ; BSR set to: 0
  3851  0011FE  0100               	movlb	0	; () banked
  3852  001200  A59F               	btfss	lcd_printf@flags& (0+255),2,b
  3853  001202  D004               	goto	l317
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;iut_lcd.c: 677: sign = ' ';
  3857  001204  0E20               	movlw	32
  3858  001206                     L30:
  3859  001206  0100               	movlb	0	; () banked
  3860  001208  6F88               	movwf	lcd_printf@sign& (0+255),b
  3861  00120A  D7F5               	goto	L29
  3862  00120C                     l317:
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;iut_lcd.c: 679: }
  3866                           ;iut_lcd.c: 680: }
  3867                           ;iut_lcd.c: 681: for (i = 0; x >= 1; i++) x /= 10;
  3868  00120C  0E00               	movlw	0
  3869  00120E  0100               	movlb	0	; () banked
  3870  001210  6F8D               	movwf	lcd_printf@i& (0+255),b
  3871                           
  3872                           ; BSR set to: 0
  3873  001212  C096  F001         	movff	lcd_printf@x,___ftge@ff1
  3874  001216  C097  F002         	movff	lcd_printf@x+1,___ftge@ff1+1
  3875  00121A  C098  F003         	movff	lcd_printf@x+2,___ftge@ff1+2
  3876  00121E  0E00               	movlw	0
  3877  001220  6E04               	movwf	___ftge@ff2,c
  3878  001222  0E80               	movlw	128
  3879  001224  6E05               	movwf	___ftge@ff2+1,c
  3880  001226  0E3F               	movlw	63
  3881  001228  6E06               	movwf	___ftge@ff2+2,c
  3882  00122A  EC7D  F011         	call	___ftge	;wreg free
  3883  00122E  A0D8               	btfss	status,0,c
  3884  001230  D025               	goto	l3462
  3885  001232  C096  F009         	movff	lcd_printf@x,___ftdiv@f1
  3886  001236  C097  F00A         	movff	lcd_printf@x+1,___ftdiv@f1+1
  3887  00123A  C098  F00B         	movff	lcd_printf@x+2,___ftdiv@f1+2
  3888  00123E  0E00               	movlw	0
  3889  001240  6E0C               	movwf	___ftdiv@f2,c
  3890  001242  0E20               	movlw	32
  3891  001244  6E0D               	movwf	___ftdiv@f2+1,c
  3892  001246  0E41               	movlw	65
  3893  001248  6E0E               	movwf	___ftdiv@f2+2,c
  3894  00124A  EC14  F010         	call	___ftdiv	;wreg free
  3895  00124E  C009  F096         	movff	?___ftdiv,lcd_printf@x
  3896  001252  C00A  F097         	movff	?___ftdiv+1,lcd_printf@x+1
  3897  001256  C00B  F098         	movff	?___ftdiv+2,lcd_printf@x+2
  3898  00125A  0100               	movlb	0	; () banked
  3899  00125C  2B8D               	incf	lcd_printf@i& (0+255),f,b
  3900                           
  3901                           ; BSR set to: 0
  3902  00125E  C096  F001         	movff	lcd_printf@x,___ftge@ff1
  3903  001262  C097  F002         	movff	lcd_printf@x+1,___ftge@ff1+1
  3904  001266  C098  F003         	movff	lcd_printf@x+2,___ftge@ff1+2
  3905  00126A  0E00               	movlw	0
  3906  00126C  6E04               	movwf	___ftge@ff2,c
  3907  00126E  0E80               	movlw	128
  3908  001270  6E05               	movwf	___ftge@ff2+1,c
  3909  001272  0E3F               	movlw	63
  3910  001274  6E06               	movwf	___ftge@ff2+2,c
  3911  001276  EC7D  F011         	call	___ftge	;wreg free
  3912  00127A  D7D9               	goto	L31
  3913  00127C                     l3462:
  3914                           
  3915                           ;iut_lcd.c: 682: if ((!have_precision) && (width == 0)) {
  3916  00127C  0100               	movlb	0	; () banked
  3917  00127E  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  3918  001280  0100               	movlb	0	; () banked
  3919  001282  A4D8               	btfss	status,2,c
  3920  001284  D00B               	goto	l3468
  3921                           
  3922                           ; BSR set to: 0
  3923  001286  0100               	movlb	0	; () banked
  3924  001288  51A1               	movf	lcd_printf@width& (0+255),w,b
  3925  00128A  0100               	movlb	0	; () banked
  3926  00128C  A4D8               	btfss	status,2,c
  3927  00128E  D006               	goto	l3468
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;iut_lcd.c: 683: precision = 3;
  3931  001290  0E03               	movlw	3
  3932  001292  0100               	movlb	0	; () banked
  3933  001294  6FA0               	movwf	lcd_printf@precision& (0+255),b
  3934                           
  3935                           ;iut_lcd.c: 684: have_precision = 1;
  3936  001296  0E01               	movlw	1
  3937  001298  0100               	movlb	0	; () banked
  3938  00129A  6F95               	movwf	lcd_printf@have_precision& (0+255),b
  3939  00129C                     l3468:
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;iut_lcd.c: 685: }
  3943                           ;iut_lcd.c: 686: w = precision + i;
  3944  00129C  0100               	movlb	0	; () banked
  3945  00129E  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3946  0012A0  0100               	movlb	0	; () banked
  3947  0012A2  258D               	addwf	lcd_printf@i& (0+255),w,b
  3948  0012A4  0100               	movlb	0	; () banked
  3949  0012A6  6F8E               	movwf	lcd_printf@w& (0+255),b
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;iut_lcd.c: 687: if (precision > 0) w++;
  3953  0012A8  0100               	movlb	0	; () banked
  3954  0012AA  51A0               	movf	lcd_printf@precision& (0+255),w,b
  3955  0012AC  0100               	movlb	0	; () banked
  3956  0012AE  B4D8               	btfsc	status,2,c
  3957  0012B0  D002               	goto	l3474
  3958                           
  3959                           ; BSR set to: 0
  3960  0012B2  0100               	movlb	0	; () banked
  3961  0012B4  2B8E               	incf	lcd_printf@w& (0+255),f,b
  3962  0012B6                     l3474:
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;iut_lcd.c: 688: if (have_sign) w++;
  3966  0012B6  0100               	movlb	0	; () banked
  3967  0012B8  518B               	movf	lcd_printf@have_sign& (0+255),w,b
  3968  0012BA  0100               	movlb	0	; () banked
  3969  0012BC  B4D8               	btfsc	status,2,c
  3970  0012BE  D002               	goto	l3478
  3971                           
  3972                           ; BSR set to: 0
  3973  0012C0  0100               	movlb	0	; () banked
  3974  0012C2  2B8E               	incf	lcd_printf@w& (0+255),f,b
  3975  0012C4                     l3478:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;iut_lcd.c: 689: if (i == 0) w++;
  3979  0012C4  0100               	movlb	0	; () banked
  3980  0012C6  518D               	movf	lcd_printf@i& (0+255),w,b
  3981  0012C8  0100               	movlb	0	; () banked
  3982  0012CA  A4D8               	btfss	status,2,c
  3983  0012CC  D002               	goto	l3482
  3984                           
  3985                           ; BSR set to: 0
  3986  0012CE  0100               	movlb	0	; () banked
  3987  0012D0  2B8E               	incf	lcd_printf@w& (0+255),f,b
  3988  0012D2                     l3482:
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;iut_lcd.c: 690: if (!have_precision) {
  3992  0012D2  0100               	movlb	0	; () banked
  3993  0012D4  5195               	movf	lcd_printf@have_precision& (0+255),w,b
  3994  0012D6  0100               	movlb	0	; () banked
  3995  0012D8  A4D8               	btfss	status,2,c
  3996  0012DA  D01F               	goto	l3490
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;iut_lcd.c: 691: if (width > w + 1) {
  4000  0012DC  0100               	movlb	0	; () banked
  4001  0012DE  51A1               	movf	lcd_printf@width& (0+255),w,b
  4002  0012E0  6E25               	movwf	??_lcd_printf& (0+255),c
  4003  0012E2  6A26               	clrf	(??_lcd_printf+1)& (0+255),c
  4004  0012E4  0100               	movlb	0	; () banked
  4005  0012E6  518E               	movf	lcd_printf@w& (0+255),w,b
  4006  0012E8  6E27               	movwf	(??_lcd_printf+2)& (0+255),c
  4007  0012EA  6A28               	clrf	(??_lcd_printf+3)& (0+255),c
  4008  0012EC  0E01               	movlw	1
  4009  0012EE  2627               	addwf	??_lcd_printf+2,f,c
  4010  0012F0  0E00               	movlw	0
  4011  0012F2  2228               	addwfc	??_lcd_printf+3,f,c
  4012  0012F4  5025               	movf	??_lcd_printf,w,c
  4013  0012F6  5C27               	subwf	??_lcd_printf+2,w,c
  4014  0012F8  5028               	movf	??_lcd_printf+3,w,c
  4015  0012FA  0A80               	xorlw	128
  4016  0012FC  6E29               	movwf	(??_lcd_printf+4)& (0+255),c
  4017  0012FE  5026               	movf	??_lcd_printf+1,w,c
  4018  001300  0A80               	xorlw	128
  4019  001302  5829               	subwfb	(??_lcd_printf+4)& (0+255),w,c
  4020  001304  B0D8               	btfsc	status,0,c
  4021  001306  D009               	goto	l3490
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;iut_lcd.c: 692: precision = width - (w + 1);
  4025  001308  0100               	movlb	0	; () banked
  4026  00130A  298E               	incf	lcd_printf@w& (0+255),w,b
  4027  00130C  0800               	sublw	0
  4028  00130E  0100               	movlb	0	; () banked
  4029  001310  25A1               	addwf	lcd_printf@width& (0+255),w,b
  4030  001312  0100               	movlb	0	; () banked
  4031  001314  6FA0               	movwf	lcd_printf@precision& (0+255),b
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;iut_lcd.c: 693: w = width;
  4035  001316  C0A1  F08E         	movff	lcd_printf@width,lcd_printf@w
  4036  00131A                     l3490:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;iut_lcd.c: 694: }
  4040                           ;iut_lcd.c: 695: }
  4041                           ;iut_lcd.c: 696: if (!(flags & 0x1)) {
  4042  00131A  0100               	movlb	0	; () banked
  4043  00131C  B19F               	btfsc	lcd_printf@flags& (0+255),0,b
  4044  00131E  D02E               	goto	l3514
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;iut_lcd.c: 697: if (flags & 0x10) {
  4048  001320  0100               	movlb	0	; () banked
  4049  001322  A99F               	btfss	lcd_printf@flags& (0+255),4,b
  4050  001324  D01B               	goto	l3508
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;iut_lcd.c: 698: if (have_sign) lcd_write_data_busy(sign);
  4054  001326  0100               	movlb	0	; () banked
  4055  001328  518B               	movf	lcd_printf@have_sign& (0+255),w,b
  4056  00132A  0100               	movlb	0	; () banked
  4057  00132C  B4D8               	btfsc	status,2,c
  4058  00132E  D00A               	goto	l3502
  4059                           
  4060                           ; BSR set to: 0
  4061  001330  0100               	movlb	0	; () banked
  4062  001332  5188               	movf	lcd_printf@sign& (0+255),w,b
  4063  001334  EC43  F013         	call	_lcd_write_data_busy
  4064                           
  4065                           ;iut_lcd.c: 699: for (; width > w; w++) lcd_write_data_busy('0');
  4066  001338  D005               	goto	l3502
  4067  00133A                     l3498:
  4068  00133A  0E30               	movlw	48
  4069  00133C  EC43  F013         	call	_lcd_write_data_busy
  4070  001340  0100               	movlb	0	; () banked
  4071  001342  2B8E               	incf	lcd_printf@w& (0+255),f,b
  4072  001344                     l3502:
  4073  001344  0100               	movlb	0	; () banked
  4074  001346  51A1               	movf	lcd_printf@width& (0+255),w,b
  4075  001348  0100               	movlb	0	; () banked
  4076  00134A  5D8E               	subwf	lcd_printf@w& (0+255),w,b
  4077  00134C  B0D8               	btfsc	status,0,c
  4078  00134E  D01F               	goto	l3518
  4079  001350  D7F4               	goto	l3498
  4080  001352                     l3504:
  4081                           
  4082                           ; BSR set to: 0
  4083  001352  0E20               	movlw	32
  4084  001354  EC43  F013         	call	_lcd_write_data_busy
  4085  001358  0100               	movlb	0	; () banked
  4086  00135A  2B8E               	incf	lcd_printf@w& (0+255),f,b
  4087  00135C                     l3508:
  4088                           
  4089                           ; BSR set to: 0
  4090  00135C  0100               	movlb	0	; () banked
  4091  00135E  51A1               	movf	lcd_printf@width& (0+255),w,b
  4092  001360  0100               	movlb	0	; () banked
  4093  001362  5D8E               	subwf	lcd_printf@w& (0+255),w,b
  4094  001364  A0D8               	btfss	status,0,c
  4095  001366  D7F5               	goto	l3504
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;iut_lcd.c: 702: if (have_sign) lcd_write_data_busy(sign);
  4099                           
  4100                           ; BSR set to: 0
  4101  001368  0100               	movlb	0	; () banked
  4102  00136A  518B               	movf	lcd_printf@have_sign& (0+255),w,b
  4103  00136C  0100               	movlb	0	; () banked
  4104  00136E  B4D8               	btfsc	status,2,c
  4105  001370  D00E               	goto	l3518
  4106                           
  4107                           ; BSR set to: 0
  4108  001372  0100               	movlb	0	; () banked
  4109  001374  5188               	movf	lcd_printf@sign& (0+255),w,b
  4110  001376  EC43  F013         	call	_lcd_write_data_busy
  4111                           
  4112                           ;iut_lcd.c: 703: }
  4113                           ;iut_lcd.c: 704: } else {
  4114  00137A  D009               	goto	l3518
  4115  00137C                     l3514:
  4116                           
  4117                           ;iut_lcd.c: 705: if (have_sign) lcd_write_data_busy(sign);
  4118  00137C  0100               	movlb	0	; () banked
  4119  00137E  518B               	movf	lcd_printf@have_sign& (0+255),w,b
  4120  001380  0100               	movlb	0	; () banked
  4121  001382  B4D8               	btfsc	status,2,c
  4122  001384  D004               	goto	l3518
  4123                           
  4124                           ; BSR set to: 0
  4125  001386  0100               	movlb	0	; () banked
  4126  001388  5188               	movf	lcd_printf@sign& (0+255),w,b
  4127  00138A  EC43  F013         	call	_lcd_write_data_busy
  4128  00138E                     l3518:
  4129                           
  4130                           ;iut_lcd.c: 706: }
  4131                           ;iut_lcd.c: 707: if (i == 0) {
  4132  00138E  0100               	movlb	0	; () banked
  4133  001390  518D               	movf	lcd_printf@i& (0+255),w,b
  4134  001392  0100               	movlb	0	; () banked
  4135  001394  A4D8               	btfss	status,2,c
  4136  001396  D003               	goto	l3522
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;iut_lcd.c: 708: lcd_write_data_busy('0');
  4140  001398  0E30               	movlw	48
  4141  00139A  EC43  F013         	call	_lcd_write_data_busy
  4142  00139E                     l3522:
  4143                           
  4144                           ;iut_lcd.c: 709: }
  4145                           ;iut_lcd.c: 710: for (; i > 0; i--) {
  4146  00139E  0100               	movlb	0	; () banked
  4147  0013A0  518D               	movf	lcd_printf@i& (0+255),w,b
  4148  0013A2  0100               	movlb	0	; () banked
  4149  0013A4  B4D8               	btfsc	status,2,c
  4150  0013A6  D04A               	goto	l3532
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;iut_lcd.c: 711: x *= 10;
  4154                           
  4155                           ; BSR set to: 0
  4156                           
  4157                           ; BSR set to: 0
  4158  0013A8  C096  F009         	movff	lcd_printf@x,___ftmul@f1
  4159  0013AC  C097  F00A         	movff	lcd_printf@x+1,___ftmul@f1+1
  4160  0013B0  C098  F00B         	movff	lcd_printf@x+2,___ftmul@f1+2
  4161  0013B4  0E00               	movlw	0
  4162  0013B6  6E0C               	movwf	___ftmul@f2,c
  4163  0013B8  0E20               	movlw	32
  4164  0013BA  6E0D               	movwf	___ftmul@f2+1,c
  4165  0013BC  0E41               	movlw	65
  4166  0013BE  6E0E               	movwf	___ftmul@f2+2,c
  4167  0013C0  EC9A  F00F         	call	___ftmul	;wreg free
  4168  0013C4  C009  F096         	movff	?___ftmul,lcd_printf@x
  4169  0013C8  C00A  F097         	movff	?___ftmul+1,lcd_printf@x+1
  4170  0013CC  C00B  F098         	movff	?___ftmul+2,lcd_printf@x+2
  4171                           
  4172                           ;iut_lcd.c: 712: k = (unsigned int)x;
  4173  0013D0  C096  F001         	movff	lcd_printf@x,___fttol@f1
  4174  0013D4  C097  F002         	movff	lcd_printf@x+1,___fttol@f1+1
  4175  0013D8  C098  F003         	movff	lcd_printf@x+2,___fttol@f1+2
  4176  0013DC  EC20  F00F         	call	___fttol	;wreg free
  4177  0013E0  C001  F089         	movff	?___fttol,lcd_printf@k
  4178  0013E4  C002  F08A         	movff	?___fttol+1,lcd_printf@k+1
  4179                           
  4180                           ;iut_lcd.c: 713: x = x - k;
  4181  0013E8  C089  F009         	movff	lcd_printf@k,___lwtoft@c
  4182  0013EC  C08A  F00A         	movff	lcd_printf@k+1,___lwtoft@c+1
  4183  0013F0  EC00  F013         	call	___lwtoft	;wreg free
  4184  0013F4  C009  F00C         	movff	?___lwtoft,___ftneg@f1
  4185  0013F8  C00A  F00D         	movff	?___lwtoft+1,___ftneg@f1+1
  4186  0013FC  C00B  F00E         	movff	?___lwtoft+2,___ftneg@f1+2
  4187  001400  EC12  F013         	call	___ftneg	;wreg free
  4188  001404  C00C  F00F         	movff	?___ftneg,___ftadd@f1
  4189  001408  C00D  F010         	movff	?___ftneg+1,___ftadd@f1+1
  4190  00140C  C00E  F011         	movff	?___ftneg+2,___ftadd@f1+2
  4191  001410  C096  F012         	movff	lcd_printf@x,___ftadd@f2
  4192  001414  C097  F013         	movff	lcd_printf@x+1,___ftadd@f2+1
  4193  001418  C098  F014         	movff	lcd_printf@x+2,___ftadd@f2+2
  4194  00141C  EC4A  F00E         	call	___ftadd	;wreg free
  4195  001420  C00F  F096         	movff	?___ftadd,lcd_printf@x
  4196  001424  C010  F097         	movff	?___ftadd+1,lcd_printf@x+1
  4197  001428  C011  F098         	movff	?___ftadd+2,lcd_printf@x+2
  4198                           
  4199                           ;iut_lcd.c: 714: lcd_write_data_busy(k + '0');
  4200  00142C  0100               	movlb	0	; () banked
  4201  00142E  5189               	movf	lcd_printf@k& (0+255),w,b
  4202  001430  0F30               	addlw	48
  4203  001432  EC43  F013         	call	_lcd_write_data_busy
  4204  001436  0100               	movlb	0	; () banked
  4205  001438  078D               	decf	lcd_printf@i& (0+255),f,b
  4206  00143A  D7B1               	goto	l3522
  4207  00143C                     l3532:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;iut_lcd.c: 715: }
  4211                           ;iut_lcd.c: 716: if (precision > 0) lcd_write_data_busy('.');
  4212  00143C  0100               	movlb	0	; () banked
  4213  00143E  51A0               	movf	lcd_printf@precision& (0+255),w,b
  4214  001440  0100               	movlb	0	; () banked
  4215  001442  B4D8               	btfsc	status,2,c
  4216  001444  D04D               	goto	l3540
  4217                           
  4218                           ; BSR set to: 0
  4219  001446  0E2E               	movlw	46
  4220  001448  EC43  F013         	call	_lcd_write_data_busy
  4221                           
  4222                           ;iut_lcd.c: 717: for (; i < precision; i++) {
  4223  00144C  D049               	goto	l3540
  4224  00144E                     l3536:
  4225                           
  4226                           ;iut_lcd.c: 718: x *= 10;
  4227  00144E  C096  F009         	movff	lcd_printf@x,___ftmul@f1
  4228  001452  C097  F00A         	movff	lcd_printf@x+1,___ftmul@f1+1
  4229  001456  C098  F00B         	movff	lcd_printf@x+2,___ftmul@f1+2
  4230  00145A  0E00               	movlw	0
  4231  00145C  6E0C               	movwf	___ftmul@f2,c
  4232  00145E  0E20               	movlw	32
  4233  001460  6E0D               	movwf	___ftmul@f2+1,c
  4234  001462  0E41               	movlw	65
  4235  001464  6E0E               	movwf	___ftmul@f2+2,c
  4236  001466  EC9A  F00F         	call	___ftmul	;wreg free
  4237  00146A  C009  F096         	movff	?___ftmul,lcd_printf@x
  4238  00146E  C00A  F097         	movff	?___ftmul+1,lcd_printf@x+1
  4239  001472  C00B  F098         	movff	?___ftmul+2,lcd_printf@x+2
  4240                           
  4241                           ;iut_lcd.c: 719: k = (unsigned int)x;
  4242  001476  C096  F001         	movff	lcd_printf@x,___fttol@f1
  4243  00147A  C097  F002         	movff	lcd_printf@x+1,___fttol@f1+1
  4244  00147E  C098  F003         	movff	lcd_printf@x+2,___fttol@f1+2
  4245  001482  EC20  F00F         	call	___fttol	;wreg free
  4246  001486  C001  F089         	movff	?___fttol,lcd_printf@k
  4247  00148A  C002  F08A         	movff	?___fttol+1,lcd_printf@k+1
  4248                           
  4249                           ;iut_lcd.c: 720: x = x - k;
  4250  00148E  C089  F009         	movff	lcd_printf@k,___lwtoft@c
  4251  001492  C08A  F00A         	movff	lcd_printf@k+1,___lwtoft@c+1
  4252  001496  EC00  F013         	call	___lwtoft	;wreg free
  4253  00149A  C009  F00C         	movff	?___lwtoft,___ftneg@f1
  4254  00149E  C00A  F00D         	movff	?___lwtoft+1,___ftneg@f1+1
  4255  0014A2  C00B  F00E         	movff	?___lwtoft+2,___ftneg@f1+2
  4256  0014A6  EC12  F013         	call	___ftneg	;wreg free
  4257  0014AA  C00C  F00F         	movff	?___ftneg,___ftadd@f1
  4258  0014AE  C00D  F010         	movff	?___ftneg+1,___ftadd@f1+1
  4259  0014B2  C00E  F011         	movff	?___ftneg+2,___ftadd@f1+2
  4260  0014B6  C096  F012         	movff	lcd_printf@x,___ftadd@f2
  4261  0014BA  C097  F013         	movff	lcd_printf@x+1,___ftadd@f2+1
  4262  0014BE  C098  F014         	movff	lcd_printf@x+2,___ftadd@f2+2
  4263  0014C2  EC4A  F00E         	call	___ftadd	;wreg free
  4264  0014C6  C00F  F096         	movff	?___ftadd,lcd_printf@x
  4265  0014CA  C010  F097         	movff	?___ftadd+1,lcd_printf@x+1
  4266  0014CE  C011  F098         	movff	?___ftadd+2,lcd_printf@x+2
  4267                           
  4268                           ;iut_lcd.c: 721: lcd_write_data_busy(k + '0');
  4269  0014D2  0100               	movlb	0	; () banked
  4270  0014D4  5189               	movf	lcd_printf@k& (0+255),w,b
  4271  0014D6  0F30               	addlw	48
  4272  0014D8  EC43  F013         	call	_lcd_write_data_busy
  4273  0014DC  0100               	movlb	0	; () banked
  4274  0014DE  2B8D               	incf	lcd_printf@i& (0+255),f,b
  4275  0014E0                     l3540:
  4276  0014E0  0100               	movlb	0	; () banked
  4277  0014E2  51A0               	movf	lcd_printf@precision& (0+255),w,b
  4278  0014E4  0100               	movlb	0	; () banked
  4279  0014E6  5D8D               	subwf	lcd_printf@i& (0+255),w,b
  4280  0014E8  A0D8               	btfss	status,0,c
  4281  0014EA  D7B1               	goto	l3536
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;iut_lcd.c: 722: }
  4285                           ;iut_lcd.c: 723: if (flags & 0x1) {
  4286  0014EC  0100               	movlb	0	; () banked
  4287  0014EE  B19F               	btfsc	lcd_printf@flags& (0+255),0,b
  4288  0014F0  D006               	goto	l3548
  4289  0014F2  D04C               	goto	l3556
  4290  0014F4                     l3544:
  4291                           
  4292                           ; BSR set to: 0
  4293  0014F4  0E20               	movlw	32
  4294  0014F6  EC43  F013         	call	_lcd_write_data_busy
  4295  0014FA  0100               	movlb	0	; () banked
  4296  0014FC  2B8E               	incf	lcd_printf@w& (0+255),f,b
  4297  0014FE                     l3548:
  4298                           
  4299                           ; BSR set to: 0
  4300  0014FE  0100               	movlb	0	; () banked
  4301  001500  51A1               	movf	lcd_printf@width& (0+255),w,b
  4302  001502  0100               	movlb	0	; () banked
  4303  001504  5D8E               	subwf	lcd_printf@w& (0+255),w,b
  4304  001506  B0D8               	btfsc	status,0,c
  4305  001508  D041               	goto	l3556
  4306  00150A  D7F4               	goto	l3544
  4307  00150C                     l3552:
  4308                           
  4309                           ; BSR set to: 0
  4310  00150C  0100               	movlb	0	; () banked
  4311  00150E  51A2               	movf	lcd_printf@c& (0+255),w,b
  4312                           
  4313                           ; Switch size 1, requested type "space"
  4314                           ; Number of cases is 16, Range of values is 0 to 120
  4315                           ; switch strategies available:
  4316                           ; Name         Instructions Cycles
  4317                           ; simple_byte           49    25 (average)
  4318                           ;	Chosen strategy is simple_byte
  4319  001510  0A00               	xorlw	0	; case 0
  4320  001512  B4D8               	btfsc	status,2,c
  4321  001514  EF6A  F005         	goto	l3130
  4322  001518  0A25               	xorlw	37	; case 37
  4323  00151A  B4D8               	btfsc	status,2,c
  4324  00151C  EF6D  F005         	goto	l3132
  4325  001520  0A67               	xorlw	103	; case 66
  4326  001522  B4D8               	btfsc	status,2,c
  4327  001524  D41B               	goto	l3260
  4328  001526  0A12               	xorlw	18	; case 80
  4329  001528  B4D8               	btfsc	status,2,c
  4330  00152A  D450               	goto	l3280
  4331  00152C  0A03               	xorlw	3	; case 83
  4332  00152E  B4D8               	btfsc	status,2,c
  4333  001530  EFA6  F005         	goto	l3156
  4334  001534  0A0B               	xorlw	11	; case 88
  4335  001536  B4D8               	btfsc	status,2,c
  4336  001538  D411               	goto	l3260
  4337  00153A  0A3A               	xorlw	58	; case 98
  4338  00153C  B4D8               	btfsc	status,2,c
  4339  00153E  D40E               	goto	l3260
  4340  001540  0A01               	xorlw	1	; case 99
  4341  001542  B4D8               	btfsc	status,2,c
  4342  001544  EF72  F005         	goto	l3134
  4343  001548  0A07               	xorlw	7	; case 100
  4344  00154A  B4D8               	btfsc	status,2,c
  4345  00154C  D405               	goto	l3258
  4346  00154E  0A02               	xorlw	2	; case 102
  4347  001550  B4D8               	btfsc	status,2,c
  4348  001552  D625               	goto	l3434
  4349  001554  0A0F               	xorlw	15	; case 105
  4350  001556  B4D8               	btfsc	status,2,c
  4351  001558  EFAC  F006         	goto	l3258
  4352  00155C  0A06               	xorlw	6	; case 111
  4353  00155E  B4D8               	btfsc	status,2,c
  4354  001560  EFAE  F006         	goto	l3260
  4355  001564  0A1F               	xorlw	31	; case 112
  4356  001566  B4D8               	btfsc	status,2,c
  4357  001568  D431               	goto	l3280
  4358  00156A  0A03               	xorlw	3	; case 115
  4359  00156C  B4D8               	btfsc	status,2,c
  4360  00156E  EF2D  F006         	goto	l3210
  4361  001572  0A06               	xorlw	6	; case 117
  4362  001574  B4D8               	btfsc	status,2,c
  4363  001576  EFAE  F006         	goto	l3260
  4364  00157A  0A0D               	xorlw	13	; case 120
  4365  00157C  B4D8               	btfsc	status,2,c
  4366  00157E  EFAE  F006         	goto	l3260
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;iut_lcd.c: 732: } else {
  4370  001582  D004               	goto	l3556
  4371  001584                     l3554:
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;iut_lcd.c: 733: lcd_putc(c);
  4375  001584  0100               	movlb	0	; () banked
  4376  001586  51A2               	movf	lcd_printf@c& (0+255),w,b
  4377  001588  EC39  F012         	call	_lcd_putc
  4378  00158C                     l3556:
  4379  00158C  4A1B               	infsnz	lcd_printf@f,f,c
  4380  00158E  2A1C               	incf	lcd_printf@f+1,f,c
  4381  001590                     L21:
  4382  001590  C01B  FFF6         	movff	lcd_printf@f,tblptrl
  4383  001594  C01C  FFF7         	movff	lcd_printf@f+1,tblptrh
  4384  001598                     	if	0	;tblptru may be non-zero
  4385  001598                     	endif
  4386  001598                     	if	0	;tblptru may be non-zero
  4387  001598                     	endif
  4388  001598  0008               	tblrd		*
  4389  00159A  CFF5 F0A2          	movff	tablat,lcd_printf@c
  4390  00159E  0100               	movlb	0	; () banked
  4391  0015A0  51A2               	movf	lcd_printf@c& (0+255),w,b
  4392  0015A2  0100               	movlb	0	; () banked
  4393  0015A4  B4D8               	btfsc	status,2,c
  4394  0015A6  0012               	return	
  4395  0015A8  EF24  F004         	goto	l3008
  4396  0015AC                     __end_of_lcd_printf:
  4397                           	opt stack 0
  4398                           tblptru	equ	0xFF8
  4399                           tblptrh	equ	0xFF7
  4400                           tblptrl	equ	0xFF6
  4401                           tablat	equ	0xFF5
  4402                           prodl	equ	0xFF3
  4403                           indf2	equ	0xFDF
  4404                           postinc2	equ	0xFDE
  4405                           postdec2	equ	0xFDD
  4406                           fsr2h	equ	0xFDA
  4407                           fsr2l	equ	0xFD9
  4408                           status	equ	0xFD8
  4409                           
  4410 ;; *************** function _lcd_repete_n *****************
  4411 ;; Defined at:
  4412 ;;		line 798 in file "iut_lcd.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  n               1    wreg     unsigned char 
  4415 ;;  c               1    2[COMRAM] unsigned char 
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;  n               1    3[COMRAM] unsigned char 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      void 
  4420 ;; Registers used:
  4421 ;;		wreg, status,2, status,0, cstack
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4427 ;;      Params:         1       0       0       0       0       0       0       0       0
  4428 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4430 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4431 ;;Total ram usage:        2 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:    3
  4434 ;; This function calls:
  4435 ;;		_lcd_write_data_busy
  4436 ;; This function is called by:
  4437 ;;		_lcd_printf
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text5
  4442  0026B2                     __ptext5:
  4443                           	opt stack 0
  4444  0026B2                     _lcd_repete_n:
  4445                           	opt stack 26
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;incstack = 0
  4449                           ;lcd_repete_n@n stored from wreg
  4450  0026B2  6E04               	movwf	lcd_repete_n@n,c
  4451                           
  4452                           ;iut_lcd.c: 799: while (n--) lcd_write_data_busy(c);
  4453  0026B4  D003               	goto	l2648
  4454  0026B6                     l2646:
  4455  0026B6  5003               	movf	lcd_repete_n@c,w,c
  4456  0026B8  EC43  F013         	call	_lcd_write_data_busy
  4457  0026BC                     l2648:
  4458  0026BC  0604               	decf	lcd_repete_n@n,f,c
  4459  0026BE  2804               	incf	lcd_repete_n@n,w,c
  4460  0026C0  B4D8               	btfsc	status,2,c
  4461  0026C2  0012               	return	
  4462  0026C4  D7F8               	goto	l2646
  4463  0026C6                     __end_of_lcd_repete_n:
  4464                           	opt stack 0
  4465                           tblptru	equ	0xFF8
  4466                           tblptrh	equ	0xFF7
  4467                           tblptrl	equ	0xFF6
  4468                           tablat	equ	0xFF5
  4469                           prodl	equ	0xFF3
  4470                           indf2	equ	0xFDF
  4471                           postinc2	equ	0xFDE
  4472                           postdec2	equ	0xFDD
  4473                           fsr2h	equ	0xFDA
  4474                           fsr2l	equ	0xFD9
  4475                           status	equ	0xFD8
  4476                           
  4477 ;; *************** function _lcd_putc *****************
  4478 ;; Defined at:
  4479 ;;		line 180 in file "iut_lcd.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  lettre          1    wreg     unsigned char 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  lettre          1    5[COMRAM] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      void 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0
  4494 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4496 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4497 ;;Total ram usage:        1 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    4
  4500 ;; This function calls:
  4501 ;;		_lcd_position
  4502 ;;		_lcd_write_cmd_busy
  4503 ;;		_lcd_write_data_busy
  4504 ;; This function is called by:
  4505 ;;		_lcd_printf
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text6
  4510  002472                     __ptext6:
  4511                           	opt stack 0
  4512  002472                     _lcd_putc:
  4513                           	opt stack 25
  4514                           
  4515                           ;incstack = 0
  4516                           ;lcd_putc@lettre stored from wreg
  4517  002472  6E06               	movwf	lcd_putc@lettre,c
  4518                           
  4519                           ;iut_lcd.c: 181: if (lettre >= 0x20) {
  4520  002474  0E1F               	movlw	31
  4521  002476  6406               	cpfsgt	lcd_putc@lettre,c
  4522  002478  D004               	goto	l2630
  4523                           
  4524                           ;iut_lcd.c: 182: lcd_write_data_busy(lettre);
  4525  00247A  5006               	movf	lcd_putc@lettre,w,c
  4526  00247C  EC43  F013         	call	_lcd_write_data_busy
  4527                           
  4528                           ;iut_lcd.c: 183: } else if (lettre == '\f') {
  4529  002480  0012               	return	
  4530  002482                     l2630:
  4531  002482  0E0C               	movlw	12
  4532  002484  1806               	xorwf	lcd_putc@lettre,w,c
  4533  002486  A4D8               	btfss	status,2,c
  4534  002488  D004               	goto	l2634
  4535                           
  4536                           ;iut_lcd.c: 184: lcd_write_cmd_busy(0x01);
  4537  00248A  0E01               	movlw	1
  4538  00248C  EC4E  F013         	call	_lcd_write_cmd_busy
  4539                           
  4540                           ;iut_lcd.c: 185: } else if (lettre == '\n') {
  4541  002490  0012               	return	
  4542  002492                     l2634:
  4543  002492  0E0A               	movlw	10
  4544  002494  1806               	xorwf	lcd_putc@lettre,w,c
  4545  002496  A4D8               	btfss	status,2,c
  4546  002498  D006               	goto	l2638
  4547                           
  4548                           ;iut_lcd.c: 186: lcd_position(1, 0);
  4549  00249A  0E00               	movlw	0
  4550  00249C  6E03               	movwf	lcd_position@colonne,c
  4551  00249E  0E01               	movlw	1
  4552  0024A0  EC34  F013         	call	_lcd_position
  4553                           
  4554                           ;iut_lcd.c: 187: } else if (lettre == '\b') {
  4555  0024A4  0012               	return	
  4556  0024A6                     l2638:
  4557  0024A6  0E08               	movlw	8
  4558  0024A8  1806               	xorwf	lcd_putc@lettre,w,c
  4559  0024AA  A4D8               	btfss	status,2,c
  4560  0024AC  D004               	goto	l2642
  4561                           
  4562                           ;iut_lcd.c: 188: lcd_write_cmd_busy(0x10);
  4563  0024AE  0E10               	movlw	16
  4564  0024B0  EC4E  F013         	call	_lcd_write_cmd_busy
  4565                           
  4566                           ;iut_lcd.c: 189: } else {
  4567  0024B4  0012               	return	
  4568  0024B6                     l2642:
  4569                           
  4570                           ;iut_lcd.c: 190: lcd_write_data_busy(lettre);
  4571  0024B6  5006               	movf	lcd_putc@lettre,w,c
  4572  0024B8  EC43  F013         	call	_lcd_write_data_busy
  4573  0024BC  0012               	return	
  4574  0024BE                     __end_of_lcd_putc:
  4575                           	opt stack 0
  4576                           tblptru	equ	0xFF8
  4577                           tblptrh	equ	0xFF7
  4578                           tblptrl	equ	0xFF6
  4579                           tablat	equ	0xFF5
  4580                           prodl	equ	0xFF3
  4581                           indf2	equ	0xFDF
  4582                           postinc2	equ	0xFDE
  4583                           postdec2	equ	0xFDD
  4584                           fsr2h	equ	0xFDA
  4585                           fsr2l	equ	0xFD9
  4586                           status	equ	0xFD8
  4587                           
  4588 ;; *************** function _lcd_write_data_busy *****************
  4589 ;; Defined at:
  4590 ;;		line 758 in file "iut_lcd.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  c               1    wreg     unsigned char 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  c               1    1[COMRAM] unsigned char 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4604 ;;      Params:         0       0       0       0       0       0       0       0       0
  4605 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4607 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4608 ;;Total ram usage:        1 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    2
  4611 ;; This function calls:
  4612 ;;		_lcd_busy
  4613 ;;		_lcd_write_cmd_data
  4614 ;; This function is called by:
  4615 ;;		_lcd_putc
  4616 ;;		_lcd_printf
  4617 ;;		_lcd_repete_n
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text7
  4622  002686                     __ptext7:
  4623                           	opt stack 0
  4624  002686                     _lcd_write_data_busy:
  4625                           	opt stack 27
  4626                           
  4627                           ;incstack = 0
  4628                           ;lcd_write_data_busy@c stored from wreg
  4629  002686  6E02               	movwf	lcd_write_data_busy@c,c
  4630  002688                     l2584:
  4631  002688  EC5F  F012         	call	_lcd_busy	;wreg free
  4632  00268C  0900               	iorlw	0
  4633  00268E  A4D8               	btfss	status,2,c
  4634  002690  D7FB               	goto	l2584
  4635                           
  4636                           ;iut_lcd.c: 760: PORTDbits.RD1 = 1;
  4637  002692  8283               	bsf	3971,1,c	;volatile
  4638                           
  4639                           ;iut_lcd.c: 761: lcd_write_cmd_data(c);
  4640  002694  5002               	movf	lcd_write_data_busy@c,w,c
  4641  002696  EC98  F012         	call	_lcd_write_cmd_data
  4642  00269A  0012               	return		;funcret
  4643  00269C                     __end_of_lcd_write_data_busy:
  4644                           	opt stack 0
  4645                           tblptru	equ	0xFF8
  4646                           tblptrh	equ	0xFF7
  4647                           tblptrl	equ	0xFF6
  4648                           tablat	equ	0xFF5
  4649                           prodl	equ	0xFF3
  4650                           indf2	equ	0xFDF
  4651                           postinc2	equ	0xFDE
  4652                           postdec2	equ	0xFDD
  4653                           fsr2h	equ	0xFDA
  4654                           fsr2l	equ	0xFD9
  4655                           status	equ	0xFD8
  4656                           
  4657 ;; *************** function _lcd_position *****************
  4658 ;; Defined at:
  4659 ;;		line 159 in file "iut_lcd.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  ligne           1    wreg     unsigned char 
  4662 ;;  colonne         1    2[COMRAM] unsigned char 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  ligne           1    3[COMRAM] unsigned char 
  4665 ;;  address         1    4[COMRAM] unsigned char 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4675 ;;      Params:         1       0       0       0       0       0       0       0       0
  4676 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4678 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4679 ;;Total ram usage:        3 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    3
  4682 ;; This function calls:
  4683 ;;		_lcd_write_cmd_busy
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;;		_lcd_putc
  4687 ;;		_lcd_gotoyx
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text8
  4692  002668                     __ptext8:
  4693                           	opt stack 0
  4694  002668                     _lcd_position:
  4695                           	opt stack 25
  4696                           
  4697                           ;incstack = 0
  4698                           ;lcd_position@ligne stored from wreg
  4699  002668  6E04               	movwf	lcd_position@ligne,c
  4700                           
  4701                           ;iut_lcd.c: 160: char address;
  4702                           ;iut_lcd.c: 162: if (ligne != 0) {
  4703  00266A  5004               	movf	lcd_position@ligne,w,c
  4704  00266C  B4D8               	btfsc	status,2,c
  4705  00266E  D002               	goto	l2576
  4706                           
  4707                           ;iut_lcd.c: 163: address = 0x40;
  4708  002670  0E40               	movlw	64
  4709  002672  D001               	goto	L34
  4710  002674                     l2576:
  4711                           
  4712                           ;iut_lcd.c: 165: address = 0;
  4713  002674  0E00               	movlw	0
  4714  002676                     L34:
  4715  002676  6E05               	movwf	lcd_position@address,c
  4716                           
  4717                           ;iut_lcd.c: 166: }
  4718                           ;iut_lcd.c: 167: address += colonne;
  4719  002678  5003               	movf	lcd_position@colonne,w,c
  4720  00267A  2605               	addwf	lcd_position@address,f,c
  4721                           
  4722                           ;iut_lcd.c: 168: lcd_write_cmd_busy(0x80 | address);
  4723  00267C  5005               	movf	lcd_position@address,w,c
  4724  00267E  0980               	iorlw	128
  4725  002680  EC4E  F013         	call	_lcd_write_cmd_busy
  4726  002684  0012               	return		;funcret
  4727  002686                     __end_of_lcd_position:
  4728                           	opt stack 0
  4729                           tblptru	equ	0xFF8
  4730                           tblptrh	equ	0xFF7
  4731                           tblptrl	equ	0xFF6
  4732                           tablat	equ	0xFF5
  4733                           prodl	equ	0xFF3
  4734                           indf2	equ	0xFDF
  4735                           postinc2	equ	0xFDE
  4736                           postdec2	equ	0xFDD
  4737                           fsr2h	equ	0xFDA
  4738                           fsr2l	equ	0xFD9
  4739                           status	equ	0xFD8
  4740                           
  4741 ;; *************** function ___lwtoft *****************
  4742 ;; Defined at:
  4743 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwtoft.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  c               2    8[COMRAM] unsigned int 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  3    8[COMRAM] float 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4757 ;;      Params:         3       0       0       0       0       0       0       0       0
  4758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4760 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4761 ;;Total ram usage:        3 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    1
  4764 ;; This function calls:
  4765 ;;		___ftpack
  4766 ;; This function is called by:
  4767 ;;		_lcd_printf
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text9
  4772  002600                     __ptext9:
  4773                           	opt stack 0
  4774  002600                     ___lwtoft:
  4775                           	opt stack 28
  4776                           
  4777                           ;incstack = 0
  4778  002600  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  4779  002604  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  4780  002608  6A03               	clrf	___ftpack@arg+2,c
  4781  00260A  0E8E               	movlw	142
  4782  00260C  6E04               	movwf	___ftpack@exp,c
  4783  00260E  0E00               	movlw	0
  4784  002610  6E05               	movwf	___ftpack@sign,c
  4785  002612  EC87  F010         	call	___ftpack	;wreg free
  4786  002616  C001  F009         	movff	?___ftpack,?___lwtoft
  4787  00261A  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  4788  00261E  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  4789  002622  0012               	return	
  4790  002624                     __end_of___lwtoft:
  4791                           	opt stack 0
  4792                           tblptru	equ	0xFF8
  4793                           tblptrh	equ	0xFF7
  4794                           tblptrl	equ	0xFF6
  4795                           tablat	equ	0xFF5
  4796                           prodl	equ	0xFF3
  4797                           indf2	equ	0xFDF
  4798                           postinc2	equ	0xFDE
  4799                           postdec2	equ	0xFDD
  4800                           fsr2h	equ	0xFDA
  4801                           fsr2l	equ	0xFD9
  4802                           status	equ	0xFD8
  4803                           
  4804 ;; *************** function ___llmod *****************
  4805 ;; Defined at:
  4806 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\llmod.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  dividend        4    0[COMRAM] unsigned long 
  4809 ;;  divisor         4    4[COMRAM] unsigned long 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  counter         1    8[COMRAM] unsigned char 
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  4    0[COMRAM] unsigned long 
  4814 ;; Registers used:
  4815 ;;		wreg, status,2, status,0
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4821 ;;      Params:         8       0       0       0       0       0       0       0       0
  4822 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4824 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4825 ;;Total ram usage:        9 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_lcd_printf
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text10
  4835  00240C                     __ptext10:
  4836                           	opt stack 0
  4837  00240C                     ___llmod:
  4838                           	opt stack 29
  4839                           
  4840                           ;incstack = 0
  4841  00240C  5005               	movf	___llmod@divisor,w,c
  4842  00240E  1006               	iorwf	___llmod@divisor+1,w,c
  4843  002410  1007               	iorwf	___llmod@divisor+2,w,c
  4844  002412  1008               	iorwf	___llmod@divisor+3,w,c
  4845  002414  B4D8               	btfsc	status,2,c
  4846  002416  D024               	goto	l892
  4847  002418  0E01               	movlw	1
  4848  00241A  6E09               	movwf	___llmod@counter,c
  4849  00241C  D006               	goto	l2910
  4850  00241E                     l2908:
  4851  00241E  90D8               	bcf	status,0,c
  4852  002420  3605               	rlcf	___llmod@divisor,f,c
  4853  002422  3606               	rlcf	___llmod@divisor+1,f,c
  4854  002424  3607               	rlcf	___llmod@divisor+2,f,c
  4855  002426  3608               	rlcf	___llmod@divisor+3,f,c
  4856  002428  2A09               	incf	___llmod@counter,f,c
  4857  00242A                     l2910:
  4858  00242A  AE08               	btfss	___llmod@divisor+3,7,c
  4859  00242C  D7F8               	goto	l2908
  4860  00242E                     l2912:
  4861  00242E  5005               	movf	___llmod@divisor,w,c
  4862  002430  5C01               	subwf	___llmod@dividend,w,c
  4863  002432  5006               	movf	___llmod@divisor+1,w,c
  4864  002434  5802               	subwfb	___llmod@dividend+1,w,c
  4865  002436  5007               	movf	___llmod@divisor+2,w,c
  4866  002438  5803               	subwfb	___llmod@dividend+2,w,c
  4867  00243A  5008               	movf	___llmod@divisor+3,w,c
  4868  00243C  5804               	subwfb	___llmod@dividend+3,w,c
  4869  00243E  A0D8               	btfss	status,0,c
  4870  002440  D008               	goto	l2916
  4871  002442  5005               	movf	___llmod@divisor,w,c
  4872  002444  5E01               	subwf	___llmod@dividend,f,c
  4873  002446  5006               	movf	___llmod@divisor+1,w,c
  4874  002448  5A02               	subwfb	___llmod@dividend+1,f,c
  4875  00244A  5007               	movf	___llmod@divisor+2,w,c
  4876  00244C  5A03               	subwfb	___llmod@dividend+2,f,c
  4877  00244E  5008               	movf	___llmod@divisor+3,w,c
  4878  002450  5A04               	subwfb	___llmod@dividend+3,f,c
  4879  002452                     l2916:
  4880  002452  90D8               	bcf	status,0,c
  4881  002454  3208               	rrcf	___llmod@divisor+3,f,c
  4882  002456  3207               	rrcf	___llmod@divisor+2,f,c
  4883  002458  3206               	rrcf	___llmod@divisor+1,f,c
  4884  00245A  3205               	rrcf	___llmod@divisor,f,c
  4885  00245C  2E09               	decfsz	___llmod@counter,f,c
  4886  00245E  D7E7               	goto	l2912
  4887  002460                     l892:
  4888  002460  C001  F001         	movff	___llmod@dividend,?___llmod
  4889  002464  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4890  002468  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4891  00246C  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4892  002470  0012               	return		;funcret
  4893  002472                     __end_of___llmod:
  4894                           	opt stack 0
  4895                           tblptru	equ	0xFF8
  4896                           tblptrh	equ	0xFF7
  4897                           tblptrl	equ	0xFF6
  4898                           tablat	equ	0xFF5
  4899                           prodl	equ	0xFF3
  4900                           indf2	equ	0xFDF
  4901                           postinc2	equ	0xFDE
  4902                           postdec2	equ	0xFDD
  4903                           fsr2h	equ	0xFDA
  4904                           fsr2l	equ	0xFD9
  4905                           status	equ	0xFD8
  4906                           
  4907 ;; *************** function ___lldiv *****************
  4908 ;; Defined at:
  4909 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  dividend        4    0[COMRAM] unsigned long 
  4912 ;;  divisor         4    4[COMRAM] unsigned long 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;  quotient        4    8[COMRAM] unsigned long 
  4915 ;;  counter         1   12[COMRAM] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  4    0[COMRAM] unsigned long 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4925 ;;      Params:         8       0       0       0       0       0       0       0       0
  4926 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4927 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4928 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4929 ;;Total ram usage:       13 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; This function calls:
  4932 ;;		Nothing
  4933 ;; This function is called by:
  4934 ;;		_lcd_printf
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text11
  4939  00238A                     __ptext11:
  4940                           	opt stack 0
  4941  00238A                     ___lldiv:
  4942                           	opt stack 29
  4943                           
  4944                           ;incstack = 0
  4945  00238A  0E00               	movlw	0
  4946  00238C  6E09               	movwf	___lldiv@quotient,c
  4947  00238E  0E00               	movlw	0
  4948  002390  6E0A               	movwf	___lldiv@quotient+1,c
  4949  002392  0E00               	movlw	0
  4950  002394  6E0B               	movwf	___lldiv@quotient+2,c
  4951  002396  0E00               	movlw	0
  4952  002398  6E0C               	movwf	___lldiv@quotient+3,c
  4953  00239A  5005               	movf	___lldiv@divisor,w,c
  4954  00239C  1006               	iorwf	___lldiv@divisor+1,w,c
  4955  00239E  1007               	iorwf	___lldiv@divisor+2,w,c
  4956  0023A0  1008               	iorwf	___lldiv@divisor+3,w,c
  4957  0023A2  B4D8               	btfsc	status,2,c
  4958  0023A4  D02A               	goto	l882
  4959  0023A6  0E01               	movlw	1
  4960  0023A8  6E0D               	movwf	___lldiv@counter,c
  4961  0023AA  D006               	goto	l2890
  4962  0023AC                     l2888:
  4963  0023AC  90D8               	bcf	status,0,c
  4964  0023AE  3605               	rlcf	___lldiv@divisor,f,c
  4965  0023B0  3606               	rlcf	___lldiv@divisor+1,f,c
  4966  0023B2  3607               	rlcf	___lldiv@divisor+2,f,c
  4967  0023B4  3608               	rlcf	___lldiv@divisor+3,f,c
  4968  0023B6  2A0D               	incf	___lldiv@counter,f,c
  4969  0023B8                     l2890:
  4970  0023B8  AE08               	btfss	___lldiv@divisor+3,7,c
  4971  0023BA  D7F8               	goto	l2888
  4972  0023BC                     l2892:
  4973  0023BC  90D8               	bcf	status,0,c
  4974  0023BE  3609               	rlcf	___lldiv@quotient,f,c
  4975  0023C0  360A               	rlcf	___lldiv@quotient+1,f,c
  4976  0023C2  360B               	rlcf	___lldiv@quotient+2,f,c
  4977  0023C4  360C               	rlcf	___lldiv@quotient+3,f,c
  4978  0023C6  5005               	movf	___lldiv@divisor,w,c
  4979  0023C8  5C01               	subwf	___lldiv@dividend,w,c
  4980  0023CA  5006               	movf	___lldiv@divisor+1,w,c
  4981  0023CC  5802               	subwfb	___lldiv@dividend+1,w,c
  4982  0023CE  5007               	movf	___lldiv@divisor+2,w,c
  4983  0023D0  5803               	subwfb	___lldiv@dividend+2,w,c
  4984  0023D2  5008               	movf	___lldiv@divisor+3,w,c
  4985  0023D4  5804               	subwfb	___lldiv@dividend+3,w,c
  4986  0023D6  A0D8               	btfss	status,0,c
  4987  0023D8  D009               	goto	l2900
  4988  0023DA  5005               	movf	___lldiv@divisor,w,c
  4989  0023DC  5E01               	subwf	___lldiv@dividend,f,c
  4990  0023DE  5006               	movf	___lldiv@divisor+1,w,c
  4991  0023E0  5A02               	subwfb	___lldiv@dividend+1,f,c
  4992  0023E2  5007               	movf	___lldiv@divisor+2,w,c
  4993  0023E4  5A03               	subwfb	___lldiv@dividend+2,f,c
  4994  0023E6  5008               	movf	___lldiv@divisor+3,w,c
  4995  0023E8  5A04               	subwfb	___lldiv@dividend+3,f,c
  4996  0023EA  8009               	bsf	___lldiv@quotient,0,c
  4997  0023EC                     l2900:
  4998  0023EC  90D8               	bcf	status,0,c
  4999  0023EE  3208               	rrcf	___lldiv@divisor+3,f,c
  5000  0023F0  3207               	rrcf	___lldiv@divisor+2,f,c
  5001  0023F2  3206               	rrcf	___lldiv@divisor+1,f,c
  5002  0023F4  3205               	rrcf	___lldiv@divisor,f,c
  5003  0023F6  2E0D               	decfsz	___lldiv@counter,f,c
  5004  0023F8  D7E1               	goto	l2892
  5005  0023FA                     l882:
  5006  0023FA  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5007  0023FE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5008  002402  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5009  002406  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5010  00240A  0012               	return		;funcret
  5011  00240C                     __end_of___lldiv:
  5012                           	opt stack 0
  5013                           tblptru	equ	0xFF8
  5014                           tblptrh	equ	0xFF7
  5015                           tblptrl	equ	0xFF6
  5016                           tablat	equ	0xFF5
  5017                           prodl	equ	0xFF3
  5018                           indf2	equ	0xFDF
  5019                           postinc2	equ	0xFDE
  5020                           postdec2	equ	0xFDD
  5021                           fsr2h	equ	0xFDA
  5022                           fsr2l	equ	0xFD9
  5023                           status	equ	0xFD8
  5024                           
  5025 ;; *************** function ___fttol *****************
  5026 ;; Defined at:
  5027 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  f1              3    0[COMRAM] float 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  lval            4   10[COMRAM] unsigned long 
  5032 ;;  exp1            1   14[COMRAM] unsigned char 
  5033 ;;  sign1           1    9[COMRAM] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  4    0[COMRAM] long 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5043 ;;      Params:         4       0       0       0       0       0       0       0       0
  5044 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5045 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5046 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5047 ;;Total ram usage:       15 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_lcd_printf
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text12
  5057  001E40                     __ptext12:
  5058                           	opt stack 0
  5059  001E40                     ___fttol:
  5060                           	opt stack 29
  5061                           
  5062                           ;incstack = 0
  5063  001E40  C003  F005         	movff	___fttol@f1+2,??___fttol
  5064  001E44  6A06               	clrf	(??___fttol+1)& (0+255),c
  5065  001E46  6A07               	clrf	(??___fttol+2)& (0+255),c
  5066  001E48  3402               	rlcf	___fttol@f1+1,w,c
  5067  001E4A  3605               	rlcf	??___fttol& (0+255),f,c
  5068  001E4C  E301               	bnc	u2701
  5069  001E4E  8006               	bsf	(??___fttol+1)& (0+255),0,c
  5070  001E50                     u2701:
  5071  001E50  5005               	movf	??___fttol,w,c
  5072  001E52  6E0F               	movwf	___fttol@exp1,c
  5073  001E54  500F               	movf	___fttol@exp1,w,c
  5074  001E56  A4D8               	btfss	status,2,c
  5075  001E58  D009               	goto	l2842
  5076  001E5A  0E00               	movlw	0
  5077  001E5C  6E01               	movwf	?___fttol,c
  5078  001E5E  0E00               	movlw	0
  5079  001E60  6E02               	movwf	?___fttol+1,c
  5080  001E62  0E00               	movlw	0
  5081  001E64  6E03               	movwf	?___fttol+2,c
  5082  001E66  0E00               	movlw	0
  5083  001E68  6E04               	movwf	?___fttol+3,c
  5084  001E6A  0012               	return	
  5085  001E6C                     l2842:
  5086  001E6C  0E17               	movlw	23
  5087  001E6E  6E05               	movwf	??___fttol& (0+255),c
  5088  001E70  C001  F006         	movff	___fttol@f1,??___fttol+1
  5089  001E74  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  5090  001E78  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  5091  001E7C  2805               	incf	??___fttol,w,c
  5092  001E7E  6E09               	movwf	(??___fttol+4)& (0+255),c
  5093  001E80  D004               	goto	u2720
  5094  001E82                     u2725:
  5095  001E82  90D8               	bcf	status,0,c
  5096  001E84  3208               	rrcf	??___fttol+3,f,c
  5097  001E86  3207               	rrcf	??___fttol+2,f,c
  5098  001E88  3206               	rrcf	??___fttol+1,f,c
  5099  001E8A                     u2720:
  5100  001E8A  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  5101  001E8C  D7FA               	goto	u2725
  5102  001E8E  5006               	movf	??___fttol+1,w,c
  5103  001E90  6E0A               	movwf	___fttol@sign1,c
  5104  001E92  8E02               	bsf	___fttol@f1+1,7,c
  5105  001E94  0EFF               	movlw	255
  5106  001E96  1601               	andwf	___fttol@f1,f,c
  5107  001E98  0EFF               	movlw	255
  5108  001E9A  1602               	andwf	___fttol@f1+1,f,c
  5109  001E9C  0E00               	movlw	0
  5110  001E9E  1603               	andwf	___fttol@f1+2,f,c
  5111  001EA0  5001               	movf	___fttol@f1,w,c
  5112  001EA2  6E0B               	movwf	___fttol@lval,c
  5113  001EA4  5002               	movf	___fttol@f1+1,w,c
  5114  001EA6  6E0C               	movwf	___fttol@lval+1,c
  5115  001EA8  5003               	movf	___fttol@f1+2,w,c
  5116  001EAA  6E0D               	movwf	___fttol@lval+2,c
  5117  001EAC  6A0E               	clrf	___fttol@lval+3,c
  5118  001EAE  0E8E               	movlw	142
  5119  001EB0  5E0F               	subwf	___fttol@exp1,f,c
  5120  001EB2  AE0F               	btfss	___fttol@exp1,7,c
  5121  001EB4  D016               	goto	l2864
  5122  001EB6  500F               	movf	___fttol@exp1,w,c
  5123  001EB8  0A80               	xorlw	128
  5124  001EBA  0F8F               	addlw	143
  5125  001EBC  B0D8               	btfsc	status,0,c
  5126  001EBE  D009               	goto	l2860
  5127  001EC0  0E00               	movlw	0
  5128  001EC2  6E01               	movwf	?___fttol,c
  5129  001EC4  0E00               	movlw	0
  5130  001EC6  6E02               	movwf	?___fttol+1,c
  5131  001EC8  0E00               	movlw	0
  5132  001ECA  6E03               	movwf	?___fttol+2,c
  5133  001ECC  0E00               	movlw	0
  5134  001ECE  6E04               	movwf	?___fttol+3,c
  5135  001ED0  0012               	return	
  5136  001ED2                     l2860:
  5137  001ED2  90D8               	bcf	status,0,c
  5138  001ED4  320E               	rrcf	___fttol@lval+3,f,c
  5139  001ED6  320D               	rrcf	___fttol@lval+2,f,c
  5140  001ED8  320C               	rrcf	___fttol@lval+1,f,c
  5141  001EDA  320B               	rrcf	___fttol@lval,f,c
  5142  001EDC  3E0F               	incfsz	___fttol@exp1,f,c
  5143  001EDE  D7F9               	goto	l2860
  5144  001EE0  D015               	goto	l2874
  5145  001EE2                     l2864:
  5146  001EE2  0E17               	movlw	23
  5147  001EE4  640F               	cpfsgt	___fttol@exp1,c
  5148  001EE6  D00F               	goto	l2872
  5149  001EE8  0E00               	movlw	0
  5150  001EEA  6E01               	movwf	?___fttol,c
  5151  001EEC  0E00               	movlw	0
  5152  001EEE  6E02               	movwf	?___fttol+1,c
  5153  001EF0  0E00               	movlw	0
  5154  001EF2  6E03               	movwf	?___fttol+2,c
  5155  001EF4  0E00               	movlw	0
  5156  001EF6  6E04               	movwf	?___fttol+3,c
  5157  001EF8  0012               	return	
  5158  001EFA                     l2870:
  5159  001EFA  90D8               	bcf	status,0,c
  5160  001EFC  360B               	rlcf	___fttol@lval,f,c
  5161  001EFE  360C               	rlcf	___fttol@lval+1,f,c
  5162  001F00  360D               	rlcf	___fttol@lval+2,f,c
  5163  001F02  360E               	rlcf	___fttol@lval+3,f,c
  5164  001F04  060F               	decf	___fttol@exp1,f,c
  5165  001F06                     l2872:
  5166  001F06  500F               	movf	___fttol@exp1,w,c
  5167  001F08  A4D8               	btfss	status,2,c
  5168  001F0A  D7F7               	goto	l2870
  5169  001F0C                     l2874:
  5170  001F0C  500A               	movf	___fttol@sign1,w,c
  5171  001F0E  B4D8               	btfsc	status,2,c
  5172  001F10  D008               	goto	l2878
  5173  001F12  1E0E               	comf	___fttol@lval+3,f,c
  5174  001F14  1E0D               	comf	___fttol@lval+2,f,c
  5175  001F16  1E0C               	comf	___fttol@lval+1,f,c
  5176  001F18  6C0B               	negf	___fttol@lval,c
  5177  001F1A  0E00               	movlw	0
  5178  001F1C  220C               	addwfc	___fttol@lval+1,f,c
  5179  001F1E  220D               	addwfc	___fttol@lval+2,f,c
  5180  001F20  220E               	addwfc	___fttol@lval+3,f,c
  5181  001F22                     l2878:
  5182  001F22  C00B  F001         	movff	___fttol@lval,?___fttol
  5183  001F26  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  5184  001F2A  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  5185  001F2E  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  5186  001F32  0012               	return	
  5187  001F34                     __end_of___fttol:
  5188                           	opt stack 0
  5189                           tblptru	equ	0xFF8
  5190                           tblptrh	equ	0xFF7
  5191                           tblptrl	equ	0xFF6
  5192                           tablat	equ	0xFF5
  5193                           prodl	equ	0xFF3
  5194                           indf2	equ	0xFDF
  5195                           postinc2	equ	0xFDE
  5196                           postdec2	equ	0xFDD
  5197                           fsr2h	equ	0xFDA
  5198                           fsr2l	equ	0xFD9
  5199                           status	equ	0xFD8
  5200                           
  5201 ;; *************** function ___ftneg *****************
  5202 ;; Defined at:
  5203 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  f1              3   11[COMRAM] float 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;		None
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  3   11[COMRAM] float 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5217 ;;      Params:         3       0       0       0       0       0       0       0       0
  5218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5220 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5221 ;;Total ram usage:        3 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_lcd_printf
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text13
  5231  002624                     __ptext13:
  5232                           	opt stack 0
  5233  002624                     ___ftneg:
  5234                           	opt stack 29
  5235                           
  5236                           ;incstack = 0
  5237  002624  500C               	movf	___ftneg@f1,w,c
  5238  002626  100D               	iorwf	___ftneg@f1+1,w,c
  5239  002628  100E               	iorwf	___ftneg@f1+2,w,c
  5240  00262A  B4D8               	btfsc	status,2,c
  5241  00262C  D006               	goto	l837
  5242  00262E  0E00               	movlw	0
  5243  002630  1A0C               	xorwf	___ftneg@f1,f,c
  5244  002632  0E00               	movlw	0
  5245  002634  1A0D               	xorwf	___ftneg@f1+1,f,c
  5246  002636  0E80               	movlw	128
  5247  002638  1A0E               	xorwf	___ftneg@f1+2,f,c
  5248  00263A                     l837:
  5249  00263A  C00C  F00C         	movff	___ftneg@f1,?___ftneg
  5250  00263E  C00D  F00D         	movff	___ftneg@f1+1,?___ftneg+1
  5251  002642  C00E  F00E         	movff	___ftneg@f1+2,?___ftneg+2
  5252  002646  0012               	return		;funcret
  5253  002648                     __end_of___ftneg:
  5254                           	opt stack 0
  5255                           tblptru	equ	0xFF8
  5256                           tblptrh	equ	0xFF7
  5257                           tblptrl	equ	0xFF6
  5258                           tablat	equ	0xFF5
  5259                           prodl	equ	0xFF3
  5260                           indf2	equ	0xFDF
  5261                           postinc2	equ	0xFDE
  5262                           postdec2	equ	0xFDD
  5263                           fsr2h	equ	0xFDA
  5264                           fsr2l	equ	0xFD9
  5265                           status	equ	0xFD8
  5266                           
  5267 ;; *************** function ___ftmul *****************
  5268 ;; Defined at:
  5269 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  f1              3    8[COMRAM] float 
  5272 ;;  f2              3   11[COMRAM] float 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  5275 ;;  sign            1   22[COMRAM] unsigned char 
  5276 ;;  cntr            1   21[COMRAM] unsigned char 
  5277 ;;  exp             1   17[COMRAM] unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  3    8[COMRAM] float 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5287 ;;      Params:         6       0       0       0       0       0       0       0       0
  5288 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5289 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5290 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5291 ;;Total ram usage:       15 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    1
  5294 ;; This function calls:
  5295 ;;		___ftpack
  5296 ;; This function is called by:
  5297 ;;		_lcd_printf
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text14
  5302  001F34                     __ptext14:
  5303                           	opt stack 0
  5304  001F34                     ___ftmul:
  5305                           	opt stack 28
  5306                           
  5307                           ;incstack = 0
  5308  001F34  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  5309  001F38  6A10               	clrf	(??___ftmul+1)& (0+255),c
  5310  001F3A  6A11               	clrf	(??___ftmul+2)& (0+255),c
  5311  001F3C  340A               	rlcf	___ftmul@f1+1,w,c
  5312  001F3E  360F               	rlcf	??___ftmul& (0+255),f,c
  5313  001F40  E301               	bnc	u2601
  5314  001F42  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  5315  001F44                     u2601:
  5316  001F44  500F               	movf	??___ftmul,w,c
  5317  001F46  6E12               	movwf	___ftmul@exp,c
  5318  001F48  5012               	movf	___ftmul@exp,w,c
  5319  001F4A  A4D8               	btfss	status,2,c
  5320  001F4C  D007               	goto	l2772
  5321  001F4E  0E00               	movlw	0
  5322  001F50  6E09               	movwf	?___ftmul,c
  5323  001F52  0E00               	movlw	0
  5324  001F54  6E0A               	movwf	?___ftmul+1,c
  5325  001F56  0E00               	movlw	0
  5326  001F58  6E0B               	movwf	?___ftmul+2,c
  5327  001F5A  0012               	return	
  5328  001F5C                     l2772:
  5329  001F5C  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  5330  001F60  6A10               	clrf	(??___ftmul+1)& (0+255),c
  5331  001F62  6A11               	clrf	(??___ftmul+2)& (0+255),c
  5332  001F64  340D               	rlcf	___ftmul@f2+1,w,c
  5333  001F66  360F               	rlcf	??___ftmul& (0+255),f,c
  5334  001F68  E301               	bnc	u2621
  5335  001F6A  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  5336  001F6C                     u2621:
  5337  001F6C  500F               	movf	??___ftmul,w,c
  5338  001F6E  6E17               	movwf	___ftmul@sign,c
  5339  001F70  5017               	movf	___ftmul@sign,w,c
  5340  001F72  A4D8               	btfss	status,2,c
  5341  001F74  D007               	goto	l2778
  5342  001F76  0E00               	movlw	0
  5343  001F78  6E09               	movwf	?___ftmul,c
  5344  001F7A  0E00               	movlw	0
  5345  001F7C  6E0A               	movwf	?___ftmul+1,c
  5346  001F7E  0E00               	movlw	0
  5347  001F80  6E0B               	movwf	?___ftmul+2,c
  5348  001F82  0012               	return	
  5349  001F84                     l2778:
  5350  001F84  5017               	movf	___ftmul@sign,w,c
  5351  001F86  0F7B               	addlw	123
  5352  001F88  2612               	addwf	___ftmul@exp,f,c
  5353  001F8A  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  5354  001F8E  500E               	movf	___ftmul@f2+2,w,c
  5355  001F90  1A17               	xorwf	___ftmul@sign,f,c
  5356  001F92  0E80               	movlw	128
  5357  001F94  1617               	andwf	___ftmul@sign,f,c
  5358  001F96  8E0A               	bsf	___ftmul@f1+1,7,c
  5359  001F98  8E0D               	bsf	___ftmul@f2+1,7,c
  5360  001F9A  0EFF               	movlw	255
  5361  001F9C  160C               	andwf	___ftmul@f2,f,c
  5362  001F9E  0EFF               	movlw	255
  5363  001FA0  160D               	andwf	___ftmul@f2+1,f,c
  5364  001FA2  0E00               	movlw	0
  5365  001FA4  160E               	andwf	___ftmul@f2+2,f,c
  5366  001FA6  0E00               	movlw	0
  5367  001FA8  6E13               	movwf	___ftmul@f3_as_product,c
  5368  001FAA  0E00               	movlw	0
  5369  001FAC  6E14               	movwf	___ftmul@f3_as_product+1,c
  5370  001FAE  0E00               	movlw	0
  5371  001FB0  6E15               	movwf	___ftmul@f3_as_product+2,c
  5372  001FB2  0E07               	movlw	7
  5373  001FB4  6E16               	movwf	___ftmul@cntr,c
  5374  001FB6                     l2792:
  5375  001FB6  A009               	btfss	___ftmul@f1,0,c
  5376  001FB8  D006               	goto	l2796
  5377  001FBA  500C               	movf	___ftmul@f2,w,c
  5378  001FBC  2613               	addwf	___ftmul@f3_as_product,f,c
  5379  001FBE  500D               	movf	___ftmul@f2+1,w,c
  5380  001FC0  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  5381  001FC2  500E               	movf	___ftmul@f2+2,w,c
  5382  001FC4  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  5383  001FC6                     l2796:
  5384  001FC6  90D8               	bcf	status,0,c
  5385  001FC8  320B               	rrcf	___ftmul@f1+2,f,c
  5386  001FCA  320A               	rrcf	___ftmul@f1+1,f,c
  5387  001FCC  3209               	rrcf	___ftmul@f1,f,c
  5388  001FCE  90D8               	bcf	status,0,c
  5389  001FD0  360C               	rlcf	___ftmul@f2,f,c
  5390  001FD2  360D               	rlcf	___ftmul@f2+1,f,c
  5391  001FD4  360E               	rlcf	___ftmul@f2+2,f,c
  5392  001FD6  2E16               	decfsz	___ftmul@cntr,f,c
  5393  001FD8  D7EE               	goto	l2792
  5394  001FDA  0E09               	movlw	9
  5395  001FDC  6E16               	movwf	___ftmul@cntr,c
  5396  001FDE                     l2802:
  5397  001FDE  A009               	btfss	___ftmul@f1,0,c
  5398  001FE0  D006               	goto	l2806
  5399  001FE2  500C               	movf	___ftmul@f2,w,c
  5400  001FE4  2613               	addwf	___ftmul@f3_as_product,f,c
  5401  001FE6  500D               	movf	___ftmul@f2+1,w,c
  5402  001FE8  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  5403  001FEA  500E               	movf	___ftmul@f2+2,w,c
  5404  001FEC  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  5405  001FEE                     l2806:
  5406  001FEE  90D8               	bcf	status,0,c
  5407  001FF0  320B               	rrcf	___ftmul@f1+2,f,c
  5408  001FF2  320A               	rrcf	___ftmul@f1+1,f,c
  5409  001FF4  3209               	rrcf	___ftmul@f1,f,c
  5410  001FF6  90D8               	bcf	status,0,c
  5411  001FF8  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  5412  001FFA  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  5413  001FFC  3213               	rrcf	___ftmul@f3_as_product,f,c
  5414  001FFE  2E16               	decfsz	___ftmul@cntr,f,c
  5415  002000  D7EE               	goto	l2802
  5416  002002  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  5417  002006  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5418  00200A  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5419  00200E  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  5420  002012  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  5421  002016  EC87  F010         	call	___ftpack	;wreg free
  5422  00201A  C001  F009         	movff	?___ftpack,?___ftmul
  5423  00201E  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  5424  002022  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  5425  002026  0012               	return	
  5426  002028                     __end_of___ftmul:
  5427                           	opt stack 0
  5428                           tblptru	equ	0xFF8
  5429                           tblptrh	equ	0xFF7
  5430                           tblptrl	equ	0xFF6
  5431                           tablat	equ	0xFF5
  5432                           prodl	equ	0xFF3
  5433                           indf2	equ	0xFDF
  5434                           postinc2	equ	0xFDE
  5435                           postdec2	equ	0xFDD
  5436                           fsr2h	equ	0xFDA
  5437                           fsr2l	equ	0xFD9
  5438                           status	equ	0xFD8
  5439                           
  5440 ;; *************** function ___ftge *****************
  5441 ;; Defined at:
  5442 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  ff1             3    0[COMRAM] float 
  5445 ;;  ff2             3    3[COMRAM] float 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;		None
  5448 ;; Return value:  Size  Location     Type
  5449 ;;		None               void
  5450 ;; Registers used:
  5451 ;;		wreg, status,2, status,0
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5457 ;;      Params:         6       0       0       0       0       0       0       0       0
  5458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5459 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5460 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5461 ;;Total ram usage:        9 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_lcd_printf
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text15
  5471  0022FA                     __ptext15:
  5472                           	opt stack 0
  5473  0022FA                     ___ftge:
  5474                           	opt stack 29
  5475                           
  5476                           ;incstack = 0
  5477  0022FA  AE03               	btfss	___ftge@ff1+2,7,c
  5478  0022FC  D016               	goto	l2818
  5479  0022FE  C001  F007         	movff	___ftge@ff1,??___ftge
  5480  002302  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5481  002306  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5482  00230A  1E07               	comf	??___ftge,f,c
  5483  00230C  1E08               	comf	??___ftge+1,f,c
  5484  00230E  1E09               	comf	??___ftge+2,f,c
  5485  002310  2A07               	incf	??___ftge,f,c
  5486  002312  0E00               	movlw	0
  5487  002314  2208               	addwfc	??___ftge+1,f,c
  5488  002316  2209               	addwfc	??___ftge+2,f,c
  5489  002318  0E00               	movlw	0
  5490  00231A  2407               	addwf	??___ftge,w,c
  5491  00231C  6E01               	movwf	___ftge@ff1,c
  5492  00231E  0E00               	movlw	0
  5493  002320  2008               	addwfc	??___ftge+1,w,c
  5494  002322  6E02               	movwf	___ftge@ff1+1,c
  5495  002324  0E80               	movlw	128
  5496  002326  2009               	addwfc	??___ftge+2,w,c
  5497  002328  6E03               	movwf	___ftge@ff1+2,c
  5498  00232A                     l2818:
  5499  00232A  AE06               	btfss	___ftge@ff2+2,7,c
  5500  00232C  D016               	goto	l2822
  5501  00232E  C004  F007         	movff	___ftge@ff2,??___ftge
  5502  002332  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5503  002336  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5504  00233A  1E07               	comf	??___ftge,f,c
  5505  00233C  1E08               	comf	??___ftge+1,f,c
  5506  00233E  1E09               	comf	??___ftge+2,f,c
  5507  002340  2A07               	incf	??___ftge,f,c
  5508  002342  0E00               	movlw	0
  5509  002344  2208               	addwfc	??___ftge+1,f,c
  5510  002346  2209               	addwfc	??___ftge+2,f,c
  5511  002348  0E00               	movlw	0
  5512  00234A  2407               	addwf	??___ftge,w,c
  5513  00234C  6E04               	movwf	___ftge@ff2,c
  5514  00234E  0E00               	movlw	0
  5515  002350  2008               	addwfc	??___ftge+1,w,c
  5516  002352  6E05               	movwf	___ftge@ff2+1,c
  5517  002354  0E80               	movlw	128
  5518  002356  2009               	addwfc	??___ftge+2,w,c
  5519  002358  6E06               	movwf	___ftge@ff2+2,c
  5520  00235A                     l2822:
  5521  00235A  0E00               	movlw	0
  5522  00235C  1A01               	xorwf	___ftge@ff1,f,c
  5523  00235E  0E00               	movlw	0
  5524  002360  1A02               	xorwf	___ftge@ff1+1,f,c
  5525  002362  0E80               	movlw	128
  5526  002364  1A03               	xorwf	___ftge@ff1+2,f,c
  5527  002366  0E00               	movlw	0
  5528  002368  1A04               	xorwf	___ftge@ff2,f,c
  5529  00236A  0E00               	movlw	0
  5530  00236C  1A05               	xorwf	___ftge@ff2+1,f,c
  5531  00236E  0E80               	movlw	128
  5532  002370  1A06               	xorwf	___ftge@ff2+2,f,c
  5533  002372  5004               	movf	___ftge@ff2,w,c
  5534  002374  5C01               	subwf	___ftge@ff1,w,c
  5535  002376  5005               	movf	___ftge@ff2+1,w,c
  5536  002378  5802               	subwfb	___ftge@ff1+1,w,c
  5537  00237A  5006               	movf	___ftge@ff2+2,w,c
  5538  00237C  5803               	subwfb	___ftge@ff1+2,w,c
  5539  00237E  B0D8               	btfsc	status,0,c
  5540  002380  D002               	goto	l2828
  5541  002382  90D8               	bcf	status,0,c
  5542  002384  0012               	return	
  5543  002386                     l2828:
  5544  002386  80D8               	bsf	status,0,c
  5545  002388  0012               	return	
  5546  00238A                     __end_of___ftge:
  5547                           	opt stack 0
  5548                           tblptru	equ	0xFF8
  5549                           tblptrh	equ	0xFF7
  5550                           tblptrl	equ	0xFF6
  5551                           tablat	equ	0xFF5
  5552                           prodl	equ	0xFF3
  5553                           indf2	equ	0xFDF
  5554                           postinc2	equ	0xFDE
  5555                           postdec2	equ	0xFDD
  5556                           fsr2h	equ	0xFDA
  5557                           fsr2l	equ	0xFD9
  5558                           status	equ	0xFD8
  5559                           
  5560 ;; *************** function ___ftdiv *****************
  5561 ;; Defined at:
  5562 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  f1              3    8[COMRAM] float 
  5565 ;;  f2              3   11[COMRAM] float 
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;  f3              3   18[COMRAM] float 
  5568 ;;  sign            1   22[COMRAM] unsigned char 
  5569 ;;  exp             1   21[COMRAM] unsigned char 
  5570 ;;  cntr            1   17[COMRAM] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  3    8[COMRAM] float 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5580 ;;      Params:         6       0       0       0       0       0       0       0       0
  5581 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5582 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5583 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5584 ;;Total ram usage:       15 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    1
  5587 ;; This function calls:
  5588 ;;		___ftpack
  5589 ;; This function is called by:
  5590 ;;		_lcd_printf
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           	psect	text16
  5595  002028                     __ptext16:
  5596                           	opt stack 0
  5597  002028                     ___ftdiv:
  5598                           	opt stack 28
  5599                           
  5600                           ;incstack = 0
  5601  002028  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  5602  00202C  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  5603  00202E  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  5604  002030  340A               	rlcf	___ftdiv@f1+1,w,c
  5605  002032  360F               	rlcf	??___ftdiv& (0+255),f,c
  5606  002034  E301               	bnc	u2551
  5607  002036  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  5608  002038                     u2551:
  5609  002038  500F               	movf	??___ftdiv,w,c
  5610  00203A  6E16               	movwf	___ftdiv@exp,c
  5611  00203C  5016               	movf	___ftdiv@exp,w,c
  5612  00203E  A4D8               	btfss	status,2,c
  5613  002040  D007               	goto	l2726
  5614  002042  0E00               	movlw	0
  5615  002044  6E09               	movwf	?___ftdiv,c
  5616  002046  0E00               	movlw	0
  5617  002048  6E0A               	movwf	?___ftdiv+1,c
  5618  00204A  0E00               	movlw	0
  5619  00204C  6E0B               	movwf	?___ftdiv+2,c
  5620  00204E  0012               	return	
  5621  002050                     l2726:
  5622  002050  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  5623  002054  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  5624  002056  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  5625  002058  340D               	rlcf	___ftdiv@f2+1,w,c
  5626  00205A  360F               	rlcf	??___ftdiv& (0+255),f,c
  5627  00205C  E301               	bnc	u2571
  5628  00205E  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  5629  002060                     u2571:
  5630  002060  500F               	movf	??___ftdiv,w,c
  5631  002062  6E17               	movwf	___ftdiv@sign,c
  5632  002064  5017               	movf	___ftdiv@sign,w,c
  5633  002066  A4D8               	btfss	status,2,c
  5634  002068  D007               	goto	l2732
  5635  00206A  0E00               	movlw	0
  5636  00206C  6E09               	movwf	?___ftdiv,c
  5637  00206E  0E00               	movlw	0
  5638  002070  6E0A               	movwf	?___ftdiv+1,c
  5639  002072  0E00               	movlw	0
  5640  002074  6E0B               	movwf	?___ftdiv+2,c
  5641  002076  0012               	return	
  5642  002078                     l2732:
  5643  002078  0E00               	movlw	0
  5644  00207A  6E13               	movwf	___ftdiv@f3,c
  5645  00207C  0E00               	movlw	0
  5646  00207E  6E14               	movwf	___ftdiv@f3+1,c
  5647  002080  0E00               	movlw	0
  5648  002082  6E15               	movwf	___ftdiv@f3+2,c
  5649  002084  5017               	movf	___ftdiv@sign,w,c
  5650  002086  0F89               	addlw	137
  5651  002088  5E16               	subwf	___ftdiv@exp,f,c
  5652  00208A  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  5653  00208E  500E               	movf	___ftdiv@f2+2,w,c
  5654  002090  1A17               	xorwf	___ftdiv@sign,f,c
  5655  002092  0E80               	movlw	128
  5656  002094  1617               	andwf	___ftdiv@sign,f,c
  5657  002096  8E0A               	bsf	___ftdiv@f1+1,7,c
  5658  002098  0EFF               	movlw	255
  5659  00209A  1609               	andwf	___ftdiv@f1,f,c
  5660  00209C  0EFF               	movlw	255
  5661  00209E  160A               	andwf	___ftdiv@f1+1,f,c
  5662  0020A0  0E00               	movlw	0
  5663  0020A2  160B               	andwf	___ftdiv@f1+2,f,c
  5664  0020A4  8E0D               	bsf	___ftdiv@f2+1,7,c
  5665  0020A6  0EFF               	movlw	255
  5666  0020A8  160C               	andwf	___ftdiv@f2,f,c
  5667  0020AA  0EFF               	movlw	255
  5668  0020AC  160D               	andwf	___ftdiv@f2+1,f,c
  5669  0020AE  0E00               	movlw	0
  5670  0020B0  160E               	andwf	___ftdiv@f2+2,f,c
  5671  0020B2  0E18               	movlw	24
  5672  0020B4  6E12               	movwf	___ftdiv@cntr,c
  5673  0020B6                     l2752:
  5674  0020B6  90D8               	bcf	status,0,c
  5675  0020B8  3613               	rlcf	___ftdiv@f3,f,c
  5676  0020BA  3614               	rlcf	___ftdiv@f3+1,f,c
  5677  0020BC  3615               	rlcf	___ftdiv@f3+2,f,c
  5678  0020BE  500C               	movf	___ftdiv@f2,w,c
  5679  0020C0  5C09               	subwf	___ftdiv@f1,w,c
  5680  0020C2  500D               	movf	___ftdiv@f2+1,w,c
  5681  0020C4  580A               	subwfb	___ftdiv@f1+1,w,c
  5682  0020C6  500E               	movf	___ftdiv@f2+2,w,c
  5683  0020C8  580B               	subwfb	___ftdiv@f1+2,w,c
  5684  0020CA  A0D8               	btfss	status,0,c
  5685  0020CC  D007               	goto	l815
  5686  0020CE  500C               	movf	___ftdiv@f2,w,c
  5687  0020D0  5E09               	subwf	___ftdiv@f1,f,c
  5688  0020D2  500D               	movf	___ftdiv@f2+1,w,c
  5689  0020D4  5A0A               	subwfb	___ftdiv@f1+1,f,c
  5690  0020D6  500E               	movf	___ftdiv@f2+2,w,c
  5691  0020D8  5A0B               	subwfb	___ftdiv@f1+2,f,c
  5692  0020DA  8013               	bsf	___ftdiv@f3,0,c
  5693  0020DC                     l815:
  5694  0020DC  90D8               	bcf	status,0,c
  5695  0020DE  3609               	rlcf	___ftdiv@f1,f,c
  5696  0020E0  360A               	rlcf	___ftdiv@f1+1,f,c
  5697  0020E2  360B               	rlcf	___ftdiv@f1+2,f,c
  5698  0020E4  2E12               	decfsz	___ftdiv@cntr,f,c
  5699  0020E6  D7E7               	goto	l2752
  5700  0020E8  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  5701  0020EC  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5702  0020F0  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5703  0020F4  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  5704  0020F8  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  5705  0020FC  EC87  F010         	call	___ftpack	;wreg free
  5706  002100  C001  F009         	movff	?___ftpack,?___ftdiv
  5707  002104  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  5708  002108  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  5709  00210C  0012               	return	
  5710  00210E                     __end_of___ftdiv:
  5711                           	opt stack 0
  5712                           tblptru	equ	0xFF8
  5713                           tblptrh	equ	0xFF7
  5714                           tblptrl	equ	0xFF6
  5715                           tablat	equ	0xFF5
  5716                           prodl	equ	0xFF3
  5717                           indf2	equ	0xFDF
  5718                           postinc2	equ	0xFDE
  5719                           postdec2	equ	0xFDD
  5720                           fsr2h	equ	0xFDA
  5721                           fsr2l	equ	0xFD9
  5722                           status	equ	0xFD8
  5723                           
  5724 ;; *************** function ___ftadd *****************
  5725 ;; Defined at:
  5726 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  f1              3   14[COMRAM] float 
  5729 ;;  f2              3   17[COMRAM] float 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;  exp1            1   25[COMRAM] unsigned char 
  5732 ;;  exp2            1   24[COMRAM] unsigned char 
  5733 ;;  sign            1   23[COMRAM] unsigned char 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  3   14[COMRAM] float 
  5736 ;; Registers used:
  5737 ;;		wreg, status,2, status,0, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5743 ;;      Params:         6       0       0       0       0       0       0       0       0
  5744 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5745 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5746 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5747 ;;Total ram usage:       12 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:    1
  5750 ;; This function calls:
  5751 ;;		___ftpack
  5752 ;; This function is called by:
  5753 ;;		_lcd_printf
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text17
  5758  001C94                     __ptext17:
  5759                           	opt stack 0
  5760  001C94                     ___ftadd:
  5761                           	opt stack 28
  5762                           
  5763                           ;incstack = 0
  5764  001C94  C011  F015         	movff	___ftadd@f1+2,??___ftadd
  5765  001C98  6A16               	clrf	(??___ftadd+1)& (0+255),c
  5766  001C9A  6A17               	clrf	(??___ftadd+2)& (0+255),c
  5767  001C9C  3410               	rlcf	___ftadd@f1+1,w,c
  5768  001C9E  3615               	rlcf	??___ftadd& (0+255),f,c
  5769  001CA0  E301               	bnc	u2341
  5770  001CA2  8016               	bsf	(??___ftadd+1)& (0+255),0,c
  5771  001CA4                     u2341:
  5772  001CA4  5015               	movf	??___ftadd,w,c
  5773  001CA6  6E1A               	movwf	___ftadd@exp1,c
  5774  001CA8  C014  F015         	movff	___ftadd@f2+2,??___ftadd
  5775  001CAC  6A16               	clrf	(??___ftadd+1)& (0+255),c
  5776  001CAE  6A17               	clrf	(??___ftadd+2)& (0+255),c
  5777  001CB0  3413               	rlcf	___ftadd@f2+1,w,c
  5778  001CB2  3615               	rlcf	??___ftadd& (0+255),f,c
  5779  001CB4  E301               	bnc	u2351
  5780  001CB6  8016               	bsf	(??___ftadd+1)& (0+255),0,c
  5781  001CB8                     u2351:
  5782  001CB8  5015               	movf	??___ftadd,w,c
  5783  001CBA  6E19               	movwf	___ftadd@exp2,c
  5784  001CBC  501A               	movf	___ftadd@exp1,w,c
  5785  001CBE  B4D8               	btfsc	status,2,c
  5786  001CC0  D00B               	goto	l780
  5787  001CC2  5019               	movf	___ftadd@exp2,w,c
  5788  001CC4  5C1A               	subwf	___ftadd@exp1,w,c
  5789  001CC6  B0D8               	btfsc	status,0,c
  5790  001CC8  D00E               	goto	l2658
  5791  001CCA  501A               	movf	___ftadd@exp1,w,c
  5792  001CCC  0800               	sublw	0
  5793  001CCE  2419               	addwf	___ftadd@exp2,w,c
  5794  001CD0  6E15               	movwf	??___ftadd& (0+255),c
  5795  001CD2  0E18               	movlw	24
  5796  001CD4  6415               	cpfsgt	??___ftadd,c
  5797  001CD6  D007               	goto	l2658
  5798  001CD8                     l780:
  5799  001CD8  C012  F00F         	movff	___ftadd@f2,?___ftadd
  5800  001CDC  C013  F010         	movff	___ftadd@f2+1,?___ftadd+1
  5801  001CE0  C014  F011         	movff	___ftadd@f2+2,?___ftadd+2
  5802  001CE4  0012               	return	
  5803  001CE6                     l2658:
  5804  001CE6  5019               	movf	___ftadd@exp2,w,c
  5805  001CE8  B4D8               	btfsc	status,2,c
  5806  001CEA  D00B               	goto	l784
  5807  001CEC  501A               	movf	___ftadd@exp1,w,c
  5808  001CEE  5C19               	subwf	___ftadd@exp2,w,c
  5809  001CF0  B0D8               	btfsc	status,0,c
  5810  001CF2  D00E               	goto	l2664
  5811  001CF4  5019               	movf	___ftadd@exp2,w,c
  5812  001CF6  0800               	sublw	0
  5813  001CF8  241A               	addwf	___ftadd@exp1,w,c
  5814  001CFA  6E15               	movwf	??___ftadd& (0+255),c
  5815  001CFC  0E18               	movlw	24
  5816  001CFE  6415               	cpfsgt	??___ftadd,c
  5817  001D00  D007               	goto	l2664
  5818  001D02                     l784:
  5819  001D02  C00F  F00F         	movff	___ftadd@f1,?___ftadd
  5820  001D06  C010  F010         	movff	___ftadd@f1+1,?___ftadd+1
  5821  001D0A  C011  F011         	movff	___ftadd@f1+2,?___ftadd+2
  5822  001D0E  0012               	return	
  5823  001D10                     l2664:
  5824  001D10  0E06               	movlw	6
  5825  001D12  6E18               	movwf	___ftadd@sign,c
  5826  001D14  BE11               	btfsc	___ftadd@f1+2,7,c
  5827  001D16  8E18               	bsf	___ftadd@sign,7,c
  5828  001D18  BE14               	btfsc	___ftadd@f2+2,7,c
  5829  001D1A  8C18               	bsf	___ftadd@sign,6,c
  5830  001D1C  8E10               	bsf	___ftadd@f1+1,7,c
  5831  001D1E  0EFF               	movlw	255
  5832  001D20  160F               	andwf	___ftadd@f1,f,c
  5833  001D22  0EFF               	movlw	255
  5834  001D24  1610               	andwf	___ftadd@f1+1,f,c
  5835  001D26  0E00               	movlw	0
  5836  001D28  1611               	andwf	___ftadd@f1+2,f,c
  5837  001D2A  8E13               	bsf	___ftadd@f2+1,7,c
  5838  001D2C  0EFF               	movlw	255
  5839  001D2E  1612               	andwf	___ftadd@f2,f,c
  5840  001D30  0EFF               	movlw	255
  5841  001D32  1613               	andwf	___ftadd@f2+1,f,c
  5842  001D34  0E00               	movlw	0
  5843  001D36  1614               	andwf	___ftadd@f2+2,f,c
  5844  001D38  5019               	movf	___ftadd@exp2,w,c
  5845  001D3A  5C1A               	subwf	___ftadd@exp1,w,c
  5846  001D3C  B0D8               	btfsc	status,0,c
  5847  001D3E  D01B               	goto	l2690
  5848  001D40                     l2680:
  5849  001D40  90D8               	bcf	status,0,c
  5850  001D42  3612               	rlcf	___ftadd@f2,f,c
  5851  001D44  3613               	rlcf	___ftadd@f2+1,f,c
  5852  001D46  3614               	rlcf	___ftadd@f2+2,f,c
  5853  001D48  0619               	decf	___ftadd@exp2,f,c
  5854  001D4A  501A               	movf	___ftadd@exp1,w,c
  5855  001D4C  1819               	xorwf	___ftadd@exp2,w,c
  5856  001D4E  B4D8               	btfsc	status,2,c
  5857  001D50  D00D               	goto	l2688
  5858  001D52  0618               	decf	___ftadd@sign,f,c
  5859  001D54  C018  F015         	movff	___ftadd@sign,??___ftadd
  5860  001D58  0E07               	movlw	7
  5861  001D5A  1615               	andwf	??___ftadd,f,c
  5862  001D5C  B4D8               	btfsc	status,2,c
  5863  001D5E  D006               	goto	l2688
  5864  001D60  D7EF               	goto	l2680
  5865  001D62                     l2686:
  5866  001D62  90D8               	bcf	status,0,c
  5867  001D64  3211               	rrcf	___ftadd@f1+2,f,c
  5868  001D66  3210               	rrcf	___ftadd@f1+1,f,c
  5869  001D68  320F               	rrcf	___ftadd@f1,f,c
  5870  001D6A  2A1A               	incf	___ftadd@exp1,f,c
  5871  001D6C                     l2688:
  5872  001D6C  5019               	movf	___ftadd@exp2,w,c
  5873  001D6E  181A               	xorwf	___ftadd@exp1,w,c
  5874  001D70  B4D8               	btfsc	status,2,c
  5875  001D72  D01F               	goto	l795
  5876  001D74  D7F6               	goto	l2686
  5877  001D76                     l2690:
  5878  001D76  501A               	movf	___ftadd@exp1,w,c
  5879  001D78  5C19               	subwf	___ftadd@exp2,w,c
  5880  001D7A  B0D8               	btfsc	status,0,c
  5881  001D7C  D01A               	goto	l795
  5882  001D7E                     l2692:
  5883  001D7E  90D8               	bcf	status,0,c
  5884  001D80  360F               	rlcf	___ftadd@f1,f,c
  5885  001D82  3610               	rlcf	___ftadd@f1+1,f,c
  5886  001D84  3611               	rlcf	___ftadd@f1+2,f,c
  5887  001D86  061A               	decf	___ftadd@exp1,f,c
  5888  001D88  501A               	movf	___ftadd@exp1,w,c
  5889  001D8A  1819               	xorwf	___ftadd@exp2,w,c
  5890  001D8C  B4D8               	btfsc	status,2,c
  5891  001D8E  D00D               	goto	l2700
  5892  001D90  0618               	decf	___ftadd@sign,f,c
  5893  001D92  C018  F015         	movff	___ftadd@sign,??___ftadd
  5894  001D96  0E07               	movlw	7
  5895  001D98  1615               	andwf	??___ftadd,f,c
  5896  001D9A  B4D8               	btfsc	status,2,c
  5897  001D9C  D006               	goto	l2700
  5898  001D9E  D7EF               	goto	l2692
  5899  001DA0                     l2698:
  5900  001DA0  90D8               	bcf	status,0,c
  5901  001DA2  3214               	rrcf	___ftadd@f2+2,f,c
  5902  001DA4  3213               	rrcf	___ftadd@f2+1,f,c
  5903  001DA6  3212               	rrcf	___ftadd@f2,f,c
  5904  001DA8  2A19               	incf	___ftadd@exp2,f,c
  5905  001DAA                     l2700:
  5906  001DAA  5019               	movf	___ftadd@exp2,w,c
  5907  001DAC  181A               	xorwf	___ftadd@exp1,w,c
  5908  001DAE  A4D8               	btfss	status,2,c
  5909  001DB0  D7F7               	goto	l2698
  5910  001DB2                     l795:
  5911  001DB2  AE18               	btfss	___ftadd@sign,7,c
  5912  001DB4  D00C               	goto	l804
  5913  001DB6  0EFF               	movlw	255
  5914  001DB8  1A0F               	xorwf	___ftadd@f1,f,c
  5915  001DBA  0EFF               	movlw	255
  5916  001DBC  1A10               	xorwf	___ftadd@f1+1,f,c
  5917  001DBE  0EFF               	movlw	255
  5918  001DC0  1A11               	xorwf	___ftadd@f1+2,f,c
  5919  001DC2  0E01               	movlw	1
  5920  001DC4  260F               	addwf	___ftadd@f1,f,c
  5921  001DC6  0E00               	movlw	0
  5922  001DC8  2210               	addwfc	___ftadd@f1+1,f,c
  5923  001DCA  0E00               	movlw	0
  5924  001DCC  2211               	addwfc	___ftadd@f1+2,f,c
  5925  001DCE                     l804:
  5926  001DCE  AC18               	btfss	___ftadd@sign,6,c
  5927  001DD0  D00C               	goto	l2706
  5928  001DD2  0EFF               	movlw	255
  5929  001DD4  1A12               	xorwf	___ftadd@f2,f,c
  5930  001DD6  0EFF               	movlw	255
  5931  001DD8  1A13               	xorwf	___ftadd@f2+1,f,c
  5932  001DDA  0EFF               	movlw	255
  5933  001DDC  1A14               	xorwf	___ftadd@f2+2,f,c
  5934  001DDE  0E01               	movlw	1
  5935  001DE0  2612               	addwf	___ftadd@f2,f,c
  5936  001DE2  0E00               	movlw	0
  5937  001DE4  2213               	addwfc	___ftadd@f2+1,f,c
  5938  001DE6  0E00               	movlw	0
  5939  001DE8  2214               	addwfc	___ftadd@f2+2,f,c
  5940  001DEA                     l2706:
  5941  001DEA  0E00               	movlw	0
  5942  001DEC  6E18               	movwf	___ftadd@sign,c
  5943  001DEE  500F               	movf	___ftadd@f1,w,c
  5944  001DF0  2612               	addwf	___ftadd@f2,f,c
  5945  001DF2  5010               	movf	___ftadd@f1+1,w,c
  5946  001DF4  2213               	addwfc	___ftadd@f2+1,f,c
  5947  001DF6  5011               	movf	___ftadd@f1+2,w,c
  5948  001DF8  2214               	addwfc	___ftadd@f2+2,f,c
  5949  001DFA  AE14               	btfss	___ftadd@f2+2,7,c
  5950  001DFC  D00E               	goto	l2716
  5951  001DFE  0EFF               	movlw	255
  5952  001E00  1A12               	xorwf	___ftadd@f2,f,c
  5953  001E02  0EFF               	movlw	255
  5954  001E04  1A13               	xorwf	___ftadd@f2+1,f,c
  5955  001E06  0EFF               	movlw	255
  5956  001E08  1A14               	xorwf	___ftadd@f2+2,f,c
  5957  001E0A  0E01               	movlw	1
  5958  001E0C  2612               	addwf	___ftadd@f2,f,c
  5959  001E0E  0E00               	movlw	0
  5960  001E10  2213               	addwfc	___ftadd@f2+1,f,c
  5961  001E12  0E00               	movlw	0
  5962  001E14  2214               	addwfc	___ftadd@f2+2,f,c
  5963  001E16  0E01               	movlw	1
  5964  001E18  6E18               	movwf	___ftadd@sign,c
  5965  001E1A                     l2716:
  5966  001E1A  C012  F001         	movff	___ftadd@f2,___ftpack@arg
  5967  001E1E  C013  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5968  001E22  C014  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5969  001E26  C01A  F004         	movff	___ftadd@exp1,___ftpack@exp
  5970  001E2A  C018  F005         	movff	___ftadd@sign,___ftpack@sign
  5971  001E2E  EC87  F010         	call	___ftpack	;wreg free
  5972  001E32  C001  F00F         	movff	?___ftpack,?___ftadd
  5973  001E36  C002  F010         	movff	?___ftpack+1,?___ftadd+1
  5974  001E3A  C003  F011         	movff	?___ftpack+2,?___ftadd+2
  5975  001E3E  0012               	return	
  5976  001E40                     __end_of___ftadd:
  5977                           	opt stack 0
  5978                           tblptru	equ	0xFF8
  5979                           tblptrh	equ	0xFF7
  5980                           tblptrl	equ	0xFF6
  5981                           tablat	equ	0xFF5
  5982                           prodl	equ	0xFF3
  5983                           indf2	equ	0xFDF
  5984                           postinc2	equ	0xFDE
  5985                           postdec2	equ	0xFDD
  5986                           fsr2h	equ	0xFDA
  5987                           fsr2l	equ	0xFD9
  5988                           status	equ	0xFD8
  5989                           
  5990 ;; *************** function ___ftpack *****************
  5991 ;; Defined at:
  5992 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  arg             3    0[COMRAM] unsigned um
  5995 ;;  exp             1    3[COMRAM] unsigned char 
  5996 ;;  sign            1    4[COMRAM] unsigned char 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  3    0[COMRAM] float 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6008 ;;      Params:         5       0       0       0       0       0       0       0       0
  6009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6010 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6011 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6012 ;;Total ram usage:        8 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		___ftadd
  6018 ;;		___ftdiv
  6019 ;;		___ftmul
  6020 ;;		___lwtoft
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           	psect	text18
  6025  00210E                     __ptext18:
  6026                           	opt stack 0
  6027  00210E                     ___ftpack:
  6028                           	opt stack 28
  6029                           
  6030                           ;incstack = 0
  6031  00210E  5004               	movf	___ftpack@exp,w,c
  6032  002110  B4D8               	btfsc	status,2,c
  6033  002112  D005               	goto	l2592
  6034  002114  5001               	movf	___ftpack@arg,w,c
  6035  002116  1002               	iorwf	___ftpack@arg+1,w,c
  6036  002118  1003               	iorwf	___ftpack@arg+2,w,c
  6037  00211A  A4D8               	btfss	status,2,c
  6038  00211C  D00C               	goto	l2598
  6039  00211E                     l2592:
  6040  00211E  0E00               	movlw	0
  6041  002120  6E01               	movwf	?___ftpack,c
  6042  002122  0E00               	movlw	0
  6043  002124  6E02               	movwf	?___ftpack+1,c
  6044  002126  0E00               	movlw	0
  6045  002128  6E03               	movwf	?___ftpack+2,c
  6046  00212A  0012               	return	
  6047  00212C                     l2596:
  6048  00212C  2A04               	incf	___ftpack@exp,f,c
  6049  00212E  90D8               	bcf	status,0,c
  6050  002130  3203               	rrcf	___ftpack@arg+2,f,c
  6051  002132  3202               	rrcf	___ftpack@arg+1,f,c
  6052  002134  3201               	rrcf	___ftpack@arg,f,c
  6053  002136                     l2598:
  6054  002136  0E00               	movlw	0
  6055  002138  1401               	andwf	___ftpack@arg,w,c
  6056  00213A  6E06               	movwf	??___ftpack& (0+255),c
  6057  00213C  0E00               	movlw	0
  6058  00213E  1402               	andwf	___ftpack@arg+1,w,c
  6059  002140  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6060  002142  0EFE               	movlw	254
  6061  002144  1403               	andwf	___ftpack@arg+2,w,c
  6062  002146  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6063  002148  5006               	movf	??___ftpack,w,c
  6064  00214A  1007               	iorwf	??___ftpack+1,w,c
  6065  00214C  1008               	iorwf	??___ftpack+2,w,c
  6066  00214E  B4D8               	btfsc	status,2,c
  6067  002150  D00C               	goto	l2604
  6068  002152  D7EC               	goto	l2596
  6069  002154                     l2600:
  6070  002154  2A04               	incf	___ftpack@exp,f,c
  6071  002156  0E01               	movlw	1
  6072  002158  2601               	addwf	___ftpack@arg,f,c
  6073  00215A  0E00               	movlw	0
  6074  00215C  2202               	addwfc	___ftpack@arg+1,f,c
  6075  00215E  0E00               	movlw	0
  6076  002160  2203               	addwfc	___ftpack@arg+2,f,c
  6077  002162  90D8               	bcf	status,0,c
  6078  002164  3203               	rrcf	___ftpack@arg+2,f,c
  6079  002166  3202               	rrcf	___ftpack@arg+1,f,c
  6080  002168  3201               	rrcf	___ftpack@arg,f,c
  6081  00216A                     l2604:
  6082  00216A  0E00               	movlw	0
  6083  00216C  1401               	andwf	___ftpack@arg,w,c
  6084  00216E  6E06               	movwf	??___ftpack& (0+255),c
  6085  002170  0E00               	movlw	0
  6086  002172  1402               	andwf	___ftpack@arg+1,w,c
  6087  002174  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6088  002176  0EFF               	movlw	255
  6089  002178  1403               	andwf	___ftpack@arg+2,w,c
  6090  00217A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6091  00217C  5006               	movf	??___ftpack,w,c
  6092  00217E  1007               	iorwf	??___ftpack+1,w,c
  6093  002180  1008               	iorwf	??___ftpack+2,w,c
  6094  002182  B4D8               	btfsc	status,2,c
  6095  002184  D006               	goto	l2608
  6096  002186  D7E6               	goto	l2600
  6097  002188                     l2606:
  6098  002188  0604               	decf	___ftpack@exp,f,c
  6099  00218A  90D8               	bcf	status,0,c
  6100  00218C  3601               	rlcf	___ftpack@arg,f,c
  6101  00218E  3602               	rlcf	___ftpack@arg+1,f,c
  6102  002190  3603               	rlcf	___ftpack@arg+2,f,c
  6103  002192                     l2608:
  6104  002192  BE02               	btfsc	___ftpack@arg+1,7,c
  6105  002194  D003               	goto	l757
  6106  002196  0E02               	movlw	2
  6107  002198  6004               	cpfslt	___ftpack@exp,c
  6108  00219A  D7F6               	goto	l2606
  6109  00219C                     l757:
  6110  00219C  A004               	btfss	___ftpack@exp,0,c
  6111  00219E  9E02               	bcf	___ftpack@arg+1,7,c
  6112  0021A0  90D8               	bcf	status,0,c
  6113  0021A2  3204               	rrcf	___ftpack@exp,f,c
  6114  0021A4  5004               	movf	___ftpack@exp,w,c
  6115  0021A6  1203               	iorwf	___ftpack@arg+2,f,c
  6116  0021A8  5005               	movf	___ftpack@sign,w,c
  6117  0021AA  A4D8               	btfss	status,2,c
  6118  0021AC  8E03               	bsf	___ftpack@arg+2,7,c
  6119  0021AE  C001  F001         	movff	___ftpack@arg,?___ftpack
  6120  0021B2  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6121  0021B6  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6122  0021BA  0012               	return	
  6123  0021BC                     __end_of___ftpack:
  6124                           	opt stack 0
  6125                           tblptru	equ	0xFF8
  6126                           tblptrh	equ	0xFF7
  6127                           tblptrl	equ	0xFF6
  6128                           tablat	equ	0xFF5
  6129                           prodl	equ	0xFF3
  6130                           indf2	equ	0xFDF
  6131                           postinc2	equ	0xFDE
  6132                           postdec2	equ	0xFDD
  6133                           fsr2h	equ	0xFDA
  6134                           fsr2l	equ	0xFD9
  6135                           status	equ	0xFD8
  6136                           
  6137 ;; *************** function _lcd_init *****************
  6138 ;; Defined at:
  6139 ;;		line 101 in file "iut_lcd.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;		None
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6153 ;;      Params:         0       0       0       0       0       0       0       0       0
  6154 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6155 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6156 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6157 ;;Total ram usage:        1 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    4
  6160 ;; This function calls:
  6161 ;;		_lcd_clear
  6162 ;;		_lcd_clock_e
  6163 ;;		_lcd_write_cmd_busy
  6164 ;; This function is called by:
  6165 ;;		_main
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text19
  6170  002262                     __ptext19:
  6171                           	opt stack 0
  6172  002262                     _lcd_init:
  6173                           	opt stack 26
  6174                           
  6175                           ;iut_lcd.c: 102: TRISD &= ~0x07;
  6176                           
  6177                           ;incstack = 0
  6178  002262  0EF8               	movlw	248
  6179  002264  1695               	andwf	3989,f,c	;volatile
  6180                           
  6181                           ;iut_lcd.c: 103: TRISD |= 0xF0;
  6182  002266  0EF0               	movlw	240
  6183  002268  1295               	iorwf	3989,f,c	;volatile
  6184                           
  6185                           ;iut_lcd.c: 104: PORTD &= 0x08;
  6186  00226A  0E08               	movlw	8
  6187  00226C  1683               	andwf	3971,f,c	;volatile
  6188                           
  6189                           ;iut_lcd.c: 105: _delay(180000);
  6190  00226E  0EEA               	movlw	234
  6191  002270  6E03               	movwf	??_lcd_init& (0+255),c
  6192  002272  0EC3               	movlw	195
  6193  002274                     u4267:
  6194  002274  2EE8               	decfsz	wreg,f,c
  6195  002276  D7FE               	bra	u4267
  6196  002278  2E03               	decfsz	??_lcd_init& (0+255),f,c
  6197  00227A  D7FC               	bra	u4267
  6198  00227C  F000               	nop	
  6199                           
  6200                           ;iut_lcd.c: 107: TRISD &= 0x0f;
  6201  00227E  0E0F               	movlw	15
  6202  002280  1695               	andwf	3989,f,c	;volatile
  6203                           
  6204                           ;iut_lcd.c: 109: PORTD &= 0x0f;
  6205  002282  0E0F               	movlw	15
  6206  002284  1683               	andwf	3971,f,c	;volatile
  6207                           
  6208                           ;iut_lcd.c: 110: PORTD |= 0b00110000;
  6209  002286  0E30               	movlw	48
  6210  002288  1283               	iorwf	3971,f,c	;volatile
  6211                           
  6212                           ;iut_lcd.c: 111: lcd_clock_e();
  6213  00228A  EC63  F013         	call	_lcd_clock_e	;wreg free
  6214                           
  6215                           ;iut_lcd.c: 112: _delay(60000);
  6216  00228E  0E4E               	movlw	78
  6217  002290  6E03               	movwf	??_lcd_init& (0+255),c
  6218  002292  0EEB               	movlw	235
  6219  002294                     u4277:
  6220  002294  2EE8               	decfsz	wreg,f,c
  6221  002296  D7FE               	bra	u4277
  6222  002298  2E03               	decfsz	??_lcd_init& (0+255),f,c
  6223  00229A  D7FC               	bra	u4277
  6224  00229C  F000               	nop	
  6225                           
  6226                           ;iut_lcd.c: 114: PORTD &= 0x0f;
  6227  00229E  0E0F               	movlw	15
  6228  0022A0  1683               	andwf	3971,f,c	;volatile
  6229                           
  6230                           ;iut_lcd.c: 115: PORTD |= 0b00110000;
  6231  0022A2  0E30               	movlw	48
  6232  0022A4  1283               	iorwf	3971,f,c	;volatile
  6233                           
  6234                           ;iut_lcd.c: 116: lcd_clock_e();
  6235  0022A6  EC63  F013         	call	_lcd_clock_e	;wreg free
  6236                           
  6237                           ;iut_lcd.c: 117: _delay(1200);
  6238  0022AA  0EF0               	movlw	240
  6239  0022AC                     u4287:
  6240  0022AC  D000               	nop2	
  6241  0022AE  2EE8               	decfsz	wreg,f,c
  6242  0022B0  D7FD               	bra	u4287
  6243                           
  6244                           ;iut_lcd.c: 119: PORTD &= 0x0f;
  6245  0022B2  0E0F               	movlw	15
  6246  0022B4  1683               	andwf	3971,f,c	;volatile
  6247                           
  6248                           ;iut_lcd.c: 120: PORTD |= 0b00110000;
  6249  0022B6  0E30               	movlw	48
  6250  0022B8  1283               	iorwf	3971,f,c	;volatile
  6251                           
  6252                           ;iut_lcd.c: 121: lcd_clock_e();
  6253  0022BA  EC63  F013         	call	_lcd_clock_e	;wreg free
  6254                           
  6255                           ;iut_lcd.c: 122: _delay(1200);
  6256  0022BE  0EF0               	movlw	240
  6257  0022C0                     u4297:
  6258  0022C0  D000               	nop2	
  6259  0022C2  2EE8               	decfsz	wreg,f,c
  6260  0022C4  D7FD               	bra	u4297
  6261                           
  6262                           ;iut_lcd.c: 124: PORTD &= 0x0f;
  6263  0022C6  0E0F               	movlw	15
  6264  0022C8  1683               	andwf	3971,f,c	;volatile
  6265                           
  6266                           ;iut_lcd.c: 125: PORTD |= 0b00100000;
  6267  0022CA  8A83               	bsf	3971,5,c	;volatile
  6268                           
  6269                           ;iut_lcd.c: 126: lcd_clock_e();
  6270  0022CC  EC63  F013         	call	_lcd_clock_e	;wreg free
  6271                           
  6272                           ;iut_lcd.c: 127: _delay(1200);
  6273  0022D0  0EF0               	movlw	240
  6274  0022D2                     u4307:
  6275  0022D2  D000               	nop2	
  6276  0022D4  2EE8               	decfsz	wreg,f,c
  6277  0022D6  D7FD               	bra	u4307
  6278                           
  6279                           ;iut_lcd.c: 129: TRISD |= 0xf0;
  6280  0022D8  0EF0               	movlw	240
  6281  0022DA  1295               	iorwf	3989,f,c	;volatile
  6282                           
  6283                           ;iut_lcd.c: 131: lcd_write_cmd_busy(0x28);
  6284  0022DC  0E28               	movlw	40
  6285  0022DE  EC4E  F013         	call	_lcd_write_cmd_busy
  6286                           
  6287                           ;iut_lcd.c: 132: lcd_write_cmd_busy(0x08);
  6288  0022E2  0E08               	movlw	8
  6289  0022E4  EC4E  F013         	call	_lcd_write_cmd_busy
  6290                           
  6291                           ;iut_lcd.c: 133: lcd_clear();
  6292  0022E8  EC7A  F013         	call	_lcd_clear	;wreg free
  6293                           
  6294                           ;iut_lcd.c: 134: lcd_write_cmd_busy(0x06);
  6295  0022EC  0E06               	movlw	6
  6296  0022EE  EC4E  F013         	call	_lcd_write_cmd_busy
  6297                           
  6298                           ;iut_lcd.c: 135: lcd_write_cmd_busy(0x0C);
  6299  0022F2  0E0C               	movlw	12
  6300  0022F4  EC4E  F013         	call	_lcd_write_cmd_busy
  6301  0022F8  0012               	return		;funcret
  6302  0022FA                     __end_of_lcd_init:
  6303                           	opt stack 0
  6304                           tblptru	equ	0xFF8
  6305                           tblptrh	equ	0xFF7
  6306                           tblptrl	equ	0xFF6
  6307                           tablat	equ	0xFF5
  6308                           prodl	equ	0xFF3
  6309                           wreg	equ	0xFE8
  6310                           indf2	equ	0xFDF
  6311                           postinc2	equ	0xFDE
  6312                           postdec2	equ	0xFDD
  6313                           fsr2h	equ	0xFDA
  6314                           fsr2l	equ	0xFD9
  6315                           status	equ	0xFD8
  6316                           
  6317 ;; *************** function _lcd_clear *****************
  6318 ;; Defined at:
  6319 ;;		line 145 in file "iut_lcd.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;		None
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1    wreg      void 
  6326 ;; Registers used:
  6327 ;;		wreg, status,2, status,0, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6333 ;;      Params:         0       0       0       0       0       0       0       0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6336 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6337 ;;Total ram usage:        0 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    3
  6340 ;; This function calls:
  6341 ;;		_lcd_write_cmd_busy
  6342 ;; This function is called by:
  6343 ;;		_lcd_init
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text20
  6348  0026F4                     __ptext20:
  6349                           	opt stack 0
  6350  0026F4                     _lcd_clear:
  6351                           	opt stack 26
  6352                           
  6353                           ;iut_lcd.c: 146: lcd_write_cmd_busy(0x01);
  6354                           
  6355                           ;incstack = 0
  6356  0026F4  0E01               	movlw	1
  6357  0026F6  EC4E  F013         	call	_lcd_write_cmd_busy
  6358  0026FA  0012               	return		;funcret
  6359  0026FC                     __end_of_lcd_clear:
  6360                           	opt stack 0
  6361                           tblptru	equ	0xFF8
  6362                           tblptrh	equ	0xFF7
  6363                           tblptrl	equ	0xFF6
  6364                           tablat	equ	0xFF5
  6365                           prodl	equ	0xFF3
  6366                           wreg	equ	0xFE8
  6367                           indf2	equ	0xFDF
  6368                           postinc2	equ	0xFDE
  6369                           postdec2	equ	0xFDD
  6370                           fsr2h	equ	0xFDA
  6371                           fsr2l	equ	0xFD9
  6372                           status	equ	0xFD8
  6373                           
  6374 ;; *************** function _lcd_write_cmd_busy *****************
  6375 ;; Defined at:
  6376 ;;		line 764 in file "iut_lcd.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  c               1    wreg     unsigned char 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  c               1    1[COMRAM] unsigned char 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      void 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6390 ;;      Params:         0       0       0       0       0       0       0       0       0
  6391 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6393 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6394 ;;Total ram usage:        1 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    2
  6397 ;; This function calls:
  6398 ;;		_lcd_busy
  6399 ;;		_lcd_write_cmd_data
  6400 ;; This function is called by:
  6401 ;;		_lcd_init
  6402 ;;		_lcd_clear
  6403 ;;		_lcd_position
  6404 ;;		_lcd_putc
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408                           	psect	text21
  6409  00269C                     __ptext21:
  6410                           	opt stack 0
  6411  00269C                     _lcd_write_cmd_busy:
  6412                           	opt stack 26
  6413                           
  6414                           ;incstack = 0
  6415                           ;lcd_write_cmd_busy@c stored from wreg
  6416  00269C  6E02               	movwf	lcd_write_cmd_busy@c,c
  6417  00269E                     l2568:
  6418  00269E  EC5F  F012         	call	_lcd_busy	;wreg free
  6419  0026A2  0900               	iorlw	0
  6420  0026A4  A4D8               	btfss	status,2,c
  6421  0026A6  D7FB               	goto	l2568
  6422                           
  6423                           ;iut_lcd.c: 766: PORTDbits.RD1 = 0;
  6424  0026A8  9283               	bcf	3971,1,c	;volatile
  6425                           
  6426                           ;iut_lcd.c: 767: lcd_write_cmd_data(c);
  6427  0026AA  5002               	movf	lcd_write_cmd_busy@c,w,c
  6428  0026AC  EC98  F012         	call	_lcd_write_cmd_data
  6429  0026B0  0012               	return		;funcret
  6430  0026B2                     __end_of_lcd_write_cmd_busy:
  6431                           	opt stack 0
  6432                           tblptru	equ	0xFF8
  6433                           tblptrh	equ	0xFF7
  6434                           tblptrl	equ	0xFF6
  6435                           tablat	equ	0xFF5
  6436                           prodl	equ	0xFF3
  6437                           wreg	equ	0xFE8
  6438                           indf2	equ	0xFDF
  6439                           postinc2	equ	0xFDE
  6440                           postdec2	equ	0xFDD
  6441                           fsr2h	equ	0xFDA
  6442                           fsr2l	equ	0xFD9
  6443                           status	equ	0xFD8
  6444                           
  6445 ;; *************** function _lcd_write_cmd_data *****************
  6446 ;; Defined at:
  6447 ;;		line 746 in file "iut_lcd.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  c               1    wreg     unsigned char 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  c               1    0[COMRAM] unsigned char 
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      void 
  6454 ;; Registers used:
  6455 ;;		wreg, status,2, status,0, cstack
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6461 ;;      Params:         0       0       0       0       0       0       0       0       0
  6462 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6464 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6465 ;;Total ram usage:        1 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    1
  6468 ;; This function calls:
  6469 ;;		_lcd_clock_e
  6470 ;; This function is called by:
  6471 ;;		_lcd_write_data_busy
  6472 ;;		_lcd_write_cmd_busy
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           	psect	text22
  6477  002530                     __ptext22:
  6478                           	opt stack 0
  6479  002530                     _lcd_write_cmd_data:
  6480                           	opt stack 27
  6481                           
  6482                           ;incstack = 0
  6483                           ;lcd_write_cmd_data@c stored from wreg
  6484  002530  6E01               	movwf	lcd_write_cmd_data@c,c
  6485                           
  6486                           ;iut_lcd.c: 747: PORTDbits.RD2 = 0;
  6487  002532  9483               	bcf	3971,2,c	;volatile
  6488                           
  6489                           ;iut_lcd.c: 748: TRISD &= 0x0f;
  6490  002534  0E0F               	movlw	15
  6491  002536  1695               	andwf	3989,f,c	;volatile
  6492                           
  6493                           ;iut_lcd.c: 749: PORTD &= 0x0f;
  6494  002538  0E0F               	movlw	15
  6495  00253A  1683               	andwf	3971,f,c	;volatile
  6496                           
  6497                           ;iut_lcd.c: 750: PORTD |= (c & 0xf0);
  6498  00253C  5001               	movf	lcd_write_cmd_data@c,w,c
  6499  00253E  0BF0               	andlw	240
  6500  002540  1283               	iorwf	3971,f,c	;volatile
  6501                           
  6502                           ;iut_lcd.c: 751: lcd_clock_e();
  6503  002542  EC63  F013         	call	_lcd_clock_e	;wreg free
  6504                           
  6505                           ;iut_lcd.c: 752: PORTD &= 0x0f;
  6506  002546  0E0F               	movlw	15
  6507  002548  1683               	andwf	3971,f,c	;volatile
  6508                           
  6509                           ;iut_lcd.c: 753: PORTD |= ((c << 4)&0xf0);
  6510  00254A  3801               	swapf	lcd_write_cmd_data@c,w,c
  6511  00254C  0BF0               	andlw	240
  6512  00254E  0BF0               	andlw	240
  6513  002550  1283               	iorwf	3971,f,c	;volatile
  6514                           
  6515                           ;iut_lcd.c: 754: lcd_clock_e();
  6516  002552  EC63  F013         	call	_lcd_clock_e	;wreg free
  6517                           
  6518                           ;iut_lcd.c: 755: TRISD |= 0xf0;
  6519  002556  0EF0               	movlw	240
  6520  002558  1295               	iorwf	3989,f,c	;volatile
  6521  00255A  0012               	return		;funcret
  6522  00255C                     __end_of_lcd_write_cmd_data:
  6523                           	opt stack 0
  6524                           tblptru	equ	0xFF8
  6525                           tblptrh	equ	0xFF7
  6526                           tblptrl	equ	0xFF6
  6527                           tablat	equ	0xFF5
  6528                           prodl	equ	0xFF3
  6529                           wreg	equ	0xFE8
  6530                           indf2	equ	0xFDF
  6531                           postinc2	equ	0xFDE
  6532                           postdec2	equ	0xFDD
  6533                           fsr2h	equ	0xFDA
  6534                           fsr2l	equ	0xFD9
  6535                           status	equ	0xFD8
  6536                           
  6537 ;; *************** function _lcd_busy *****************
  6538 ;; Defined at:
  6539 ;;		line 770 in file "iut_lcd.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;		None
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;		None
  6544 ;; Return value:  Size  Location     Type
  6545 ;;                  1    wreg      unsigned char 
  6546 ;; Registers used:
  6547 ;;		wreg, cstack
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6553 ;;      Params:         0       0       0       0       0       0       0       0       0
  6554 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6555 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6556 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6557 ;;Total ram usage:        0 bytes
  6558 ;; Hardware stack levels used:    1
  6559 ;; Hardware stack levels required when called:    1
  6560 ;; This function calls:
  6561 ;;		_lcd_clock_e
  6562 ;; This function is called by:
  6563 ;;		_lcd_write_data_busy
  6564 ;;		_lcd_write_cmd_busy
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           	psect	text23
  6569  0024BE                     __ptext23:
  6570                           	opt stack 0
  6571  0024BE                     _lcd_busy:
  6572                           	opt stack 27
  6573                           
  6574                           ;iut_lcd.c: 771: PORTDbits.RD2 = 1;
  6575                           
  6576                           ;incstack = 0
  6577  0024BE  8483               	bsf	3971,2,c	;volatile
  6578                           
  6579                           ;iut_lcd.c: 772: PORTDbits.RD1 = 0;
  6580  0024C0  9283               	bcf	3971,1,c	;volatile
  6581                           
  6582                           ;iut_lcd.c: 773: __nop(); __nop(); __nop();;
  6583  0024C2  F000               	nop	
  6584  0024C4  F000               	nop	
  6585  0024C6  F000               	nop	
  6586                           
  6587                           ;iut_lcd.c: 774: PORTDbits.RD0 = 1;
  6588  0024C8  8083               	bsf	3971,0,c	;volatile
  6589                           
  6590                           ;iut_lcd.c: 775: __nop(); __nop(); __nop();;
  6591  0024CA  F000               	nop	
  6592  0024CC  F000               	nop	
  6593  0024CE  F000               	nop	
  6594                           
  6595                           ;iut_lcd.c: 776: if (PORTD & 0x80) {
  6596  0024D0  AE83               	btfss	3971,7,c	;volatile
  6597  0024D2  D009               	goto	l374
  6598                           
  6599                           ;iut_lcd.c: 777: PORTDbits.RD0 = 0;
  6600  0024D4  9083               	bcf	3971,0,c	;volatile
  6601                           
  6602                           ;iut_lcd.c: 778: __nop(); __nop(); __nop();;
  6603  0024D6  F000               	nop	
  6604  0024D8  F000               	nop	
  6605  0024DA  F000               	nop	
  6606                           
  6607                           ;iut_lcd.c: 779: lcd_clock_e();
  6608  0024DC  EC63  F013         	call	_lcd_clock_e	;wreg free
  6609                           
  6610                           ;iut_lcd.c: 780: PORTDbits.RD2 = 0;
  6611  0024E0  9483               	bcf	3971,2,c	;volatile
  6612                           
  6613                           ;iut_lcd.c: 781: return 1;
  6614  0024E2  0E01               	movlw	1
  6615                           
  6616                           ;iut_lcd.c: 782: } else {
  6617  0024E4  0012               	return	
  6618  0024E6                     l374:
  6619                           
  6620                           ;iut_lcd.c: 783: PORTDbits.RD0 = 0;
  6621  0024E6  9083               	bcf	3971,0,c	;volatile
  6622                           
  6623                           ;iut_lcd.c: 784: __nop(); __nop(); __nop();;
  6624  0024E8  F000               	nop	
  6625  0024EA  F000               	nop	
  6626  0024EC  F000               	nop	
  6627                           
  6628                           ;iut_lcd.c: 785: lcd_clock_e();
  6629  0024EE  EC63  F013         	call	_lcd_clock_e	;wreg free
  6630                           
  6631                           ;iut_lcd.c: 786: PORTDbits.RD2 = 0;
  6632  0024F2  9483               	bcf	3971,2,c	;volatile
  6633                           
  6634                           ;iut_lcd.c: 787: return 0;
  6635  0024F4  0E00               	movlw	0
  6636  0024F6  0012               	return	
  6637  0024F8                     __end_of_lcd_busy:
  6638                           	opt stack 0
  6639                           tblptru	equ	0xFF8
  6640                           tblptrh	equ	0xFF7
  6641                           tblptrl	equ	0xFF6
  6642                           tablat	equ	0xFF5
  6643                           prodl	equ	0xFF3
  6644                           wreg	equ	0xFE8
  6645                           indf2	equ	0xFDF
  6646                           postinc2	equ	0xFDE
  6647                           postdec2	equ	0xFDD
  6648                           fsr2h	equ	0xFDA
  6649                           fsr2l	equ	0xFD9
  6650                           status	equ	0xFD8
  6651                           
  6652 ;; *************** function _lcd_clock_e *****************
  6653 ;; Defined at:
  6654 ;;		line 791 in file "iut_lcd.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  1    wreg      void 
  6661 ;; Registers used:
  6662 ;;		None
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6668 ;;      Params:         0       0       0       0       0       0       0       0       0
  6669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6671 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6672 ;;Total ram usage:        0 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; This function calls:
  6675 ;;		Nothing
  6676 ;; This function is called by:
  6677 ;;		_lcd_init
  6678 ;;		_lcd_write_cmd_data
  6679 ;;		_lcd_busy
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text24
  6684  0026C6                     __ptext24:
  6685                           	opt stack 0
  6686  0026C6                     _lcd_clock_e:
  6687                           	opt stack 27
  6688                           
  6689                           ;iut_lcd.c: 792: PORTDbits.RD0 = 1;
  6690                           
  6691                           ;incstack = 0
  6692  0026C6  8083               	bsf	3971,0,c	;volatile
  6693                           
  6694                           ;iut_lcd.c: 793: __nop(); __nop(); __nop();;
  6695  0026C8  F000               	nop	
  6696  0026CA  F000               	nop	
  6697  0026CC  F000               	nop	
  6698                           
  6699                           ;iut_lcd.c: 794: PORTDbits.RD0 = 0;
  6700  0026CE  9083               	bcf	3971,0,c	;volatile
  6701                           
  6702                           ;iut_lcd.c: 795: __nop(); __nop(); __nop();;
  6703  0026D0  F000               	nop	
  6704  0026D2  F000               	nop	
  6705  0026D4  F000               	nop	
  6706  0026D6  0012               	return		;funcret
  6707  0026D8                     __end_of_lcd_clock_e:
  6708                           	opt stack 0
  6709                           tblptru	equ	0xFF8
  6710                           tblptrh	equ	0xFF7
  6711                           tblptrl	equ	0xFF6
  6712                           tablat	equ	0xFF5
  6713                           prodl	equ	0xFF3
  6714                           wreg	equ	0xFE8
  6715                           indf2	equ	0xFDF
  6716                           postinc2	equ	0xFDE
  6717                           postdec2	equ	0xFDD
  6718                           fsr2h	equ	0xFDA
  6719                           fsr2l	equ	0xFD9
  6720                           status	equ	0xFD8
  6721                           
  6722 ;; *************** function _adc_read *****************
  6723 ;; Defined at:
  6724 ;;		line 113 in file "iut_adc.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  numero_canal    1    wreg     unsigned char 
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;  numero_canal    1    4[COMRAM] unsigned char 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  2    0[COMRAM] int 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6738 ;;      Params:         2       0       0       0       0       0       0       0       0
  6739 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6740 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6741 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6742 ;;Total ram usage:        5 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; This function calls:
  6745 ;;		Nothing
  6746 ;; This function is called by:
  6747 ;;		_main
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           	psect	text25
  6752  0025B0                     __ptext25:
  6753                           	opt stack 0
  6754  0025B0                     _adc_read:
  6755                           	opt stack 30
  6756                           
  6757                           ;incstack = 0
  6758                           ;adc_read@numero_canal stored from wreg
  6759  0025B0  6E05               	movwf	adc_read@numero_canal,c
  6760                           
  6761                           ;iut_adc.c: 115: ADCON0 = ((numero_canal & 0x07) << 2) | 0x01;
  6762  0025B2  C005  F003         	movff	adc_read@numero_canal,??_adc_read
  6763  0025B6  0E07               	movlw	7
  6764  0025B8  1603               	andwf	??_adc_read,f,c
  6765  0025BA  90D8               	bcf	status,0,c
  6766  0025BC  3603               	rlcf	??_adc_read,f,c
  6767  0025BE  90D8               	bcf	status,0,c
  6768  0025C0  3403               	rlcf	??_adc_read,w,c
  6769  0025C2  0901               	iorlw	1
  6770  0025C4  6EC2               	movwf	4034,c	;volatile
  6771                           
  6772                           ;iut_adc.c: 118: ADCON0bits.GO = 1;
  6773  0025C6  82C2               	bsf	4034,1,c	;volatile
  6774  0025C8                     l114:
  6775  0025C8  B2C2               	btfsc	4034,1,c	;volatile
  6776  0025CA  D7FE               	goto	l114
  6777                           
  6778                           ;iut_adc.c: 124: return (((unsigned int) ADRESH) << 8) | ADRESL;
  6779  0025CC  50C4               	movf	4036,w,c	;volatile
  6780  0025CE  6E03               	movwf	??_adc_read& (0+255),c
  6781  0025D0  50C3               	movf	4035,w,c	;volatile
  6782  0025D2  6E01               	movwf	?_adc_read,c
  6783  0025D4  C003  F002         	movff	??_adc_read,?_adc_read+1
  6784  0025D8  0012               	return	
  6785  0025DA                     __end_of_adc_read:
  6786                           	opt stack 0
  6787                           tblptru	equ	0xFF8
  6788                           tblptrh	equ	0xFF7
  6789                           tblptrl	equ	0xFF6
  6790                           tablat	equ	0xFF5
  6791                           prodl	equ	0xFF3
  6792                           wreg	equ	0xFE8
  6793                           indf2	equ	0xFDF
  6794                           postinc2	equ	0xFDE
  6795                           postdec2	equ	0xFDD
  6796                           fsr2h	equ	0xFDA
  6797                           fsr2l	equ	0xFD9
  6798                           status	equ	0xFD8
  6799                           
  6800 ;; *************** function _adc_init *****************
  6801 ;; Defined at:
  6802 ;;		line 48 in file "iut_adc.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  numero_derni    1    wreg     unsigned char 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;  numero_derni    1    0[COMRAM] unsigned char 
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  1    wreg      void 
  6809 ;; Registers used:
  6810 ;;		wreg, status,2, status,0
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6816 ;;      Params:         0       0       0       0       0       0       0       0       0
  6817 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6819 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6820 ;;Total ram usage:        1 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; This function calls:
  6823 ;;		Nothing
  6824 ;; This function is called by:
  6825 ;;		_main
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text26
  6830  0021BC                     __ptext26:
  6831                           	opt stack 0
  6832  0021BC                     _adc_init:
  6833                           	opt stack 30
  6834                           
  6835                           ;incstack = 0
  6836                           ;adc_init@numero_dernier_canal stored from wreg
  6837  0021BC  6E01               	movwf	adc_init@numero_dernier_canal,c
  6838                           
  6839                           ;iut_adc.c: 51: switch (numero_dernier_canal) {
  6840  0021BE  D033               	goto	l1606
  6841  0021C0                     l1566:
  6842                           
  6843                           ;iut_adc.c: 57: ADCON1 = 0xD;
  6844  0021C0  0E0D               	movlw	13
  6845  0021C2  6EC1               	movwf	4033,c	;volatile
  6846                           
  6847                           ;iut_adc.c: 58: TRISA = TRISA | 0b00000011;
  6848  0021C4  5092               	movf	3986,w,c	;volatile
  6849  0021C6  0903               	iorlw	3
  6850  0021C8  D02C               	goto	L39
  6851  0021CA                     l1570:
  6852                           
  6853                           ;iut_adc.c: 61: ADCON1 = 0xC;
  6854  0021CA  0E0C               	movlw	12
  6855  0021CC  6EC1               	movwf	4033,c	;volatile
  6856                           
  6857                           ;iut_adc.c: 62: TRISA = TRISA | 0b00000111;
  6858  0021CE  5092               	movf	3986,w,c	;volatile
  6859  0021D0  0907               	iorlw	7
  6860  0021D2  D027               	goto	L39
  6861  0021D4                     l1574:
  6862                           
  6863                           ;iut_adc.c: 65: ADCON1 = 0xB;
  6864  0021D4  0E0B               	movlw	11
  6865  0021D6  6EC1               	movwf	4033,c	;volatile
  6866                           
  6867                           ;iut_adc.c: 66: TRISA = TRISA | 0b00001111;
  6868  0021D8  5092               	movf	3986,w,c	;volatile
  6869  0021DA  090F               	iorlw	15
  6870  0021DC  D022               	goto	L39
  6871  0021DE                     l1578:
  6872                           
  6873                           ;iut_adc.c: 69: ADCON1 = 0xA;
  6874  0021DE  0E0A               	movlw	10
  6875  0021E0  6EC1               	movwf	4033,c	;volatile
  6876                           
  6877                           ;iut_adc.c: 70: TRISA = TRISA | 0b00101111;
  6878  0021E2  5092               	movf	3986,w,c	;volatile
  6879  0021E4  092F               	iorlw	47
  6880  0021E6  D01D               	goto	L39
  6881  0021E8                     l1582:
  6882                           
  6883                           ;iut_adc.c: 73: ADCON1 = 0x9;
  6884  0021E8  0E09               	movlw	9
  6885  0021EA  6EC1               	movwf	4033,c	;volatile
  6886                           
  6887                           ;iut_adc.c: 74: TRISA = TRISA | 0b00101111;
  6888  0021EC  5092               	movf	3986,w,c	;volatile
  6889  0021EE  092F               	iorlw	47
  6890  0021F0  6E92               	movwf	3986,c	;volatile
  6891                           
  6892                           ;iut_adc.c: 75: TRISE = TRISE | 0b00000001;
  6893  0021F2  5096               	movf	3990,w,c	;volatile
  6894  0021F4  0901               	iorlw	1
  6895  0021F6  D00F               	goto	L41
  6896  0021F8                     l1588:
  6897                           
  6898                           ;iut_adc.c: 78: ADCON1 = 0x8;
  6899  0021F8  0E08               	movlw	8
  6900  0021FA  6EC1               	movwf	4033,c	;volatile
  6901                           
  6902                           ;iut_adc.c: 79: TRISA = TRISA | 0b00101111;
  6903  0021FC  5092               	movf	3986,w,c	;volatile
  6904  0021FE  092F               	iorlw	47
  6905  002200  6E92               	movwf	3986,c	;volatile
  6906                           
  6907                           ;iut_adc.c: 80: TRISE = TRISE | 0b00000011;
  6908  002202  5096               	movf	3990,w,c	;volatile
  6909  002204  0903               	iorlw	3
  6910  002206  D007               	goto	L41
  6911  002208                     l1594:
  6912                           
  6913                           ;iut_adc.c: 83: ADCON1 = 0x7;
  6914  002208  0E07               	movlw	7
  6915  00220A  6EC1               	movwf	4033,c	;volatile
  6916                           
  6917                           ;iut_adc.c: 84: TRISA = TRISA | 0b00101111;
  6918  00220C  5092               	movf	3986,w,c	;volatile
  6919  00220E  092F               	iorlw	47
  6920  002210  6E92               	movwf	3986,c	;volatile
  6921                           
  6922                           ;iut_adc.c: 85: TRISE = TRISE | 0b00000111;
  6923  002212  5096               	movf	3990,w,c	;volatile
  6924  002214  0907               	iorlw	7
  6925  002216                     L41:
  6926  002216  6E96               	movwf	3990,c	;volatile
  6927                           
  6928                           ;iut_adc.c: 86: break;
  6929  002218  D020               	goto	l1608
  6930  00221A                     l1600:
  6931                           
  6932                           ;iut_adc.c: 88: ADCON1 = 0xE;
  6933  00221A  0E0E               	movlw	14
  6934  00221C  6EC1               	movwf	4033,c	;volatile
  6935                           
  6936                           ;iut_adc.c: 89: TRISA = TRISA | 0b00000001;
  6937  00221E  5092               	movf	3986,w,c	;volatile
  6938  002220  0901               	iorlw	1
  6939  002222                     L39:
  6940  002222  6E92               	movwf	3986,c	;volatile
  6941                           
  6942                           ;iut_adc.c: 91: }
  6943                           
  6944                           ;iut_adc.c: 90: break;
  6945  002224  D01A               	goto	l1608
  6946  002226                     l1606:
  6947  002226  5001               	movf	adc_init@numero_dernier_canal,w,c
  6948                           
  6949                           ; Switch size 1, requested type "space"
  6950                           ; Number of cases is 8, Range of values is 0 to 7
  6951                           ; switch strategies available:
  6952                           ; Name         Instructions Cycles
  6953                           ; simple_byte           25    13 (average)
  6954                           ;	Chosen strategy is simple_byte
  6955  002228  0A00               	xorlw	0	; case 0
  6956  00222A  B4D8               	btfsc	status,2,c
  6957  00222C  D7F6               	goto	l1600
  6958  00222E  0A01               	xorlw	1	; case 1
  6959  002230  B4D8               	btfsc	status,2,c
  6960  002232  D7C6               	goto	l1566
  6961  002234  0A03               	xorlw	3	; case 2
  6962  002236  B4D8               	btfsc	status,2,c
  6963  002238  D7C8               	goto	l1570
  6964  00223A  0A01               	xorlw	1	; case 3
  6965  00223C  B4D8               	btfsc	status,2,c
  6966  00223E  D7CA               	goto	l1574
  6967  002240  0A07               	xorlw	7	; case 4
  6968  002242  B4D8               	btfsc	status,2,c
  6969  002244  D7CC               	goto	l1578
  6970  002246  0A01               	xorlw	1	; case 5
  6971  002248  B4D8               	btfsc	status,2,c
  6972  00224A  D7CE               	goto	l1582
  6973  00224C  0A03               	xorlw	3	; case 6
  6974  00224E  B4D8               	btfsc	status,2,c
  6975  002250  D7D3               	goto	l1588
  6976  002252  0A01               	xorlw	1	; case 7
  6977  002254  B4D8               	btfsc	status,2,c
  6978  002256  D7D8               	goto	l1594
  6979  002258  D7E0               	goto	l1600
  6980  00225A                     l1608:
  6981                           
  6982                           ;iut_adc.c: 96: ADCON2 = 0b10100110;
  6983  00225A  0EA6               	movlw	166
  6984  00225C  6EC0               	movwf	4032,c	;volatile
  6985                           
  6986                           ;iut_adc.c: 99: ADCON0bits.ADON = 1;
  6987  00225E  80C2               	bsf	4034,0,c	;volatile
  6988  002260  0012               	return		;funcret
  6989  002262                     __end_of_adc_init:
  6990                           	opt stack 0
  6991                           tblptru	equ	0xFF8
  6992                           tblptrh	equ	0xFF7
  6993                           tblptrl	equ	0xFF6
  6994                           tablat	equ	0xFF5
  6995                           prodl	equ	0xFF3
  6996                           wreg	equ	0xFE8
  6997                           indf2	equ	0xFDF
  6998                           postinc2	equ	0xFDE
  6999                           postdec2	equ	0xFDD
  7000                           fsr2h	equ	0xFDA
  7001                           fsr2l	equ	0xFD9
  7002                           status	equ	0xFD8
  7003                           
  7004 ;; *************** function ___wmul *****************
  7005 ;; Defined at:
  7006 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;  multiplier      2    0[COMRAM] unsigned int 
  7009 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;  product         2    4[COMRAM] unsigned int 
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  2    0[COMRAM] unsigned int 
  7014 ;; Registers used:
  7015 ;;		wreg, status,2, status,0, prodl, prodh
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7021 ;;      Params:         4       0       0       0       0       0       0       0       0
  7022 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7023 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7024 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7025 ;;Total ram usage:        6 bytes
  7026 ;; Hardware stack levels used:    1
  7027 ;; This function calls:
  7028 ;;		Nothing
  7029 ;; This function is called by:
  7030 ;;		_main
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text27
  7035  0025DA                     __ptext27:
  7036                           	opt stack 0
  7037  0025DA                     ___wmul:
  7038                           	opt stack 30
  7039                           
  7040                           ;incstack = 0
  7041  0025DA  5001               	movf	___wmul@multiplier,w,c
  7042  0025DC  0203               	mulwf	___wmul@multiplicand,c
  7043  0025DE  CFF3 F005          	movff	prodl,___wmul@product
  7044  0025E2  CFF4 F006          	movff	prodh,___wmul@product+1
  7045  0025E6  5001               	movf	___wmul@multiplier,w,c
  7046  0025E8  0204               	mulwf	___wmul@multiplicand+1,c
  7047  0025EA  50F3               	movf	prodl,w,c
  7048  0025EC  2606               	addwf	___wmul@product+1,f,c
  7049  0025EE  5002               	movf	___wmul@multiplier+1,w,c
  7050  0025F0  0203               	mulwf	___wmul@multiplicand,c
  7051  0025F2  50F3               	movf	prodl,w,c
  7052  0025F4  2606               	addwf	___wmul@product+1,f,c
  7053  0025F6  C005  F001         	movff	___wmul@product,?___wmul
  7054  0025FA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7055  0025FE  0012               	return	
  7056  002600                     __end_of___wmul:
  7057                           	opt stack 0
  7058                           tblptru	equ	0xFF8
  7059                           tblptrh	equ	0xFF7
  7060                           tblptrl	equ	0xFF6
  7061                           tablat	equ	0xFF5
  7062                           prodh	equ	0xFF4
  7063                           prodl	equ	0xFF3
  7064                           wreg	equ	0xFE8
  7065                           indf2	equ	0xFDF
  7066                           postinc2	equ	0xFDE
  7067                           postdec2	equ	0xFDD
  7068                           fsr2h	equ	0xFDA
  7069                           fsr2l	equ	0xFD9
  7070                           status	equ	0xFD8
  7071                           
  7072 ;; *************** function _ReadTimer0 *****************
  7073 ;; Defined at:
  7074 ;;		line 44 in file "iut_timers.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;		None
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;  timer           2    2[COMRAM] struct Timers
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  2    0[COMRAM] unsigned int 
  7081 ;; Registers used:
  7082 ;;		None
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7088 ;;      Params:         2       0       0       0       0       0       0       0       0
  7089 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7091 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7092 ;;Total ram usage:        4 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; This function calls:
  7095 ;;		Nothing
  7096 ;; This function is called by:
  7097 ;;		_main
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101                           	psect	text28
  7102  0026D8                     __ptext28:
  7103                           	opt stack 0
  7104  0026D8                     _ReadTimer0:
  7105                           	opt stack 30
  7106                           
  7107                           ;iut_timers.c: 46: union Timers timer;
  7108                           ;iut_timers.c: 48: timer.bt[0] = TMR0L;
  7109                           
  7110                           ;incstack = 0
  7111  0026D8  CFD6 F003          	movff	4054,ReadTimer0@timer	;volatile
  7112                           
  7113                           ;iut_timers.c: 49: timer.bt[1] = TMR0H;
  7114  0026DC  CFD7 F004          	movff	4055,ReadTimer0@timer+1	;volatile
  7115                           
  7116                           ;iut_timers.c: 51: return (timer.lt);
  7117  0026E0  C003  F001         	movff	ReadTimer0@timer,?_ReadTimer0
  7118  0026E4  C004  F002         	movff	ReadTimer0@timer+1,?_ReadTimer0+1
  7119  0026E8  0012               	return		;funcret
  7120  0026EA                     __end_of_ReadTimer0:
  7121                           	opt stack 0
  7122                           tblptru	equ	0xFF8
  7123                           tblptrh	equ	0xFF7
  7124                           tblptrl	equ	0xFF6
  7125                           tablat	equ	0xFF5
  7126                           prodh	equ	0xFF4
  7127                           prodl	equ	0xFF3
  7128                           wreg	equ	0xFE8
  7129                           indf2	equ	0xFDF
  7130                           postinc2	equ	0xFDE
  7131                           postdec2	equ	0xFDD
  7132                           fsr2h	equ	0xFDA
  7133                           fsr2l	equ	0xFD9
  7134                           status	equ	0xFD8
  7135                           
  7136 ;; *************** function _OpenTimer0 *****************
  7137 ;; Defined at:
  7138 ;;		line 22 in file "iut_timers.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;  config          1    wreg     unsigned char 
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;  config          1    0[COMRAM] unsigned char 
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  1    wreg      void 
  7145 ;; Registers used:
  7146 ;;		wreg, status,2, status,0
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7152 ;;      Params:         0       0       0       0       0       0       0       0       0
  7153 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7155 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7156 ;;Total ram usage:        1 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; This function calls:
  7159 ;;		Nothing
  7160 ;; This function is called by:
  7161 ;;		_main
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text29
  7166  002648                     __ptext29:
  7167                           	opt stack 0
  7168  002648                     _OpenTimer0:
  7169                           	opt stack 30
  7170                           
  7171                           ;incstack = 0
  7172                           ;OpenTimer0@config stored from wreg
  7173  002648  6E01               	movwf	OpenTimer0@config,c
  7174                           
  7175                           ;iut_timers.c: 24: T0CON = (0x7f & config);
  7176  00264A  5001               	movf	OpenTimer0@config,w,c
  7177  00264C  0B7F               	andlw	127
  7178  00264E  6ED5               	movwf	4053,c	;volatile
  7179                           
  7180                           ;iut_timers.c: 25: TMR0H = 0;
  7181  002650  0E00               	movlw	0
  7182  002652  6ED7               	movwf	4055,c	;volatile
  7183                           
  7184                           ;iut_timers.c: 26: TMR0L = 0;
  7185  002654  0E00               	movlw	0
  7186  002656  6ED6               	movwf	4054,c	;volatile
  7187                           
  7188                           ;iut_timers.c: 27: INTCONbits.T0IF = 0;
  7189  002658  94F2               	bcf	intcon,2,c	;volatile
  7190                           
  7191                           ;iut_timers.c: 29: if(config&0x80)
  7192  00265A  AE01               	btfss	OpenTimer0@config,7,c
  7193  00265C  D002               	goto	l474
  7194                           
  7195                           ;iut_timers.c: 30: INTCONbits.T0IE = 1;
  7196  00265E  8AF2               	bsf	intcon,5,c	;volatile
  7197  002660  D001               	goto	l475
  7198  002662                     l474:
  7199                           
  7200                           ;iut_timers.c: 31: else
  7201                           ;iut_timers.c: 32: INTCONbits.T0IE = 0;
  7202  002662  9AF2               	bcf	intcon,5,c	;volatile
  7203  002664                     l475:
  7204                           
  7205                           ;iut_timers.c: 34: T0CONbits.TMR0ON = 1;
  7206  002664  8ED5               	bsf	4053,7,c	;volatile
  7207  002666  0012               	return		;funcret
  7208  002668                     __end_of_OpenTimer0:
  7209                           	opt stack 0
  7210                           tblptru	equ	0xFF8
  7211                           tblptrh	equ	0xFF7
  7212                           tblptrl	equ	0xFF6
  7213                           tablat	equ	0xFF5
  7214                           prodh	equ	0xFF4
  7215                           prodl	equ	0xFF3
  7216                           intcon	equ	0xFF2
  7217                           wreg	equ	0xFE8
  7218                           indf2	equ	0xFDF
  7219                           postinc2	equ	0xFDE
  7220                           postdec2	equ	0xFDD
  7221                           fsr2h	equ	0xFDA
  7222                           fsr2l	equ	0xFD9
  7223                           status	equ	0xFD8
  7224                           tblptru	equ	0xFF8
  7225                           tblptrh	equ	0xFF7
  7226                           tblptrl	equ	0xFF6
  7227                           tablat	equ	0xFF5
  7228                           prodh	equ	0xFF4
  7229                           prodl	equ	0xFF3
  7230                           intcon	equ	0xFF2
  7231                           wreg	equ	0xFE8
  7232                           indf2	equ	0xFDF
  7233                           postinc2	equ	0xFDE
  7234                           postdec2	equ	0xFDD
  7235                           fsr2h	equ	0xFDA
  7236                           fsr2l	equ	0xFD9
  7237                           status	equ	0xFD8
  7238                           
  7239                           	psect	rparam
  7240  0000                     tblptru	equ	0xFF8
  7241                           tblptrh	equ	0xFF7
  7242                           tblptrl	equ	0xFF6
  7243                           tablat	equ	0xFF5
  7244                           prodh	equ	0xFF4
  7245                           prodl	equ	0xFF3
  7246                           intcon	equ	0xFF2
  7247                           wreg	equ	0xFE8
  7248                           indf2	equ	0xFDF
  7249                           postinc2	equ	0xFDE
  7250                           postdec2	equ	0xFDD
  7251                           fsr2h	equ	0xFDA
  7252                           fsr2l	equ	0xFD9
  7253                           status	equ	0xFD8


Data Sizes:
    Strings     36
    Constant    17
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     61      61
    BANK0           160     67      67
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_printf@q	PTR unsigned char  size(2) Largest target is 33
		 -> lcd_printf@buf(BANK0[33]), 

    lcd_printf@ramstring	PTR unsigned char  size(2) Largest target is 0

    lcd_printf@romstring	PTR far unsigned char  size(2) Largest target is 0

    lcd_printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[7]), STR_3(CODE[4]), 
		 -> STR_2(CODE[6]), STR_1(CODE[16]), 

    lcd_printf@ap	PTR void [1] size(2) Largest target is 1
		 -> ?_lcd_printf(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_printf
    _pwm_setdc2->___wmul
    _pwm_setdc1->___wmul
    _lcd_printf->___ftadd
    _lcd_repete_n->_lcd_write_data_busy
    _lcd_putc->_lcd_position
    _lcd_write_data_busy->_lcd_write_cmd_data
    _lcd_position->_lcd_write_cmd_busy
    ___lwtoft->___ftpack
    ___ftneg->___lwtoft
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftneg
    _lcd_init->_lcd_write_cmd_busy
    _lcd_clear->_lcd_write_cmd_busy
    _lcd_write_cmd_busy->_lcd_write_cmd_data

Critical Paths under _main in BANK0

    _main->_lcd_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   30658
                                             43 COMRAM    18    18      0
                         _OpenTimer0
                         _ReadTimer0
                             ___wmul
                           _adc_init
                           _adc_read
                           _lcd_init
                       _lcd_position
                         _lcd_printf
                           _pwm_init
                         _pwm_setdc1
                         _pwm_setdc2
 ---------------------------------------------------------------------------------
 (1) _pwm_setdc2                                           4     2      2    1032
                                              6 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwm_setdc1                                           4     2      2    1032
                                              6 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             2     1      1     164
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _lcd_printf                                          84    74     10   22130
                                             26 COMRAM    17     7     10
                                              0 BANK0     67    67      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lwtoft
                           _lcd_putc
                       _lcd_repete_n
                _lcd_write_data_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_repete_n                                         2     1      1     794
                                              2 COMRAM     2     1      1
                _lcd_write_data_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0     855
                                              5 COMRAM     1     1      0
                       _lcd_position
                 _lcd_write_cmd_busy
                _lcd_write_data_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data_busy                                  1     1      0      66
                                              1 COMRAM     1     1      0
                           _lcd_busy
                 _lcd_write_cmd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_position                                         3     2      1     591
                                              2 COMRAM     3     2      1
                 _lcd_write_cmd_busy
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2640
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     404
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     273
                                             11 COMRAM     3     0      3
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3222
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     440
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3024
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3862
                                             14 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2466
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     132
                                              2 COMRAM     1     1      0
                          _lcd_clear
                        _lcd_clock_e
                 _lcd_write_cmd_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0      66
                 _lcd_write_cmd_busy
 ---------------------------------------------------------------------------------
 (3) _lcd_write_cmd_busy                                   1     1      0      66
                                              1 COMRAM     1     1      0
                           _lcd_busy
                 _lcd_write_cmd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_write_cmd_data                                   1     1      0      44
                                              0 COMRAM     1     1      0
                        _lcd_clock_e
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             0     0      0       0
                        _lcd_clock_e
 ---------------------------------------------------------------------------------
 (4) _lcd_clock_e                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    4111
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ReadTimer0                                           4     2      2      47
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _ReadTimer0
   ___wmul
   _adc_init
   _adc_read
   _lcd_init
     _lcd_clear
       _lcd_write_cmd_busy
         _lcd_busy
           _lcd_clock_e
         _lcd_write_cmd_data
           _lcd_clock_e
     _lcd_clock_e
     _lcd_write_cmd_busy
       _lcd_busy
         _lcd_clock_e
       _lcd_write_cmd_data
         _lcd_clock_e
   _lcd_position
     _lcd_write_cmd_busy
       _lcd_busy
         _lcd_clock_e
       _lcd_write_cmd_data
         _lcd_clock_e
   _lcd_printf
     ___ftadd
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
     ___lldiv
     ___llmod
     ___lwtoft
       ___ftpack
     _lcd_putc
       _lcd_position
         _lcd_write_cmd_busy
           _lcd_busy
             _lcd_clock_e
           _lcd_write_cmd_data
             _lcd_clock_e
       _lcd_write_cmd_busy
         _lcd_busy
           _lcd_clock_e
         _lcd_write_cmd_data
           _lcd_clock_e
       _lcd_write_data_busy
         _lcd_busy
           _lcd_clock_e
         _lcd_write_cmd_data
           _lcd_clock_e
     _lcd_repete_n
       _lcd_write_data_busy
         _lcd_busy
           _lcd_clock_e
         _lcd_write_cmd_data
           _lcd_clock_e
     _lcd_write_data_busy
       _lcd_busy
         _lcd_clock_e
       _lcd_write_cmd_data
         _lcd_clock_e
   _pwm_init
   _pwm_setdc1
     ___wmul (ARG)
   _pwm_setdc2
     ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     3D      3D       1       64.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      43       5       41.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Dec 23 15:47:59 2019

               ?_lcd_repete_n 0003                            l42 1760           ___wmul@multiplicand 0003  
               ?_lcd_position 0003                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  ___ftadd@exp1 001A  
                ___ftadd@exp2 0019                  ___ftadd@sign 0018                           l201 0A34  
                         l114 25C8                           l231 0BF4                           l316 11EC  
                         l244 0CF2                           l317 120C                           l318 11FE  
                         l191 0986                           l184 0932                           l273 0E94  
                         l186 098A                           l267 0E42                           l284 0F38  
                         l285 0F56                           l277 0F04                           l374 24E6  
                         l286 0F42                           l474 2662                           l475 2664  
                         l804 1DCE                           l815 20DC                           l780 1CD8  
                         l757 219C                           l837 263A                           l784 1D02  
                         l882 23FA                           l795 1DB2                           l892 2460  
                __CFG_CPB$OFF 000000                           _PR2 000FCB                  __CFG_CPD$OFF 000000  
                 main@Vitesse 003C                           wreg 000FE8               ReadTimer0@timer 0003  
                __CFG_LVP$OFF 000000                  ___ftdiv@cntr 0012                  ___ftdiv@sign 0017  
                __CFG_WDT$OFF 000000                          l3020 0886                          l3022 088C  
                        l3014 0874                          l1600 221A                          l3120 0AA0  
                        l3016 087A                          l3008 0848                          l3210 0C5A  
                        l3130 0AD4                          l3122 0AB6                          l3106 0A6A  
                        l3018 0880                          l3026 0892                          l3300 0E84  
                        l3140 0AFA                          l3132 0ADA                          l3060 0976  
                        l3052 0936                          l3028 08B4                          l1606 2226  
                        l3134 0AE4                          l3126 0ACC                          l3118 0A9C  
                        l3054 094A                          l1608 225A                          l2600 2154  
                        l3312 0EC0                          l3216 0C80                          l3208 0C4A  
                        l3160 0B58                          l3056 0952                          l1570 21CA  
                        l3410 111E                          l3402 10FC                          l3314 0EC4  
                        l3322 0ED6                          l3242 0D0A                          l3226 0CBE  
                        l3218 0C86                          l3170 0B88                          l3162 0B64  
                        l3090 0A24                          l3082 09E4                          l3066 0994  
                        l2604 216A                          l2700 1DAA                          l3316 0EC8  
                        l3260 0D5C                          l3156 0B4C                          l3148 0B1C  
                        l3084 09F8                          l1582 21E8                          l1574 21D4  
                        l1566 21C0                          l2606 2188                          l2630 2482  
                        l3502 1344                          l3422 115C                          l3414 1130  
                        l3334 0F32                          l3326 0F10                          l3318 0ECE  
                        l3246 0D12                          l3166 0B76                          l3086 0A00  
                        l2608 2192                          l3504 1352                          l3344 0F50  
                        l3280 0DCC                          l3256 0D48                          l3168 0B82  
                        l3096 0A3E                          l3600 1660                          l1594 2208  
                        l1578 21DE                          l2706 1DEA                          l2802 1FDE  
                        l2642 24B6                          l2634 2492                          l3522 139E  
                        l3514 137C                          l3434 119E                          l3426 116A  
                        l3418 1148                          l3290 0E3E                          l3258 0D58  
                        l3194 0C0C                          l3178 0BC0                          l3610 16D0  
                        l1588 21F8                          l2716 1E1A                          l2732 2078  
                        l2900 23EC                          l3540 14E0                          l3532 143C  
                        l3508 135C                          l3428 1172                          l3380 1068  
                        l3372 1040                          l3356 0FBE                          l3348 0F74  
                        l3276 0DB6                          l3268 0D80                          l3700 1A9C  
                        l3620 170E                          l3604 1678                          l2726 2050  
                        l2822 235A                          l2806 1FEE                          l2910 242A  
                        l2638 24A6                          l2646 26B6                          l3518 138E  
                        l3462 127C                          l3382 1070                          l3198 0C14  
                        l3710 1B06                          l3630 17B8                          l2568 269E  
                        l2592 211E                          l2680 1D40                          l2664 1D10  
                        l2752 20B6                          l2912 242E                          l2576 2674  
                        l2584 2688                          l2648 26BC                          l3544 14F4  
                        l3536 144E                          l3392 1094                          l3384 1076  
                        l3296 0E62                          l3288 0E14                          l3552 150C  
                        l3640 1818                          l3624 1720                          l3720 1C02  
                        l3616 16F6                          l2690 1D76                          l2658 1CE6  
                        l2818 232A                          l2842 1E6C                          l3490 131A  
                        l3482 12D2                          l3474 12B6                          l3298 0E80  
                        l3554 1584                          l3714 1B56                          l3706 1AF4  
                        l3650 1880                          l3642 1828                          l3634 17C8  
                        l2596 212C                          l2692 1D7E                          l2828 2386  
                        l2772 1F5C                          l2860 1ED2                          l2916 2452  
                        l2908 241E                          l3548 14FE                          l3468 129C  
                        l3396 10AA                          l3556 158C                          l3716 1B60  
                        l3660 18EA                          l3644 1830                          l3628 17B0  
                        l2598 2136                          l2686 1D62                          l2870 1EFA  
                        l3478 12C4                          l3398 10B0                          l3670 195A  
                        l3662 18FA                          l3654 1892                          l3718 1BA2  
                        l2688 1D6C                          l2792 1FB6                          l2872 1F06  
                        l2864 1EE2                          l3680 19CA                          l3664 1902  
                        l2698 1DA0                          l2778 1F84                          l2874 1F0C  
                        l2890 23B8                          l3498 133A                          l3690 1A3A  
                        l3674 19AA                          l3594 1640                          l3578 15D2  
                        l2796 1FC6                          l2892 23BC                          l3684 1A1A  
                        l3676 19B2                          l3668 1952                          l2878 1F22  
                        l3686 1A22                          l3678 19C2                          l3598 1650  
                        l2888 23AC                          l2992 251E                          l2984 250C  
                        l3696 1A8A                          l3688 1A32                          l2994 2522  
                        l2986 2510                          STR_1 0812                          STR_2 0829  
                        STR_3 082F                          STR_4 0822                          STR_6 0833  
                        u4011 165E                          u4020 1670                          u2341 1CA4  
                        u2351 1CB8                          u2601 1F44                          u4060 1706  
               __CFG_DEBUG$ON 000000                          u2621 1F6C                          u2701 1E50  
                        u4070 171E                          u2551 2038                          u2720 1E8A  
                        u4307 22D2                          u2571 2060                          u4091 17C6  
                        u2725 1E82                          u4181 19C0                          u4267 2274  
                        u4277 2294                          u4287 22AC                          u4297 22C0  
                        u3970 1614                          u3980 1626                          u3978 1616  
                        u3988 1628                          _TMR2 000FCC                   lcd_printf@c 00A2  
                 lcd_printf@f 001B                   lcd_printf@i 008D                   lcd_printf@k 0089  
                 lcd_printf@n 009B                   lcd_printf@q 0086                   lcd_printf@w 008E  
                 lcd_printf@x 0096    pwm_setdc1@cycles_etat_haut 0007                          _main 15AC  
                ___ftpack@arg 0001                  ___ftpack@exp 0004                          fsr2h 000FDA  
                        indf2 000FDF                          fsr2l 000FD9                          prodh 000FF4  
                        prodl 000FF3                          start 0000                  ___ftmul@cntr 0016  
                ___param_bank 000000                  ___ftmul@sign 0017                ??_lcd_repete_n 0004  
                ___fttol@exp1 000F                  ___fttol@lval 000B                ??_lcd_position 0004  
               __CFG_PLLDIV$5 000000                         ?_main 0001               __end_of___ftadd 1E40  
             __end_of___ftdiv 210E               __end_of___ftneg 2648               __end_of___lldiv 240C  
             __end_of___ftmul 2028                         _T0CON 000FD5                         _T1CON 000FCD  
             __end_of___llmod 2472               __end_of___fttol 1F34                         _T2CON 000FCA  
                       _T3CON 000FB1                         _TMR0H 000FD7                         _TMR1H 000FCF  
                       _TMR0L 000FD6                         _TMR1L 000FCE                         _TMR3H 000FB3  
                       _TMR3L 000FB2                         _PORTD 000F83                 __CFG_USBDIV$2 000000  
                       _TRISA 000F92                         _TRISD 000F95                         _TRISE 000F96  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                  lcd_printf@ap 009D  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                 ___ftpack@sign 0005                         tablat 000FF5  
                       status 000FD8               __initialization 26EA                  __end_of_main 1C94  
                  _ReadTimer0 26D8                        ??_main 002C                 ___fttol@sign1 000A  
               __activetblptr 000002   __end_of_lcd_write_data_busy 269C                 lcd_repete_n@c 0003  
                      _ADCON0 000FC2                        _ADCON1 000FC1                 lcd_repete_n@n 0004  
                      _ADCON2 000FC0              ___llmod@dividend 0001                        _ADRESH 000FC4  
                      _ADRESL 000FC3                        _CCPR1L 000FBE                        _CCPR2L 000FBB  
            __end_of___ftpack 21BC              __end_of_adc_init 2262              __end_of_adc_read 25DA  
                  _OpenTimer0 2648              __end_of___lwtoft 2624                __CFG_VREGEN$ON 000000  
        __size_of_lcd_clock_e 0012              __end_of_lcd_busy 24F8              __end_of_lcd_init 22FA  
               lcd_printf@buf 0060              __end_of_lcd_putc 24BE                        ___ftge 22FA  
                      ___wmul 25DA                     ??___ftadd 0015                     ??___ftdiv 000F  
                   ??___ftneg 000F                     ??___lldiv 0009                     ??___ftmul 000F  
                   ??___llmod 0009                     ??___fttol 0005              OpenTimer0@config 0001  
            __end_of_s_digits 0812    pwm_setdc2@cycles_etat_haut 0007                        main@n1 002E  
                      main@n2 0038                        main@n3 003A                        main@n4 0030  
       ___ftmul@f3_as_product 0013                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8              __end_of_pwm_init 2530  
        __end_of_lcd_repete_n 26C6          __end_of_lcd_position 2686                    __accesstop 0060  
     __end_of__initialization 26EA               __CFG_PBADEN$OFF 000000                    ___ftadd@f1 000F  
                  ___ftadd@f2 0012                    ___ftge@ff1 0001                    ___ftge@ff2 0004  
               ___rparam_used 000001   __size_of_lcd_write_cmd_data 002C                    ___ftdiv@f1 0009  
                  ___ftdiv@f2 000C                    ___ftdiv@f3 0013   __size_of_lcd_write_cmd_busy 0016  
                  ___ftneg@f1 000C                    ___ftmul@f1 0009                    ___ftmul@f2 000C  
                  ___fttol@f1 0001                __pcstackCOMRAM 0001             main@debutDeCourse 0032  
                 ?_ReadTimer0 0001                    ___lwtoft@c 0009            __size_of_lcd_clear 0008  
                 ?_OpenTimer0 0001                       ?___ftge 0001                       ?___wmul 0001  
                     _CCP1CON 000FBD                       _CCP2CON 000FBA                     ?___ftpack 0001  
                   ?_adc_init 0001                     ?_adc_read 0001                     ?___lwtoft 0009  
    lcd_printf@have_precision 0095                    _lcd_printf 0838                     ?_lcd_busy 0001  
                   ?_lcd_init 0001                     ?_lcd_putc 0001           __size_of_ReadTimer0 0012  
           lcd_position@ligne 0004                       __Hparam 0000                       __Lparam 0000  
           __end_of_lcd_clear 26FC                lcd_printf@cval 009A                lcd_printf@larg 0090  
              lcd_printf@sign 0088                lcd_printf@size 0094               __size_of___ftge 0090  
                     ___ftadd 1C94                       ___ftdiv 2028                       ___ftneg 2624  
                     ___lldiv 238A               __size_of___wmul 0026                       ___ftmul 1F34  
                     ___llmod 240C                       ___fttol 1E40                     ?_pwm_init 0001  
                __psmallconst 0800                lcd_putc@lettre 0006                       __pcinit 26EA  
                  ??___ftpack 0006                       __ramtop 0800           __size_of_OpenTimer0 0020  
                  ??_adc_init 0001                    ??_adc_read 0003                       __ptext0 15AC  
                     __ptext1 255C                       __ptext2 2586                       __ptext3 24F8  
                     __ptext4 0838                       __ptext5 26B2                       __ptext6 2472  
                     __ptext7 2686                       __ptext8 2668                       __ptext9 2600  
                  ??___lwtoft 000C                     _T0CONbits 000FD5                     _T1CONbits 000FCD  
                   _T2CONbits 000FCA         __size_of_lcd_repete_n 0014                     _T3CONbits 000FB1  
       __size_of_lcd_position 001E                    ??_lcd_busy 0001                    ??_lcd_init 0003  
                  ??_lcd_putc 0006          end_of_initialization 26EA                 __Lmediumconst 0000  
             ___lldiv@divisor 0005               ___lldiv@counter 000D                       postdec2 000FDD  
                     postinc2 000FDE                    ??_pwm_init 0002                  _lcd_repete_n 26B2  
                _lcd_position 2668                     _PORTDbits 000F83                     _PORTEbits 000F84  
adc_init@numero_dernier_canal 0001                     _TRISCbits 000F94                     _TRISEbits 000F96  
         lcd_position@address 0005                   ?_lcd_printf 001B                    _pwm_setdc1 2586  
                  _pwm_setdc2 255C           lcd_position@colonne 0003  __size_of_lcd_write_data_busy 0016  
                 _CCP1CONbits 000FBD                   ___ftdiv@exp 0016                 ??_lcd_clock_e 0001  
                 _CCP2CONbits 000FBA                   ___ftmul@exp 0012                  ??_ReadTimer0 0003  
              __end_of___ftge 238A                __end_of___wmul 2600          lcd_write_data_busy@c 0002  
         start_initialization 26EA               main@finDeCourse 0034                  ??_OpenTimer0 0001  
          __end_of_ReadTimer0 26EA    __end_of_lcd_write_cmd_data 255C    __end_of_lcd_write_cmd_busy 26B2  
             ___llmod@divisor 0005               ___llmod@counter 0009                      ??___ftge 0007  
                    ??___wmul 0005           __end_of_lcd_clock_e 26D8           __size_of_lcd_printf 0D74  
          __end_of_OpenTimer0 2668             __size_of___ftpack 00AE                pwm_init@period 0002  
           __size_of_adc_init 00A6             __size_of_adc_read 002A             __size_of___lwtoft 0024  
               __pcstackBANK0 0060                   ?_pwm_setdc1 0007                   ?_pwm_setdc2 0007  
           __size_of_lcd_busy 003A             __size_of_lcd_init 0098             __size_of_lcd_putc 004C  
                    ?___ftadd 000F                      ?___ftdiv 0009                      ?___ftneg 000C  
                    ?___lldiv 0001                      ?___ftmul 0009                      ?___llmod 0001  
                    ?___fttol 0001                     _lcd_clear 26F4             __size_of_pwm_init 0038  
                 __smallconst 0800                ___wmul@product 0005                   _lcd_clock_e 26C6  
                    _PIE1bits 000F9D                      _PIE2bits 000FA0                      _PIR1bits 000F9E  
                    _PIR2bits 000FA1           __size_of_pwm_setdc1 002A           __size_of_pwm_setdc2 002A  
                  ?_lcd_clear 0001           _lcd_write_data_busy 2686                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0001                  ??_lcd_printf 0025          ?_lcd_write_data_busy 0001  
         lcd_write_cmd_data@c 0001           lcd_write_cmd_busy@c 0002                      __Hrparam 0000  
                    __Lrparam 0000          adc_read@numero_canal 0005               lcd_printf@flags 009F  
             lcd_printf@width 00A1              __size_of___ftadd 01AC            __end_of_lcd_printf 15AC  
            __size_of___ftdiv 00E6              __size_of___ftneg 0024              __size_of___lldiv 0082  
            __size_of___ftmul 00F4              __size_of___llmod 0066              __size_of___fttol 00F4  
                    ___ftpack 210E          __CFG_FOSC$ECPLLIO_EC 000000                      _adc_init 21BC  
                    _adc_read 25B0                      ___lwtoft 2600                      __ptext10 240C  
                    __ptext11 238A                      __ptext20 26F4                      __ptext12 1E40  
                    __ptext21 269C                      __ptext13 2624                      __ptext22 2530  
                    __ptext14 1F34                      __ptext23 24BE                      __ptext15 22FA  
                    __ptext24 26C6                      __ptext16 2028                      __ptext25 25B0  
                    __ptext17 1C94                      __ptext26 21BC                      __ptext18 210E  
                    __ptext27 25DA                      __ptext19 2262                      __ptext28 26D8  
                    __ptext29 2648                      _lcd_busy 24BE                      _lcd_init 2262  
                    _lcd_putc 2472         ??_lcd_write_data_busy 0002                 __size_of_main 06E8  
                    _s_digits 0801            _lcd_write_cmd_data 2530                      _pwm_init 24F8  
          _lcd_write_cmd_busy 269C                   ??_lcd_clear 0003                      main@etat 0036  
       __CFG_CPUDIV$OSC1_PLL2 000000           ?_lcd_write_cmd_data 0001           ?_lcd_write_cmd_busy 0001  
                  _INTCONbits 000FF2                  ??_pwm_setdc1 0009                  ??_pwm_setdc2 0009  
         lcd_printf@digit_cnt 008F           lcd_printf@have_sign 008B              ___lldiv@dividend 0001  
        ??_lcd_write_cmd_data 0001          ??_lcd_write_cmd_busy 0002          lcd_printf@prefix_cnt 008C  
          __end_of_pwm_setdc1 25B0            __end_of_pwm_setdc2 2586              ___lldiv@quotient 0009  
         lcd_printf@ramstring 0081           lcd_printf@sign_char 0083           lcd_printf@precision 00A0  
         lcd_printf@space_cnt 0099             pwm_init@nb_canaux 0001                  ?_lcd_clock_e 0001  
         lcd_printf@romstring 0084  
